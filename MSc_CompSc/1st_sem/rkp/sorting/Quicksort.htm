<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html class="win firefox firefox3 gecko gecko1" dir="ltr" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>


<title>Quicksort - Wikipedia, the free encyclopedia</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="generator" content="MediaWiki 1.16alpha-wmf">
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit">
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit">
<link rel="stylesheet" type="text/css" href="Quicksort_files/combined.css">
<link rel="stylesheet" type="text/css" href="Quicksort_files/jquery-ui-1.css">
<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png">
<link rel="shortcut icon" href="http://en.wikipedia.org/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)">
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/">
<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=rss">
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" href="Quicksort_files/shared.css" type="text/css" media="screen">
<link rel="stylesheet" href="Quicksort_files/commonPrint.css" type="text/css" media="print">
<link rel="stylesheet" href="Quicksort_files/main.css" type="text/css" media="screen">
<link rel="stylesheet" href="Quicksort_files/main_002.css" type="text/css" media="handheld">
<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<link rel="stylesheet" href="Quicksort_files/index_003.css" type="text/css" media="all">
<link rel="stylesheet" href="Quicksort_files/index_005.css" type="text/css" media="print">
<link rel="stylesheet" href="Quicksort_files/index_002.css" type="text/css" media="handheld">
<link rel="stylesheet" href="Quicksort_files/index_004.css" type="text/css" media="all">
<link rel="stylesheet" href="Quicksort_files/index.css" type="text/css" media="all">
<script type="text/javascript">
var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Quicksort",
wgTitle="Quicksort",
wgAction="view",
wgArticleId=3268249,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=332399091,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgTrackingToken="8c301f9f9d295aedcbcd6bc895c56673",
wgClickTrackingIsThrottled=true,
wgNotice="",
wgNoticeLocal="";
</script>
<script src="Quicksort_files/wikibits.js" type="text/javascript"></script>
<script src="Quicksort_files/ajax.js" type="text/javascript"></script>
<script src="Quicksort_files/mwsuggest.js" type="text/javascript"></script>
<script type="text/javascript" src="Quicksort_files/js2.js"></script>
<script type="text/javascript" src="Quicksort_files/plugins.js"></script>
<script type="text/javascript" src="Quicksort_files/CollapsibleTabs.js"></script>
<script type="text/javascript" src="Quicksort_files/ClickTracking.js"></script>
<script type="text/javascript" src="Quicksort_files/centralnotice.js"></script><style type="text/css">
#centralNotice .siteNoticeSmall{display:none;}
#centralNotice .siteNoticeSmallAnon{display:none;}
#centralNotice .siteNoticeSmallUser{display:none;}
#centralNotice.collapsed .siteNoticeBig{display:none;}
#centralNotice.collapsed .siteNoticeSmall{display:block;}
#centralNotice.collapsed .siteNoticeSmallUser{display:block;}
#centralNotice.collapsed .siteNoticeSmallAnon{display:block;}
#centralNotice.anonnotice .siteNoticeSmallUser{display:none !important;}
#centralNotice.usernotice .siteNoticeSmallAnon{display:none !important;}
</style>


<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?257z2"></script>
	<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
<script src="Quicksort_files/index.php" type="text/javascript"></script><script type="text/javascript" src="Quicksort_files/index_002.php"></script>

<style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.python.source-python .de1, .python.source-python .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.python.source-python  {font-family:monospace;}
.python.source-python .imp {font-weight: bold; color: red;}
.python.source-python li, .python.source-python .li1 {font-weight: normal; vertical-align:top;}
.python.source-python .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.python.source-python .li2 {font-weight: bold; vertical-align:top;}
.python.source-python .kw1 {color: #ff7700;font-weight:bold;}
.python.source-python .kw2 {color: #008000;}
.python.source-python .kw3 {color: #dc143c;}
.python.source-python .kw4 {color: #0000cd;}
.python.source-python .co1 {color: #808080; font-style: italic;}
.python.source-python .coMULTI {color: #808080; font-style: italic;}
.python.source-python .es0 {color: #000099; font-weight: bold;}
.python.source-python .br0 {color: black;}
.python.source-python .sy0 {color: #66cc66;}
.python.source-python .st0 {color: #483d8b;}
.python.source-python .nu0 {color: #ff4500;}
.python.source-python .me1 {color: black;}
.python.source-python .ln-xtra, .python.source-python li.ln-xtra, .python.source-python div.ln-xtra {background-color: #ffc;}
.python.source-python span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">#bodyContent { position:relative; } 
.topicon { position:absolute; top:-2em !important;}
#coordinates{ position:absolute; top:1px !important; right:0px !important;}</style></head><body class="mediawiki ltr ns-0 ns-subject page-Quicksort skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a id="top"></a>
		<div id="siteNotice"><script type="text/javascript">if (wgNotice != '') document.writeln(wgNotice);</script><div id="centralNotice" class="expanded anonnotice"><style type="text/css">
/* Styles for Notices */
.notice-all a {
 text-decoration: none;
}
.notice-all a:hover span {
 text-decoration: underline;
}
div.notice-all div, div.notice-all span {
 margin: 0 !important;
}
.notice-pitch {
 display: inline-block;
 background-color: transparent;
}
.notice-pitch-text {
 float: left;
 overflow: visible;
 color: black;
 font-family: sans-serif;
 font-weight: bold;
 text-align: center;
 font-size: 2.25em;
 line-height: 1em;
 padding: 0.5em !important;
 cursor: pointer;
}
.notice-slogan {
 color: #6E98C2;
 font-weight: bold;
 padding-right: 1em;
}
.siteNoticeBig {
 position: relative;
 float: left;
 width: 100%;
 border: solid 1px silver;
 background-color: #f3f3f3;
 margin-bottom: 1em;
 padding-top: 1em;
 padding-bottom: 1em;
}
 .siteNoticeBig .notice-toggle {
  position: absolute;
  top: 0em;
  right: 0.5em;
  font-size: 0.75em;
 }
.siteNoticeSmallAnon {
 position: relative;
 float: left;
 width: 100%;
 border: solid 1px silver;
 background-color: #f3f3f3;
 text-align: center;
 padding: 0.1em 0;
 margin-bottom: 1em;
}
 .siteNoticeSmallAnon .notice-toggle {
  float: right;
  font-size: 0.75em;
  padding-right: 0.5em;
 }
 .siteNoticeSmallAnon .notice-slogan {
  padding-left: 0.5em;
 }
.siteNoticeSmallUser {
 position: relative;
 float: left;
 width: 100%;
 text-align: center;
 margin-bottom: 1em;
}
 .siteNoticeSmallUser .notice-toggle {
  float: right;
  font-size: 0.75em;
 }
</style>
<script>
/* @param mode string to be appended to the utm_source paramter like "utm_source=[notice]_[mode]" */
function goToDonationPage( mode ) {
 var url = 'http://meta.wikimedia.org/wiki/Special:GeoLite?lang=en&&utm_medium=sitenotice&utm_campaign=fundraiser2009&utm_source=2009_Jimmy_Appeal1';
 if ( mode && mode.length ) { 
  url += '_' + mode;
 }
 var targets = String( 'Appeal, Appeal2' ).split(',');
 if ( targets.length ) {
  url += '&target=' + targets[Math.floor( Math.random() * targets.length )].replace(/^\s+|\s+$/, '');
 }
 window.location = url;
}
</script>
<div class="notice-all siteNoticeBig" align="center">
 <a class="notice-pitch" href="javascript:goToDonationPage()">
  <div class="notice-pitch-text">
   <span>Please read:<br>A personal appeal from<br>Wikipedia founder Jimmy Wales</span>
  </div>
  <div style="clear: both;"></div>
 </a>
 <div class="notice-toggle">[<a href="#" onclick="toggleNotice();return false"><span>Hide</span></a>]</div>
 <div style="clear: both;"></div>
</div>
<div class="notice-all siteNoticeSmallAnon">
 <div class="notice-toggle">[<a href="#" onclick="toggleNotice()"><span>Show</span></a>]</div>
 <a class="notice-slogan" href="javascript:goToDonationPage('collapsed')">
   <span>Wikipedia</span>
   <img src="Quicksort_files/Wikipedia-logo-small_Fundraising_2009.png" alt="">
   <span>Forever</span>
 </a>
 <span>Our shared knowledge. Our shared treasure.</span>
 <a href="javascript:goToDonationPage('collapsed')">
  <span>Help us protect it.</span>
 </a>
 <div style="clear: both;"></div>
</div>
<div class="notice-all siteNoticeSmallUser">
 <div class="notice-toggle">[<a href="#" onclick="toggleNotice()"><span>Show</span></a>]</div>
 <a class="notice-slogan" href="javascript:goToDonationPage('collapsed')">
  <span>Wikipedia</span>
  <img src="Quicksort_files/Wikipedia-logo-small_Fundraising_2009.png" alt="">
  <span>Forever</span>
 </a>
 <span>Our shared knowledge. Our shared treasure.</span>
 <a href="javascript:goToDonationPage('collapsed')">
  <span>Help us protect it.</span>
 </a>
 <div style="clear: both;"></div>
</div>
<div style="clear: both;"></div></div>
</div>		<h1 id="firstHeading" class="firstHeading">Quicksort</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="infobox" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;" cellspacing="5">
<caption class="" style="font-size: 125%; font-weight: bold;">Quicksort</caption>
<tbody><tr class="">
<td colspan="2" class="" style="text-align: center;"><a href="http://en.wikipedia.org/wiki/File:Sorting_quicksort_anim.gif" class="image" title="Quicksort in action on a list of numbers. The horizontal lines are pivot values."><img alt="Quicksort in action on a list of numbers. The horizontal lines are pivot values." src="Quicksort_files/Sorting_quicksort_anim.gif" width="280" height="214"></a><br>
<span style="">Visualization of the quicksort algorithm. The horizontal lines are pivot values.</span></td>
</tr>
<tr class="">
<th style="text-align: left;">Class</th>
<td class="" style=""><a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithm</a></td>
</tr>
<tr class="">
<th style="text-align: left;"><a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case performance</a></th>
<td class="" style=""><span class="texhtml">Θ(<i>n</i><sup>2</sup>)</span></td>
</tr>
<tr class="">
<th style="text-align: left;"><a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Best case performance</a></th>
<td class="" style=""><span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span></td>
</tr>
<tr class="">
<th style="text-align: left;"><a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Average case performance</a></th>
<td class="" style=""><span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span></td>
</tr>
<tr class="">
<th style="text-align: left;"><a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case space complexity</a></th>
<td class="" style=""><span class="texhtml">Θ(<i>n</i>)</span></td>
</tr>
</tbody></table>
<p><b>Quicksort</b> is a well-known <a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithm</a> developed by <a href="http://en.wikipedia.org/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a> that, <a href="http://en.wikipedia.org/wiki/Average_performance" title="Average performance" class="mw-redirect">on average</a>, makes <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> (<a href="http://en.wikipedia.org/wiki/Big_O_notation" title="Big O notation">big O notation</a>) comparisons to sort <i>n</i> items. In the <a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">worst case</a>, it makes <span class="texhtml">Θ(<i>n</i><sup>2</sup>)</span>
comparisons, though if implemented correctly this behavior is rare.
Typically, quicksort is significantly faster in practice than other <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>
algorithms, because its inner loop can be efficiently implemented on
most architectures, and in most real-world data, it is possible to make
design choices which minimize the probability of requiring <a href="http://en.wikipedia.org/wiki/Quadratic_time" title="Quadratic time" class="mw-redirect">quadratic time</a>.</p>
<p>Quicksort (also known as "partition-exchange sort") is a <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">comparison sort</a> and, in efficient implementations, is not a <a href="http://en.wikipedia.org/wiki/Sorting_algorithm#Classification" title="Sorting algorithm">stable sort</a>.</p>
<table id="toc" class="toc">
<tbody><tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
 <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">hide</a>]</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Algorithm"><span class="tocnumber">2</span> <span class="toctext">Algorithm</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#Parallelizations"><span class="tocnumber">2.1</span> <span class="toctext">Parallelizations</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="#Formal_analysis"><span class="tocnumber">3</span> <span class="toctext">Formal analysis</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="#Randomized_quicksort_expected_complexity"><span class="tocnumber">3.1</span> <span class="toctext">Randomized quicksort expected complexity</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Average_complexity"><span class="tocnumber">3.2</span> <span class="toctext">Average complexity</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Space_complexity"><span class="tocnumber">3.3</span> <span class="toctext">Space complexity</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-8"><a href="#Selection-based_pivoting"><span class="tocnumber">4</span> <span class="toctext">Selection-based pivoting</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Variants"><span class="tocnumber">5</span> <span class="toctext">Variants</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Comparison_with_other_sorting_algorithms"><span class="tocnumber">6</span> <span class="toctext">Comparison with other sorting algorithms</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Example_in_Python"><span class="tocnumber">7</span> <span class="toctext">Example in Python</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#Notes"><span class="tocnumber">9</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#References"><span class="tocnumber">10</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#External_links"><span class="tocnumber">11</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</tbody></table>
<script type="text/javascript">
//<![CDATA[
if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline" id="History">History</span></h2>
<p>The quicksort algorithm was developed by <a href="http://en.wikipedia.org/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a> in 1962 while in the <a href="http://en.wikipedia.org/wiki/Soviet_Union" title="Soviet Union">Soviet Union</a>, as a visiting student at <a href="http://en.wikipedia.org/wiki/Moscow_State_University" title="Moscow State University" class="mw-redirect">Moscow State University</a>. At that time, Hoare worked in a project on <a href="http://en.wikipedia.org/wiki/Machine_translation" title="Machine translation">machine translation</a> for the <a href="http://en.wikipedia.org/wiki/National_Physical_Laboratory,_UK" title="National Physical Laboratory, UK" class="mw-redirect">National Physical Laboratory</a>.
He developed the algorithm in order to sort the words to be translated,
to make them more easily matched to an already-sorted
Russian-to-English dictionary that was stored on magnetic tape.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0"><span>[</span>1<span>]</span></a></sup></p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=2" title="Edit section: Algorithm">edit</a>]</span> <span class="mw-headline" id="Algorithm">Algorithm</span></h2>
<p>Quicksort sorts by employing a <a href="http://en.wikipedia.org/wiki/Divide_and_conquer_algorithm" title="Divide and conquer algorithm">divide and conquer</a> strategy to divide a <a href="http://en.wikipedia.org/wiki/List_%28computing%29" title="List (computing)">list</a> into two sub-lists.</p>
<div class="thumb tright">
<div class="thumbinner" style="width: 202px;"><a href="http://en.wikipedia.org/wiki/File:Quicksort-diagram.svg" class="image"><img alt="" src="Quicksort_files/200px-Quicksort-diagram.png" class="thumbimage" width="200" height="400"></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Quicksort-diagram.svg" class="internal" title="Enlarge"><img src="Quicksort_files/magnify-clip.png" alt="" width="15" height="11"></a></div>
Full example of quicksort on a random set of numbers. The boxed element
is the pivot. It is always chosen as the last element of the partition.</div>
</div>
</div>
<p>The steps are:</p>
<ol>
<li>Pick an element, called a <a href="http://en.wikipedia.org/wiki/Pivot_element" title="Pivot element"><i>pivot</i></a>, from the list.</li>
<li>Reorder the list so that all elements which are less than the pivot
come before the pivot and so that all elements greater than the pivot
come after it (equal values can go either way). After this
partitioning, the pivot is in its final position. This is called the <b>partition</b> operation.</li>
<li><a href="http://en.wikipedia.org/wiki/Recursion_%28computer_science%29" title="Recursion (computer science)">Recursively</a> sort the sub-list of lesser elements and the sub-list of greater elements.</li>
</ol>
<p>The <a href="http://en.wikipedia.org/wiki/Base_case#Recursive_programming" title="Base case" class="mw-redirect">base case</a> of the recursion are lists of size zero or one, which are always sorted.</p>
<p>In simple <a href="http://en.wikipedia.org/wiki/Pseudocode" title="Pseudocode">pseudocode</a>, the algorithm might be expressed as this:</p>
<pre> <b>function</b> quicksort(array)
     <b>var</b> <i>list</i> less, greater
     <b>if</b> length(array) ≤ 1  
         <b>return</b> array  
     select and remove a pivot value <i>pivot</i> from array
     <b>for each</b> x <b>in</b> array
         <b>if</b> x ≤ pivot <b>then</b> append x to less
         <b>else</b> append x to greater
     <b>return</b> concatenate(quicksort(less), pivot, quicksort(greater))
</pre>
<p>Notice that we only examine elements by comparing them to other elements. This makes quicksort a <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">comparison sort</a>. This version is also a <a href="http://en.wikipedia.org/wiki/Stable_sort" title="Stable sort" class="mw-redirect">stable sort</a>
(assuming that the "for each" method retrieves elements in original
order, and the pivot selected is the last among those of equal value).</p>
<p>The correctness of the partition algorithm is based on the following two arguments:</p>
<ul>
<li>At each iteration, all the elements processed so far are in the
desired position: before the pivot if less than or equal to the pivot's
value, after the pivot otherwise (loop invariant).</li>
<li>Each iteration leaves one fewer element to be processed (loop variant).</li>
</ul>
<p>The correctness of the overall algorithm follows from inductive
reasoning: for zero or one element, the algorithm leaves the data
unchanged; for a larger data set it produces the concatenation of two
parts, elements less than or equal to the pivot and elements greater
than it, themselves sorted by the recursive hypothesis.</p>
<p>The disadvantage of the simple version above is that it requires <span class="texhtml">Ω(<i>n</i>)</span> extra storage space, which is as bad as <a href="http://en.wikipedia.org/wiki/Merge_sort" title="Merge sort">merge sort</a>.
The additional memory allocations required can also drastically impact
speed and cache performance in practical implementations. There is a
more complex version which uses an <a href="http://en.wikipedia.org/wiki/In-place" title="In-place" class="mw-redirect">in-place</a> partition algorithm and can achieve the complete sort using <span class="texhtml"><i>O</i>(<i>l</i><i>o</i><i>g</i><i>n</i>)</span> space (not counting the input) use on average (for the <a href="http://en.wikipedia.org/wiki/Call_stack" title="Call stack">call stack</a>):</p>
<pre>  <b>function</b> partition(array, left, right, pivotIndex)
     pivotValue := array[pivotIndex]
     swap array[pivotIndex] and array[right] <i>// Move pivot to end</i>
     storeIndex := left
     <b>for</b> i <b> from </b> left <b>to</b> right - 1 <i>// left ≤ i &lt; right</i>  
         <b>if</b> array[i] ≤ pivotValue 
             swap array[i] and array[storeIndex]
             storeIndex := storeIndex + 1
     swap array[storeIndex] and array[right] <i>// Move pivot to its final place</i>
     <b>return</b> storeIndex
</pre>
<div class="thumb tright">
<div class="thumbinner" style="width: 202px;"><a href="http://en.wikipedia.org/wiki/File:Partition_example.svg" class="image"><img alt="" src="Quicksort_files/200px-Partition_example.png" class="thumbimage" width="200" height="244"></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Partition_example.svg" class="internal" title="Enlarge"><img src="Quicksort_files/magnify-clip.png" alt="" width="15" height="11"></a></div>
In-place partition in action on a small list. The boxed element is the
pivot element, blue elements are less or equal, and red elements are
larger.</div>
</div>
</div>
<p>This is the in-place partition algorithm. It partitions the portion of the array between indexes <i>left</i> and <i>right</i>, inclusively, by moving all elements less than or equal to <code>array[pivotIndex]</code>
to the beginning of the subarray, leaving all the greater elements
following them. In the process it also finds the final position for the
pivot element, which it returns. It temporarily moves the pivot element
to the end of the subarray, so that it doesn't get in the way. Because
it only uses exchanges, the final list has the same elements as the
original list. Notice that an element may be exchanged multiple times
before reaching its final place.</p>
<p>This form of the partition algorithm is not the original form;
multiple variations can be found in various textbooks, such as versions
not having the storeIndex. However, this form is probably the easiest
to understand.</p>
<p>Once we have this, writing quicksort itself is easy:</p>
<pre> <b>procedure</b> quicksort(array, left, right)
     <b>if</b> right &gt; left
         select a pivot index (e.g. pivotIndex := (left+right)/2)
         pivotNewIndex := partition(array, left, right, pivotIndex)
         quicksort(array, left, pivotNewIndex - 1)
         quicksort(array, pivotNewIndex + 1, right)
</pre>
<p>However, since <i>partition</i> reorders elements within a partition, this version of quicksort is not a stable sort.</p>
<p>It should be noted that in very early versions of quicksort, the
leftmost element of the partition would often be chosen as the pivot
element. Unfortunately, this causes worst-case behavior on already
sorted arrays, which is a rather common use-case. The problem was
easily solved by choosing either a random index for the pivot, or
choosing the middle index of the partition for the pivot.</p>
<p><br></p>
<p><br></p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=3" title="Edit section: Parallelizations">edit</a>]</span> <span class="mw-headline" id="Parallelizations">Parallelizations</span></h3>
<p>Like <a href="http://en.wikipedia.org/wiki/Merge_sort" title="Merge sort">merge sort</a>, quicksort can also be easily <a href="http://en.wikipedia.org/wiki/Parallel_algorithm" title="Parallel algorithm">parallelized</a>
due to its divide-and-conquer nature. Individual in-place partition
operations are difficult to parallelize, but once divided, different
sections of the list can be sorted in parallel. If we have <span class="texhtml"><i>p</i></span> processors, we can divide a list of <span class="texhtml"><i>n</i></span> elements into <span class="texhtml"><i>p</i></span> sublists in <span class="texhtml">Θ(<i>n</i>)</span> average time, then sort each of these in <img class="tex" alt="\textstyle\Theta\left(\frac{n}{p} \log\frac{n}{p}\right)" src="Quicksort_files/ae62541a5ac9e7824f72b4b9bf6707be.png"> average time. Ignoring the <span class="texhtml">Θ(<i>n</i>)</span> preprocessing, this is <a href="http://en.wikipedia.org/wiki/Linear_speedup" title="Linear speedup" class="mw-redirect">linear speedup</a>. Given <span class="texhtml"><i>n</i></span> processors, only <span class="texhtml">Θ(<i>n</i>)</span> time is required overall.</p>
<p>One advantage of parallel quicksort over other parallel sort
algorithms is that no synchronization is required. A new thread is
started as soon as a sublist is available for it to work on and it does
not communicate with other threads. When all threads complete, the sort
is done.</p>
<p>Other more sophisticated parallel sorting algorithms can achieve even better time bounds.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>2<span>]</span></a></sup> For example, in 1991 David Powers described a parallelized quicksort that can operate in <span class="texhtml"><i>O</i>(log<i>n</i>)</span> time given enough processors by performing partitioning implicitly.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>3<span>]</span></a></sup></p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=4" title="Edit section: Formal analysis">edit</a>]</span> <span class="mw-headline" id="Formal_analysis">Formal analysis</span></h2>
<p>From the initial description it's not obvious that quicksort takes <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>
time on average. It's not hard to see that the partition operation,
which simply loops over the elements of the array once, uses <span class="texhtml">Θ(<i>n</i>)</span> time. In versions that perform concatenation, this operation is also <span class="texhtml">Θ(<i>n</i>)</span>.</p>
<p>In the best case, each time we perform a partition we divide the
list into two nearly equal pieces. This means each recursive call
processes a list of half the size. Consequently, we can make only <span class="texhtml">log<i>n</i></span> nested calls before we reach a list of size 1. This means that the depth of the <a href="http://en.wikipedia.org/wiki/Call_stack" title="Call stack">call tree</a> is <span class="texhtml">Θ(log<i>n</i>)</span>.
But no two calls at the same level of the call tree process the same
part of the original list; thus, each level of calls needs only <span class="texhtml">Θ(<i>n</i>)</span> time all together (each call has some constant overhead, but since there are only <span class="texhtml">Θ(<i>n</i>)</span> calls at each level, this is subsumed in the <span class="texhtml">Θ(<i>n</i>)</span> factor). The result is that the algorithm uses only <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> time.</p>
<p>An alternate approach is to set up a <a href="http://en.wikipedia.org/wiki/Recurrence_relation" title="Recurrence relation">recurrence relation</a> for the <span class="texhtml"><i>T</i>(<i>n</i>)</span> factor, the time needed to sort a list of size <span class="texhtml"><i>n</i></span>. Because a single quicksort call involves <span class="texhtml">Θ(<i>n</i>)</span> factor work plus two recursive calls on lists of size <span class="texhtml"><i>n</i> / 2</span> in the best case, the relation would be:</p>
<dl>
<dd><img class="tex" alt="T(n) = \Theta(n) + 2T\left(\frac{n}{2}\right)." src="Quicksort_files/e84281b5ebf7145e301786b030119809.png"></dd>
</dl>
<p>The <a href="http://en.wikipedia.org/wiki/Master_theorem" title="Master theorem">master theorem</a> tells us that <span class="texhtml"><i>T</i>(<i>n</i>) = Θ(<i>n</i>log<i>n</i>)</span>.</p>
<p>In fact, it's not necessary to divide the list this precisely; even
if each pivot splits the elements with 99% on one side and 1% on the
other (or any other fixed fraction), the call depth is still limited to
<span class="texhtml">100<i>l</i><i>o</i><i>g</i><i>n</i></span>, so the total running time is still <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>.</p>
<p>In the worst case, however, the two sublists have size 1 and <span class="texhtml"><i>n</i> − 1</span> (for example, if the array consists of the same element by value), and the call tree becomes a linear chain of <span class="texhtml"><i>n</i></span> nested calls. The <span class="texhtml"><i>i</i></span>th call does <span class="texhtml">Θ(<i>n</i> − <i>i</i>)</span> work, and <img class="tex" alt="\sum_{i=0}^n (n-i) = \Theta(n^2)" src="Quicksort_files/502fb97c2dba1438b496ed542e02ad79.png">. The recurrence relation is:</p>
<dl>
<dd><span class="texhtml"><i>T</i>(<i>n</i>) = Θ(<i>n</i>) + <i>T</i>(0) + <i>T</i>(<i>n</i> − 1) = <i>O</i>(<i>n</i>) + <i>T</i>(<i>n</i> − 1).</span></dd>
</dl>
<p>This is the same relation as for <a href="http://en.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a> and <a href="http://en.wikipedia.org/wiki/Selection_sort" title="Selection sort">selection sort</a>, and it solves to <span class="texhtml"><i>T</i>(<i>n</i>) = Θ(<i>n</i><sup>2</sup>)</span>.
Given knowledge of which comparisons are performed by the sort, there
are adaptive algorithms that are effective at generating worst-case
input for quicksort on-the-fly, regardless of the pivot selection
strategy.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span>[</span>4<span>]</span></a></sup></p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=5" title="Edit section: Randomized quicksort expected complexity">edit</a>]</span> <span class="mw-headline" id="Randomized_quicksort_expected_complexity">Randomized quicksort expected complexity</span></h3>
<p>Randomized quicksort has the desirable property that, for any input, it requires only <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> <a href="http://en.wikipedia.org/wiki/Expected_value" title="Expected value">expected</a> time (averaged over all choices of pivots). But what makes random pivots a good choice?</p>
<p>Suppose we sort the list and then divide it into four parts. The two
parts in the middle will contain the best pivots; each of them is
larger than at least 25% of the elements and smaller than at least 25%
of the elements. If we could consistently choose an element from these
two middle parts, we would only have to split the list at most <span class="texhtml">2log<sub>2</sub><i>n</i></span> times before reaching lists of size 1, yielding an <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> algorithm.</p>
<p>A random choice will only choose from these middle parts half the
time. However, this is good enough. Imagine that you are flipping a
coin over and over until you get <span class="texhtml"><i>k</i></span> heads. Although this could take a long time, on average only <span class="texhtml">2<i>k</i></span> flips are required, and the chance that you won't get <span class="texhtml"><i>k</i></span> heads after <span class="texhtml">100<i>k</i></span> flips is highly improbable. By the same argument, quicksort's recursion will terminate on average at a call depth of only <span class="texhtml">2(2log<sub>2</sub><i>n</i>)</span>. But if its average call depth is <span class="texhtml">Θ(log<i>n</i>)</span>, and each level of the call tree processes at most <span class="texhtml"><i>n</i></span> elements, the total amount of work done on average is the product, <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>.
Note that the algorithm does not have to verify that the pivot is in
the middle half - if we hit it any constant fraction of the times, that
is enough for the desired complexity.</p>
<p>The outline of a formal proof of the <span class="texhtml"><i>O</i>(<i>n</i>log<i>n</i>)</span>
expected time complexity follows. Assume that there are no duplicates
as duplicates could be handled with linear time pre- and
post-processing, or considered cases easier than the analyzed. Choosing
a pivot, uniformly at random from <span class="texhtml">0</span> to <span class="texhtml"><i>n</i> − 1</span>, is then equivalent to choosing the size of one particular partition, uniformly at random from <span class="texhtml">0</span> to <span class="texhtml"><i>n</i> − 1</span>. With this observation, the continuation of the proof is analogous to the one given in the <a href="#Average_complexity">average complexity section</a>.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=6" title="Edit section: Average complexity">edit</a>]</span> <span class="mw-headline" id="Average_complexity">Average complexity</span></h3>
<p>Even if pivots aren't chosen randomly, quicksort still requires only <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>
time over all possible permutations of its input. Because this average
is simply the sum of the times over all permutations of the input
divided by <span class="texhtml"><i>n</i></span> factorial, it's
equivalent to choosing a random permutation of the input. When we do
this, the pivot choices are essentially random, leading to an algorithm
with the same running time as randomized quicksort.</p>
<p>More precisely, the average number of comparisons over all
permutations of the input sequence can be estimated accurately by
solving the recurrence relation:</p>
<dl>
<dd><img class="tex" alt="C(n) = n - 1 + \frac{1}{n} \sum_{i=0}^{n-1} (C(i)+C(n-i-1)) = 2n \ln n = 1.39n \log_2 n." src="Quicksort_files/d5515cdef9cfe2aa418eb65d602b2030.png"></dd>
</dl>
<p>Here, <span class="texhtml"><i>n</i> − 1</span> is the number of
comparisons the partition uses. Since the pivot is equally likely to
fall anywhere in the sorted list order, the sum is averaging over all
possible splits.</p>
<p>This means that, on average, quicksort performs only about 39% worse
than the ideal number of comparisons, which is its best case. In this
sense it is closer to the best case than the worst case. This fast
average runtime is another reason for quicksort's practical dominance
over other sorting algorithms.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=7" title="Edit section: Space complexity">edit</a>]</span> <span class="mw-headline" id="Space_complexity">Space complexity</span></h3>
<p>The space used by quicksort depends on the version used.</p>
<p>Quicksort has a space complexity of <span class="texhtml">Θ(log<i>n</i>)</span>, even in the worst case, when it is carefully implemented such that</p>
<ul>
<li>in-place partitioning is used. This requires <span class="texhtml">Θ(1)</span>.</li>
<li>After partitioning, the partition with the fewest elements is (recursively) sorted first, requiring at most <span class="texhtml">Θ(log<i>n</i>)</span> space. Then the other partition is sorted using <a href="http://en.wikipedia.org/wiki/Tail_recursion" title="Tail recursion">tail recursion</a> or iteration. (This idea is commonly attributed to R.Sedgewick <a href="http://www.cs.columbia.edu/%7Ehgs/teaching/isp/hw/qsort.c" class="external autonumber" rel="nofollow">[1]</a><a href="http://www.ugrad.cs.ubc.ca/%7Ecs260/chnotes/ch6/Ch6CovCompiled.html" class="external autonumber" rel="nofollow">[2]</a><a href="http://home.tiscalinet.ch/t_wolf/tw/ada95/sorting/index.html" class="external autonumber" rel="nofollow">[3]</a>)</li>
</ul>
<p>The version of quicksort with in-place partitioning uses only
constant additional space before making any recursive call. However, if
it has made <span class="texhtml">Θ(log<i>n</i>)</span> nested
recursive calls, it needs to store a constant amount of information
from each of them. Since the best case makes at most <span class="texhtml">Θ(log<i>n</i>)</span> nested recursive calls, it uses <span class="texhtml">Θ(log<i>n</i>)</span> space. The worst case makes <span class="texhtml">Θ(<i>n</i>)</span> nested recursive calls, and so needs <span class="texhtml">Θ(<i>n</i>)</span> space; Sedgewick's improved version using tail recursion requires <span class="texhtml">Θ(log<i>n</i>)</span> space in the worst case.</p>
<p>We are eliding a small detail here, however. If we consider sorting
arbitrarily large lists, we have to keep in mind that our variables
like <i>left</i> and <i>right</i> can no longer be considered to occupy constant space; it takes <span class="texhtml">Θ(log<i>n</i>)</span> bits to index into a list of <span class="texhtml"><i>n</i></span> items. Because we have variables like this in every stack frame, in reality quicksort requires <span class="texhtml">Θ((log<i>n</i>)<sup>2</sup>)</span> bits of space in the best and average case and <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>
space in the worst case. This isn't too terrible, though, since if the
list contains mostly distinct elements, the list itself will also
occupy <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> bits of space.</p>
<p>The not-in-place version of quicksort uses <span class="texhtml">Θ(<i>n</i>)</span> space before it even makes any recursive calls. In the best case its space is still limited to <span class="texhtml">Θ(<i>n</i>)</span>, because each level of the recursion uses half as much space as the last, and</p>
<dl>
<dd><img class="tex" alt="\sum_{i=0}^{\infty} \frac{n}{2^i} = 2n." src="Quicksort_files/5b3cfd59e549efe019745bfe6a27bf83.png"></dd>
</dl>
<p>Its worst case is dismal, requiring</p>
<dl>
<dd><img class="tex" alt="\sum_{i=0}^n (n-i+1) = O(n^2)" src="Quicksort_files/e36e203b30a218a2805e9d6d5306faa9.png"></dd>
</dl>
<p>space, far more than the list itself. If the list elements are not
themselves constant size, the problem grows even larger; for example,
if most of the list elements are distinct, each would require about <span class="texhtml">Θ<i>O</i>(log<i>n</i>)</span> bits, leading to a best-case <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> and worst-case <span class="texhtml">Θ(<i>n</i><sup>2</sup>log<i>n</i>)</span> space requirement.</p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=8" title="Edit section: Selection-based pivoting">edit</a>]</span> <span class="mw-headline" id="Selection-based_pivoting">Selection-based pivoting</span></h2>
<p>A <a href="http://en.wikipedia.org/wiki/Selection_algorithm" title="Selection algorithm">selection algorithm</a> chooses the <i>k</i>th
smallest of a list of numbers; this is an easier problem in general
than sorting. One simple but effective selection algorithm works nearly
in the same manner as quicksort, except that instead of making
recursive calls on both sublists, it only makes a single tail-recursive
call on the sublist which contains the desired element. This small
change lowers the average complexity to linear or <span class="texhtml">Θ(<i>n</i>)</span> time, and makes it an <a href="http://en.wikipedia.org/wiki/In-place_algorithm" title="In-place algorithm">in-place algorithm</a>. A variation on this algorithm brings the worst-case time down to <span class="texhtml">Θ(<i>n</i>)</span> (see <a href="http://en.wikipedia.org/wiki/Selection_algorithm" title="Selection algorithm">selection algorithm</a> for more information).</p>
<p>Conversely, once we know a worst-case <span class="texhtml">Θ(<i>n</i>)</span>
selection algorithm is available, we can use it to find the ideal pivot
(the median) at every step of quicksort, producing a variant with
worst-case <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> running time. In practical implementations, however, this variant is considerably slower on average.</p>
<p>Another variant is to choose the Median of Medians as the pivot
element instead of the median itself for partitioning the elements.
While maintaining the asymptotically optimal run time complexity of <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> (by preventing worst case partitions), it is also considerably faster than the variant that chooses the median as pivot.</p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=9" title="Edit section: Variants">edit</a>]</span> <span class="mw-headline" id="Variants">Variants</span></h2>
<p>There are three well known variants of quicksort:</p>
<ul>
<li><b>Balanced quicksort:</b> choose a pivot likely to represent the middle of the values to be sorted, and then follow the regular quicksort algorithm.</li>
<li><b>External quicksort:</b> The same as regular quicksort except the
pivot is replaced by a buffer. First, read the M/2 first and last
elements into the buffer and sort them. Read the next element from the
beginning or end to balance writing. If the next element is less than
the least of the buffer, write it to available space at the beginning.
If greater than the greatest, write it to the end. Otherwise write the
greatest or least of the buffer, and put the next element in the
buffer. Keep the maximum lower and minimum upper keys written to avoid
resorting middle elements that are in order. When done, write the
buffer. Recursively sort the smaller partition, and loop to sort the
remaining partition.</li>
<li><b>Three-way radix quicksort</b> (also called <b>multikey quicksort</b>): is a combination of <a href="http://en.wikipedia.org/wiki/Radix_sort" title="Radix sort">radix sort</a>
and quicksort. Pick an element from the array (the pivot) and consider
the first character (key) of the string (multikey). Partition the
remaining elements into three sets: those whose corresponding character
is less than, equal to, and greater than the pivot's character.
Recursively sort the "less than" and "greater than" partitions on the
same character. Recursively sort the "equal to" partition by the next
character (key).</li>
</ul>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=10" title="Edit section: Comparison with other sorting algorithms">edit</a>]</span> <span class="mw-headline" id="Comparison_with_other_sorting_algorithms">Comparison with other sorting algorithms</span></h2>
<p>Quicksort is a space-optimized version of the <a href="http://en.wikipedia.org/wiki/Binary_tree_sort" title="Binary tree sort" class="mw-redirect">binary tree sort</a>.
Instead of inserting items sequentially into an explicit tree,
quicksort organizes them concurrently into a tree that is implied by
the recursive calls. The algorithms make exactly the same comparisons,
but in a different order.</p>
<p>The most direct competitor of quicksort is <a href="http://en.wikipedia.org/wiki/Heapsort" title="Heapsort">heapsort</a>. Heapsort is typically somewhat slower than quicksort, but the worst-case running time is always <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span>. Quicksort is usually faster, though there remains the chance of worst case performance except in the <a href="http://en.wikipedia.org/wiki/Introsort" title="Introsort">introsort</a>
variant, which switches to heapsort when a bad case is detected. If
it's known in advance that heapsort is going to be necessary, using it
directly will be faster than waiting for introsort to switch to it.</p>
<p>Quicksort also competes with <a href="http://en.wikipedia.org/wiki/Mergesort" title="Mergesort" class="mw-redirect">mergesort</a>, another recursive sort algorithm but with the benefit of worst-case <span class="texhtml">Θ(<i>n</i>log<i>n</i>)</span> running time. Mergesort is a <a href="http://en.wikipedia.org/wiki/Stable_sort" title="Stable sort" class="mw-redirect">stable sort</a>, unlike quicksort and heapsort, and can be easily adapted to operate on <a href="http://en.wikipedia.org/wiki/Linked_list" title="Linked list">linked lists</a> and very large lists stored on slow-to-access media such as <a href="http://en.wikipedia.org/wiki/Disk_storage" title="Disk storage">disk storage</a> or <a href="http://en.wikipedia.org/wiki/Network_attached_storage" title="Network attached storage" class="mw-redirect">network attached storage</a>.
Although quicksort can be written to operate on linked lists, it will
often suffer from poor pivot choices without random access. The main
disadvantage of mergesort is that, when operating on arrays, it
requires <span class="texhtml">Θ(<i>n</i>)</span> auxiliary space in the best case, whereas the variant of quicksort with in-place partitioning and tail recursion uses only <span class="texhtml">Θ(log<i>n</i>)</span> space. (Note that when operating on linked lists, mergesort only requires a small, constant amount of auxiliary storage.)</p>
<p><a href="http://en.wikipedia.org/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a>
with two buckets is very similar to quicksort; the pivot in this case
is effectively the value in the middle of the value range, which does
well on average for uniformly distributed inputs.</p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=11" title="Edit section: Example in Python">edit</a>]</span> <span class="mw-headline" id="Example_in_Python">Example in Python</span></h2>
<p>An implementation of a Quicksort variant using the Python
programming language. This example uses only list operations instead of
arrays, and shows a different approach from the usual array-based
implementations.</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;">
<div class="python source-python" style="font-family: monospace;">
<pre class="de1"><span class="kw1">def</span> QuickSort<span class="br0">(</span>myList<span class="br0">)</span>:
        <span class="kw1">if</span> myList == <span class="br0">[</span><span class="br0">]</span>:
                <span class="kw1">return</span> <span class="br0">[</span><span class="br0">]</span>       <span class="co1"># Empty lists are sorted by definition</span>
        pivot = myList<span class="br0">[</span>0<span class="br0">]</span>
        beforePivot = <span class="br0">[</span>x <span class="kw1">for</span> x <span class="kw1">in</span> myList<span class="br0">[</span>1:<span class="br0">]</span> <span class="kw1">if</span> x <span class="sy0">&lt;</span>= pivot<span class="br0">]</span>
        afterPivot = <span class="br0">[</span>x <span class="kw1">for</span> x <span class="kw1">in</span> myList <span class="kw1">if</span> x <span class="sy0">&gt;</span> pivot<span class="br0">]</span>
        <span class="kw1">return</span> QuickSort<span class="br0">(</span>beforePivot<span class="br0">)</span> + <span class="br0">[</span>pivot<span class="br0">]</span> + QuickSort<span class="br0">(</span>afterPivot<span class="br0">)</span>
</pre></div>
</div>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Qsort" title="Qsort" class="mw-redirect">qsort</a></li>
<li><a href="http://en.wikipedia.org/wiki/Introsort" title="Introsort">Introsort</a></li>
<li><a href="http://en.wikipedia.org/wiki/Flashsort" title="Flashsort">Flashsort</a></li>
</ul>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=13" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0">^</a></b> <span class="citation web">"<a href="http://cacm.acm.org/magazines/2009/3/21782-an-interview-with-car-hoare/fulltext" class="external text" rel="nofollow">An Interview with C.A.R. Hoare</a>". Communications of the ACM, March 2009<span class="printonly">. <a href="http://cacm.acm.org/magazines/2009/3/21782-an-interview-with-car-hoare/fulltext" class="external free" rel="nofollow">http://cacm.acm.org/magazines/2009/3/21782-an-interview-with-car-hoare/fulltext</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=An+Interview+with+C.A.R.+Hoare&amp;rft.atitle=&amp;rft.pub=Communications+of+the+ACM%2C+March+2009&amp;rft_id=http%3A%2F%2Fcacm.acm.org%2Fmagazines%2F2009%2F3%2F21782-an-interview-with-car-hoare%2Ffulltext&amp;rfr_id=info:sid/en.wikipedia.org:Quicksort"><span style="display: none;">&nbsp;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1">^</a></b> R.Miller, L.Boxer, Algorithms Sequential &amp; Parallel, A Unified Approach, Prentice Hall, NJ, 2006</li>
<li id="cite_note-2"><b><a href="#cite_ref-2">^</a></b> David M. W. Powers, <a href="http://citeseer.ist.psu.edu/327487.html" class="external text" rel="nofollow">Parallelized Quicksort with Optimal Speedup</a>, <i>Proceedings of International Conference on Parallel Computing Technologies</i>. <a href="http://en.wikipedia.org/wiki/Novosibirsk" title="Novosibirsk">Novosibirsk</a>. 1991.</li>
<li id="cite_note-3"><b><a href="#cite_ref-3">^</a></b> M. D. McIlroy. A Killer Adversary for Quicksort. Software Practice and Experience: vol.29, no.4, 341–344. 1999. <a href="http://citeseer.ist.psu.edu/212772.html" class="external text" rel="nofollow">At Citeseer</a></li>
</ol>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h2>
<ul>
<li>Brian C. Dean, "A Simple Expected Running Time Analysis for Randomized 'Divide and Conquer' Algorithms." <i>Discrete Applied Mathematics</i> 154(1): 1-5. 2006.</li>
<li>Hoare, C. A. R. "Partition: Algorithm 63," "Quicksort: Algorithm 64," and "Find: Algorithm 65." <a href="http://en.wikipedia.org/wiki/Comm._ACM" title="Comm. ACM" class="mw-redirect">Comm. ACM</a> 4(7), 321-322, 1961</li>
<li>Hoare, C. A. R. <a href="http://dx.doi.org/10.1093/comjnl/5.1.10" class="external text" rel="nofollow">"Quicksort."</a> Computer Journal 5 (1): 10-15. (1962). (Reprinted in Hoare and Jones: <a href="http://portal.acm.org/citation.cfm?id=SERIES11430.63445" class="external text" rel="nofollow"><i>Essays in computing science</i></a>, 1989.)</li>
<li>R. Sedgewick. Implementing quicksort programs, Comm. ACM, 21(10):847-857, 1978.</li>
<li>David Musser. Introspective Sorting and Selection Algorithms,
Software Practice and Experience vol 27, number 8, pages 983-993, 1997</li>
<li><a href="http://en.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i>The Art of Computer Programming</i>, Volume 3: <i>Sorting and Searching</i>, Third Edition. Addison-Wesley, 1997. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0201896850" class="internal mw-magiclink-isbn">ISBN 0-201-89685-0</a>. Pages 113–122 of section 5.2.2: Sorting by Exchanging.</li>
<li><a href="http://en.wikipedia.org/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="http://en.wikipedia.org/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="http://en.wikipedia.org/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="http://en.wikipedia.org/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="http://en.wikipedia.org/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. <a href="http://en.wikipedia.org/wiki/MIT_Press" title="MIT Press">MIT Press</a> and <a href="http://en.wikipedia.org/wiki/McGraw-Hill" title="McGraw-Hill">McGraw-Hill</a>, 2001. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0262032937" class="internal mw-magiclink-isbn">ISBN 0-262-03293-7</a>. Chapter 7: Quicksort, pp.&nbsp;145–164.</li>
<li>A. LaMarca and R. E. Ladner. "The Influence of Caches on the
Performance of Sorting." Proceedings of the Eighth Annual ACM-SIAM
Symposium on Discrete Algorithms, 1997. pp.&nbsp;370-379.</li>
<li><a href="http://en.wikipedia.org/wiki/Faron_Moller" title="Faron Moller">Faron Moller</a>. <a href="http://www.cs.swan.ac.uk/%7Ecsfm/Courses/CS_332/quicksort.pdf" class="external text" rel="nofollow">Analysis of Quicksort</a>. CS 332: Designing Algorithms. Department of Computer Science, <a href="http://en.wikipedia.org/wiki/Swansea_University" title="Swansea University">Swansea University</a>.</li>
<li>Conrado Martínez and Salvador Roura, <i>Optimal sampling strategies in quicksort and quickselect.</i> SIAM J. Computing 31(3):683-705, 2001.</li>
<li>Jon L. Bentley and M. Douglas McIlroy, <a href="http://citeseer.ist.psu.edu/bentley93engineering.html" class="external text" rel="nofollow">Engineering a Sort Function</a>, <i>Software—Practice and Experience</i>, Vol. 23(11), 1249–1265, 1993</li>
</ul>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline" id="External_links">External links</span></h2>
<table class="metadata plainlinks ambox ambox-style" style="">
<tbody><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="" src="Quicksort_files/40px-Edit-clear.png" width="40" height="40"></div>
</td>
<td class="mbox-text" style="">This article <b>may require <a href="http://en.wikipedia.org/wiki/Wikipedia:Cleanup" title="Wikipedia:Cleanup">cleanup</a> to meet Wikipedia's <a href="http://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style" title="Wikipedia:Manual of Style">quality standards</a>.</b> Please <a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit" class="external text" rel="nofollow">improve this article</a> if you can. <small><i>(August 2009)</i></small></td>
</tr>
</tbody></table>
<table class="metadata plainlinks mbox-small" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);">
<tbody><tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Quicksort" title="Search Wikibooks"><img alt="Search Wikibooks" src="Quicksort_files/40px-Wikibooks-logo-en-noslogan.png" width="40" height="40"></a></td>
<td class="mbox-text" style="">The <a href="http://en.wikipedia.org/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Algorithm_implementation" class="extiw" title="wikibooks:Algorithm implementation">Algorithm implementation</a></i> has a page on the topic of
<div style="margin-left: 10px;"><i><b><a href="http://en.wikibooks.org/wiki/Algorithm_implementation/Sorting/Quicksort" class="extiw" title="wikibooks:Algorithm implementation/Sorting/Quicksort">Quicksort</a></b></i></div>
</td>
</tr>
</tbody></table>
<ul>
<li><a href="http://www.sorting-algorithms.com/quick-sort" class="external text" rel="nofollow">Animated Sorting Algorithms: Quick Sort</a> – graphical demonstration and discussion of quick sort</li>
</ul>
<ul>
<li><a href="http://algorito.com/algo_search/results/taxonomy%3A34" class="external text" rel="nofollow">Open source Java and Matlab Quick Sort implementations</a></li>
<li><a href="http://24bytes.com/Quick-Sort.html" class="external text" rel="nofollow">Quick Sort in C++</a></li>
<li><a href="http://www.sorting-algorithms.com/quick-sort-3-way" class="external text" rel="nofollow">Animated Sorting Algorithms: 3-Way Partition Quick Sort</a> – graphical demonstration and discussion of 3-way partition quick sort</li>
<li><a href="http://pages.stern.nyu.edu/%7Epanos/java/Quicksort/index.html" class="external text" rel="nofollow">Interactive Tutorial for Quicksort</a></li>
<li><a href="http://tide4javascript.com/?s=Quicksort" class="external text" rel="nofollow">Analyze Quicksort in an online Javascript IDE</a></li>
<li><a href="http://thomasgilray.com/classes/quicksort.php" class="external text" rel="nofollow">Javascript Quicksort and Bubblesort</a></li>
<li><a href="http://www.atkinson.yorku.ca/%7Esychen/research/sorting/sortingHome.html" class="external text" rel="nofollow">Quicksort applet</a> with "level-order" recursive calls to help improve algorithm analysis</li>
<li><a href="http://fiehnlab.ucdavis.edu/staff/wohlgemuth/java/quicksort" class="external text" rel="nofollow">Multidimensional quicksort in Java</a></li>
<li><a href="http://en.literateprograms.org/Category:Quicksort" class="external text" rel="nofollow">Literate implementations of Quicksort in various languages</a> on LiteratePrograms</li>
<li><a href="http://www.mycstutorials.com/articles/sorting/quicksort" class="external text" rel="nofollow">Quicksort tutorial with illustrated examples</a></li>
<li><a href="http://coderaptors.com/?QuickSort" class="external text" rel="nofollow">A colored graphical Java applet</a> which allows experimentation with initial state and shows statistics</li>
<li><a href="http://code.google.com/p/sortingquicksort/" class="external text" rel="nofollow">QuickSort implemented in C</a> presents both Recursive and iterative version of Quick Sort implemented in C.</li>
<li><a href="http://www.algolist.net/Algorithms/Sorting/Quicksort" class="external text" rel="nofollow">Quicksort illustrated explanation. Java and C++ implementations.</a></li>
</ul>
<table class="navbox" style="" cellspacing="0">
<tbody><tr>
<td style="padding: 2px;">
<table id="collapsibleTable0" class="nowraplinks collapsible autocollapse" style="background: transparent none repeat scroll 0% 0%; width: 100%; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous; color: inherit;" cellspacing="0">
<tbody><tr>
<th style="" colspan="3" class="navbox-title"><span class="collapseButton">[<a href="javascript:collapseTable(0);" id="collapseButton0">hide</a>]</span>
<div style="float: left; width: 6em; text-align: left;">
<div class="noprint plainlinks navbar" style="border: medium none ; padding: 0pt; background: transparent none repeat scroll 0% 0%; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous; font-weight: normal; font-size: xx-small;"><a href="http://en.wikipedia.org/wiki/Template:Sorting" title="Template:Sorting"><span title="View this template" style="border: medium none ;">v</span></a>&nbsp;<span style="font-size: 80%;">•</span>&nbsp;<a href="http://en.wikipedia.org/wiki/Template_talk:Sorting" title="Template talk:Sorting"><span title="Discuss this template" style="border: medium none ;">d</span></a>&nbsp;<span style="font-size: 80%;">•</span>&nbsp;<a href="http://en.wikipedia.org/w/index.php?title=Template:Sorting&amp;action=edit" class="external text" rel="nofollow"><span title="Edit this template" style="border: medium none ;">e</span></a></div>
</div>
<span class="" style="font-size: 110%;"><a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithms</a></span></th>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Theory</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Computational_complexity_theory" title="Computational complexity theory">Computational complexity theory</a> | <a href="http://en.wikipedia.org/wiki/Big_O_notation" title="Big O notation">Big O notation</a> | <a href="http://en.wikipedia.org/wiki/Total_order" title="Total order">Total order</a> | <a href="http://en.wikipedia.org/wiki/List_%28computing%29" title="List (computing)">Lists</a> | <a href="http://en.wikipedia.org/wiki/Sorting_algorithm#Stability" title="Sorting algorithm">Stability</a> | <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">Comparison sort</a></div>
</td>
<td style="padding: 0px 0px 0px 2px; width: 0%;" rowspan="15"><a href="http://en.wikipedia.org/wiki/File:SimpleSortingNetwork.svg" class="image"><img alt="SimpleSortingNetwork.svg" src="Quicksort_files/200px-SimpleSortingNetwork.png" width="200" height="97"></a></td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Exchange sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a> | <a href="http://en.wikipedia.org/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a> | <a href="http://en.wikipedia.org/wiki/Odd-even_sort" title="Odd-even sort">Odd-even sort</a> | <a href="http://en.wikipedia.org/wiki/Comb_sort" title="Comb sort">Comb sort</a> | <a href="http://en.wikipedia.org/wiki/Gnome_sort" title="Gnome sort">Gnome sort</a> | <strong class="selflink">Quicksort</strong></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Selection sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Selection_sort" title="Selection sort">Selection sort</a> | <a href="http://en.wikipedia.org/wiki/Heapsort" title="Heapsort">Heapsort</a> | <a href="http://en.wikipedia.org/wiki/Smoothsort" title="Smoothsort">Smoothsort</a> | <a href="http://en.wikipedia.org/wiki/Cartesian_tree#Application_in_sorting" title="Cartesian tree">Cartesian tree sort</a> | <a href="http://en.wikipedia.org/wiki/Tournament_sort" title="Tournament sort">Tournament sort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Insertion sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a> | <a href="http://en.wikipedia.org/wiki/Shell_sort" title="Shell sort">Shell sort</a> | <a href="http://en.wikipedia.org/wiki/Tree_sort" title="Tree sort">Tree sort</a> | <a href="http://en.wikipedia.org/wiki/Library_sort" title="Library sort">Library sort</a> | <a href="http://en.wikipedia.org/wiki/Patience_sorting" title="Patience sorting">Patience sorting</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Merge sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Merge_sort" title="Merge sort">Merge sort</a> | <a href="http://en.wikipedia.org/wiki/Strand_sort" title="Strand sort">Strand sort</a> | <a href="http://en.wikipedia.org/wiki/Timsort" title="Timsort">Timsort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Non-comparison sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Radix_sort" title="Radix sort">Radix sort</a> | <a href="http://en.wikipedia.org/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a> | <a href="http://en.wikipedia.org/wiki/Counting_sort" title="Counting sort">Counting sort</a> | <a href="http://en.wikipedia.org/wiki/Pigeonhole_sort" title="Pigeonhole sort">Pigeonhole sort</a> | <a href="http://en.wikipedia.org/wiki/Burstsort" title="Burstsort">Burstsort</a> | <a href="http://en.wikipedia.org/wiki/Bead_sort" title="Bead sort">Bead sort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Others</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Topological_sorting" title="Topological sorting">Topological sorting</a> | <a href="http://en.wikipedia.org/wiki/Sorting_network" title="Sorting network">Sorting network</a> | <a href="http://en.wikipedia.org/wiki/Bitonic_sorter" title="Bitonic sorter">Bitonic sorter</a> | <a href="http://en.wikipedia.org/wiki/Batcher_odd-even_mergesort" title="Batcher odd-even mergesort">Batcher odd-even mergesort</a> | <a href="http://en.wikipedia.org/wiki/Pancake_sorting" title="Pancake sorting">Pancake sorting</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Ineffective/humorous sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Bogosort" title="Bogosort">Bogosort</a> | <a href="http://en.wikipedia.org/wiki/Stooge_sort" title="Stooge sort">Stooge sort</a></div>
</td>
</tr>
</tbody></table>
</td>
</tr>
</tbody></table>


<!-- 
NewPP limit report
Preprocessor node count: 4070/1000000
Post-expand include size: 30604/2048000 bytes
Template argument size: 8873/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:3268249-0!1!0!default!!en!2 and timestamp 20091219110640 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Quicksort">http://en.wikipedia.org/wiki/Quicksort</a>"</div>
			<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Special:Categories" title="Special:Categories">Categories</a>: <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:Sorting_algorithms" title="Category:Sorting algorithms">Sorting algorithms</a></span> | <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:Comparison_sorts" title="Category:Comparison sorts">Comparison sorts</a></span> | <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></span> | <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:1961_in_science" title="Category:1961 in science">1961 in science</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories: <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:Articles_needing_cleanup_from_August_2009" title="Category:Articles needing cleanup from August 2009">Articles needing cleanup from August 2009</a></span> | <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:All_pages_needing_cleanup" title="Category:All pages needing cleanup">All pages needing cleanup</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul xml:lang="en" lang="en">
	
				 <li id="ca-nstab-main" class="selected"><a href="http://en.wikipedia.org/wiki/Quicksort" title="View the content page [alt-shift-c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="http://en.wikipedia.org/wiki/Talk:Quicksort" title="Discussion about the content page [alt-shift-t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=edit" title="You can edit this page. 
Please use the preview button before saving. [alt-shift-e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;action=history" title="Past versions of this page [alt-shift-h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul xml:lang="en" lang="en">
				<li id="pt-optin-try"><a href="http://en.wikipedia.org/w/index.php?title=Special:UsabilityInitiativeOptIn&amp;from=Quicksort" title="Try out new features" class="no-text-transform">Try Beta</a></li>
				<li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Quicksort" title="You are encouraged to log in; however, it is not mandatory. [alt-shift-o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="http://en.wikipedia.org/wiki/Main_Page" title="Visit the main page"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class="generated-sidebar portlet" id="p-navigation">
		<h5 xml:lang="en" lang="en">Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage-description"><a href="http://en.wikipedia.org/wiki/Main_Page" title="Visit the main page [alt-shift-z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [alt-shift-x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5 xml:lang="en" lang="en"><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform">
				<input name="title" value="Special:Search" type="hidden">
				<input autocomplete="off" id="searchInput" title="Search Wikipedia" accesskey="f" name="search">
				<input name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if one exists" type="submit">&nbsp;
				<input name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" type="submit">
			</form>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-interaction">
		<h5 xml:lang="en" lang="en">Interaction</h5>
		<div class="pBody">
			<ul>
				<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [alt-shift-r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Support_Wikipedia/en" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5 xml:lang="en" lang="en">Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Quicksort" title="List of all English Wikipedia pages containing links to this page [alt-shift-j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Quicksort" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:Upload" title="Upload files [alt-shift-u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="List of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;printable=yes" rel="alternate" title="Printable version of this page [alt-shift-p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Quicksort&amp;oldid=332399091" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Quicksort&amp;id=332399091" title="Information on how to cite this page">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5 xml:lang="en" lang="en">Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%AA%D8%B1%D8%AA%D9%8A%D8%A8_%D8%B3%D8%B1%D9%8A%D8%B9">العربية</a></li>
				<li class="interwiki-bn"><a href="http://bn.wikipedia.org/wiki/%E0%A6%95%E0%A7%81%E0%A6%87%E0%A6%95_%E0%A6%B8%E0%A6%B0%E0%A7%8D%E0%A6%9F">বাংলা</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/%D0%91%D1%8A%D1%80%D0%B7%D0%BE_%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%B5">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Quicksort">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Quicksort">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Quicksort">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Quicksort">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D9%85%D8%B1%D8%AA%D8%A8%E2%80%8C%D8%B3%D8%A7%D8%B2%DB%8C_%D8%B3%D8%B1%DB%8C%D8%B9">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Tri_rapide">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%80%B5_%EC%A0%95%EB%A0%AC">한국어</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/Snarr%C3%B6%C3%B0un">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Quicksort">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%9E%D7%99%D7%95%D7%9F_%D7%9E%D7%94%D7%99%D7%A8">עברית</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Greitojo_rikiavimo_algoritmas">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Gyorsrendez%C3%A9s">Magyar</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Quicksort">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%AF%E3%82%A4%E3%83%83%E3%82%AF%E3%82%BD%E3%83%BC%E3%83%88">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Sorteringsalgoritme#Quick_sort">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-uz"><a href="http://uz.wikipedia.org/wiki/Quicksort">O'zbek</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Sortowanie_szybkie">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Quicksort">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Quicksort">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%91%D1%8B%D1%81%D1%82%D1%80%D0%B0%D1%8F_%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0">Русский</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Quicksort">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Hitro_urejanje">Slovenščina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%9A%D0%B2%D0%B8%D0%BA%D1%81%D0%BE%D1%80%D1%82">Српски / Srpski</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Pikalajittelu">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Quicksort">Svenska</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/H%C4%B1zl%C4%B1_s%C4%B1ralama">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A8%D0%B2%D0%B8%D0%B4%D0%BA%D0%B5_%D1%81%D0%BE%D1%80%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">Українська</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_nhanh">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="Quicksort_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31"></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="Quicksort_files/wikimedia-button.png" alt="Wikimedia Foundation" width="88" height="31"></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 17 December 2009 at 23:53.</li>
					<li id="copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display: none;"></a>;
additional terms may apply.
See <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> for details.<br>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li><li><a class="internal" href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact us</a></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv206 in 0.038 secs. --></body></html>