<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html class="win firefox firefox3 gecko gecko1" dir="ltr" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>


<title>Radix sort - Wikipedia, the free encyclopedia</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="generator" content="MediaWiki 1.16alpha-wmf">
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit">
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit">
<link rel="stylesheet" type="text/css" href="Radix_sort_files/combined.css">
<link rel="stylesheet" type="text/css" href="Radix_sort_files/jquery-ui-1.css">
<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png">
<link rel="shortcut icon" href="http://en.wikipedia.org/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)">
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/">
<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=rss">
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" href="Radix_sort_files/shared.css" type="text/css" media="screen">
<link rel="stylesheet" href="Radix_sort_files/commonPrint.css" type="text/css" media="print">
<link rel="stylesheet" href="Radix_sort_files/main.css" type="text/css" media="screen">
<link rel="stylesheet" href="Radix_sort_files/main_002.css" type="text/css" media="handheld">
<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?257z2" type="text/css" media="screen" /><![endif]-->
<link rel="stylesheet" href="Radix_sort_files/index_003.css" type="text/css" media="all">
<link rel="stylesheet" href="Radix_sort_files/index_005.css" type="text/css" media="print">
<link rel="stylesheet" href="Radix_sort_files/index_002.css" type="text/css" media="handheld">
<link rel="stylesheet" href="Radix_sort_files/index_004.css" type="text/css" media="all">
<link rel="stylesheet" href="Radix_sort_files/index.css" type="text/css" media="all">
<script type="text/javascript">
var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Radix_sort",
wgTitle="Radix sort",
wgAction="view",
wgArticleId=25980,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=328722174,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgTrackingToken="acedd07b9804f5b0df907a18e187ff23",
wgClickTrackingIsThrottled=true,
wgNotice="",
wgNoticeLocal="";
</script>
<script src="Radix_sort_files/wikibits.js" type="text/javascript"></script>
<script src="Radix_sort_files/ajax.js" type="text/javascript"></script>
<script src="Radix_sort_files/mwsuggest.js" type="text/javascript"></script>
<script type="text/javascript" src="Radix_sort_files/js2.js"></script>
<script type="text/javascript" src="Radix_sort_files/plugins.js"></script>
<script type="text/javascript" src="Radix_sort_files/CollapsibleTabs.js"></script>
<script type="text/javascript" src="Radix_sort_files/ClickTracking.js"></script>
<script type="text/javascript" src="Radix_sort_files/centralnotice.js"></script><style type="text/css">
#centralNotice .siteNoticeSmall{display:none;}
#centralNotice .siteNoticeSmallAnon{display:none;}
#centralNotice .siteNoticeSmallUser{display:none;}
#centralNotice.collapsed .siteNoticeBig{display:none;}
#centralNotice.collapsed .siteNoticeSmall{display:block;}
#centralNotice.collapsed .siteNoticeSmallUser{display:block;}
#centralNotice.collapsed .siteNoticeSmallAnon{display:block;}
#centralNotice.anonnotice .siteNoticeSmallUser{display:none !important;}
#centralNotice.usernotice .siteNoticeSmallAnon{display:none !important;}
</style>


<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?257z2"></script>
	<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
<script src="Radix_sort_files/index.php" type="text/javascript"></script><script type="text/javascript" src="Radix_sort_files/index_002.php"></script>

<style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.python.source-python .de1, .python.source-python .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.python.source-python  {font-family:monospace;}
.python.source-python .imp {font-weight: bold; color: red;}
.python.source-python li, .python.source-python .li1 {font-weight: normal; vertical-align:top;}
.python.source-python .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.python.source-python .li2 {font-weight: bold; vertical-align:top;}
.python.source-python .kw1 {color: #ff7700;font-weight:bold;}
.python.source-python .kw2 {color: #008000;}
.python.source-python .kw3 {color: #dc143c;}
.python.source-python .kw4 {color: #0000cd;}
.python.source-python .co1 {color: #808080; font-style: italic;}
.python.source-python .coMULTI {color: #808080; font-style: italic;}
.python.source-python .es0 {color: #000099; font-weight: bold;}
.python.source-python .br0 {color: black;}
.python.source-python .sy0 {color: #66cc66;}
.python.source-python .st0 {color: #483d8b;}
.python.source-python .nu0 {color: #ff4500;}
.python.source-python .me1 {color: black;}
.python.source-python .ln-xtra, .python.source-python li.ln-xtra, .python.source-python div.ln-xtra {background-color: #ffc;}
.python.source-python span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">#bodyContent { position:relative; } 
.topicon { position:absolute; top:-2em !important;}
#coordinates{ position:absolute; top:1px !important; right:0px !important;}</style></head><body class="mediawiki ltr ns-0 ns-subject page-Radix_sort skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a id="top"></a>
		<div id="siteNotice"><script type="text/javascript">if (wgNotice != '') document.writeln(wgNotice);</script><div id="centralNotice" class="expanded anonnotice"><style type="text/css">
/* Styles for Notices */
.notice-all a {
 text-decoration: none;
}
.notice-all a:hover span {
 text-decoration: underline;
}
div.notice-all div, div.notice-all span {
 margin: 0 !important;
}
.notice-pitch {
 display: inline-block;
 background-color: transparent;
}
.notice-pitch-text {
 overflow: visible;
 color: navy;
 font-family: sans-serif;
 font-weight: bold;
 text-align: center;
 font-size: 2.25em;
 line-height: 1em;
 padding: 0.5em !important;
 cursor: pointer;
}
.notice-slogan {
 color: #6E98C2;
 font-weight: bold;
 padding-right: 1em;
}
.siteNoticeBig {
 position: relative;
 float: left;
 width: 100%;
 border: solid 1px silver;
 background-color: #f3f3f3;
 margin-bottom: 1em;
 padding-top: 1em;
 padding-bottom: 1em;
}
 .siteNoticeBig .notice-toggle {
  position: absolute;
  top: 0em;
  right: 0.5em;
  font-size: 0.75em;
 }
.siteNoticeSmallAnon {
 position: relative;
 float: left;
 width: 100%;
 border: solid 1px silver;
 background-color: #f3f3f3;
 text-align: center;
 padding: 0.1em 0;
 margin-bottom: 1em;
}
 .siteNoticeSmallAnon .notice-toggle {
  float: right;
  font-size: 0.75em;
  padding-right: 0.5em;
 }
 .siteNoticeSmallAnon .notice-slogan {
  padding-left: 0.5em;
 }
.siteNoticeSmallUser {
 position: relative;
 float: left;
 width: 100%;
 text-align: center;
 margin-bottom: 1em;
}
 .siteNoticeSmallUser .notice-toggle {
  float: right;
  font-size: 0.75em;
 }
</style>
<script>
/* @param mode string to be appended to the utm_source paramter like "utm_source=[notice]_[mode]" */
function goToDonationPage( mode ) {
 var url = 'http://meta.wikimedia.org/wiki/Special:GeoLite?lang=en&&utm_medium=sitenotice&utm_campaign=fundraiser2009&utm_source=2009_Jimmy_Appeal3';
 if ( mode && mode.length ) { 
  url += '_' + mode;
 }
 var targets = String( 'Appeal, Appeal2' ).split(',');
 if ( targets.length ) {
  url += '&target=' + targets[Math.floor( Math.random() * targets.length )].replace(/^\s+|\s+$/, '');
 }
 window.location = url;
}
</script>
<div class="notice-all siteNoticeBig" align="center">
 <a class="notice-pitch" href="javascript:goToDonationPage()">
  <div class="notice-pitch-text">
   <span>Please read:<br>A personal appeal from<br>Wikipedia founder Jimmy Wales</span>
  </div>
  <div style="clear: both;"></div>
 </a>
 <div class="notice-toggle">[<a href="#" onclick="toggleNotice();return false"><span>Hide</span></a>]</div>
 <div style="clear: both;"></div>
</div>
<div class="notice-all siteNoticeSmallAnon">
 <div class="notice-toggle">[<a href="#" onclick="toggleNotice()"><span>Show</span></a>]</div>
 <a class="notice-slogan" href="javascript:goToDonationPage('collapsed')">
   <span>Wikipedia</span>
   <img src="Radix_sort_files/Wikipedia-logo-small_Fundraising_2009.png" alt="">
   <span>Forever</span>
 </a>
 <span>Our shared knowledge. Our shared treasure.</span>
 <a href="javascript:goToDonationPage('collapsed')">
  <span>Help us protect it.</span>
 </a>
 <div style="clear: both;"></div>
</div>
<div class="notice-all siteNoticeSmallUser">
 <div class="notice-toggle">[<a href="#" onclick="toggleNotice()"><span>Show</span></a>]</div>
 <a class="notice-slogan" href="javascript:goToDonationPage('collapsed')">
  <span>Wikipedia</span>
  <img src="Radix_sort_files/Wikipedia-logo-small_Fundraising_2009.png" alt="">
  <span>Forever</span>
 </a>
 <span>Our shared knowledge. Our shared treasure.</span>
 <a href="javascript:goToDonationPage('collapsed')">
  <span>Help us protect it.</span>
 </a>
 <div style="clear: both;"></div>
</div>
<div style="clear: both;"></div></div>
</div>		<h1 id="firstHeading" class="firstHeading">Radix sort</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="infobox" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;" cellspacing="5">
<caption class="" style="font-size: 125%; font-weight: bold;">Radix sort</caption>
<tbody><tr class="">
<th style="text-align: left;">Class</th>
<td class="" style=""><a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithm</a></td>
</tr>
<tr class="">
<th style="text-align: left;">Data structure</th>
<td class="" style=""><a href="http://en.wikipedia.org/wiki/Array_data_type" title="Array data type">Array</a></td>
</tr>
<tr class="">
<th style="text-align: left;"><a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case performance</a></th>
<td class="" style=""><span class="texhtml"><i>O</i>(<i>k</i><i>N</i>)</span></td>
</tr>
<tr class="">
<th style="text-align: left;"><a href="http://en.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case space complexity</a></th>
<td class="" style=""><span class="texhtml"><i>O</i>(<i>k</i><i>N</i>)</span></td>
</tr>
</tbody></table>
<p>In <a href="http://en.wikipedia.org/wiki/Computer_science" title="Computer science">computer science</a>, <b>radix sort</b> is a <a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithm</a> that sorts integers by processing individual digits, by comparing individual digits sharing the same <a href="http://en.wikipedia.org/wiki/Significant_figures" title="Significant figures">significant</a> position. A <a href="http://en.wikipedia.org/wiki/Positional_notation" title="Positional notation">positional notation</a>
is required, but because integers can represent strings of characters
(e.g., names or dates) and specially formatted floating point numbers,
radix sort is not limited to integers. Radix sort dates back as far as
1887 to the work of <a href="http://en.wikipedia.org/wiki/Herman_Hollerith" title="Herman Hollerith">Herman Hollerith</a> on <a href="http://en.wikipedia.org/wiki/Tabulating_machines" title="Tabulating machines" class="mw-redirect">tabulating machines</a>.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0"><span>[</span>1<span>]</span></a></sup></p>
<p>Most digital computers internally represent all of their data as
electronic representations of binary numbers, so processing the digits
of integer representations by groups of binary digit representations is
most convenient. Two classifications of radix sorts are <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a> (LSD) radix sorts and <a href="http://en.wikipedia.org/wiki/Most_significant_digit" title="Most significant digit" class="mw-redirect">most significant digit</a>
(MSD) radix sorts. LSD radix sorts process the integer representations
starting from the least significant digit and move towards the most
significant digit. MSD radix sorts work the other way around.</p>
<p>The integer representations that are processed by sorting algorithms
are often called "keys," which can exist all by themselves or be
associated with other data. LSD radix sorts typically use the following
sorting order: short keys come before longer keys, and keys of the same
length are sorted lexicographically. This coincides with the normal
order of integer representations, such as the sequence 1, 2, 3, 4, 5,
6, 7, 8, 9, 10. MSD radix sorts use lexicographic order, which is
suitable for sorting strings, such as words, or fixed-length integer
representations. A sequence such as "b, c, d, e, f, g, h, i, j, ba"
would be lexicographically sorted as "b, ba, c, d, e, f, g, h, i, j".
If lexicographic ordering is used to sort variable-length integer
representations, then the representations of the numbers from 1 to 10
would be output as 1, 10, 2, 3, 4, 5, 6, 7, 8, 9, as if the shorter
keys were left-justified and padded on the right with blank characters
to make the shorter keys as long as the longest key for the purpose of
determining sorted order.</p>
<table id="toc" class="toc">
<tbody><tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
 <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">hide</a>]</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Unstable_implementations_of_in-place_sorting"><span class="tocnumber">1</span> <span class="toctext">Unstable implementations of in-place sorting</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Least_significant_digit_radix_sorts"><span class="tocnumber">2</span> <span class="toctext">Least significant digit radix sorts</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Definition"><span class="tocnumber">3</span> <span class="toctext">Definition</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#An_example"><span class="tocnumber">3.1</span> <span class="toctext">An example</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Iterative_version_using_queues"><span class="tocnumber">3.2</span> <span class="toctext">Iterative version using queues</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Example_in_Python"><span class="tocnumber">3.3</span> <span class="toctext">Example in Python</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="#Most_significant_digit_radix_sorts"><span class="tocnumber">4</span> <span class="toctext">Most significant digit radix sorts</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="#Recursion"><span class="tocnumber">4.1</span> <span class="toctext">Recursion</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#A_recursive_forward_radix_sort_example"><span class="tocnumber">4.2</span> <span class="toctext">A recursive forward radix sort example</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Efficiency"><span class="tocnumber">4.3</span> <span class="toctext">Efficiency</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Incremental_trie-based_radix_sort"><span class="tocnumber">4.4</span> <span class="toctext">Incremental trie-based radix sort</span></a>
<ul>
<li class="toclevel-3 tocsection-12"><a href="#Snow_White_analogy"><span class="tocnumber">4.4.1</span> <span class="toctext">Snow White analogy</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</tbody></table>
<script type="text/javascript">
//<![CDATA[
if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=1" title="Edit section: Unstable implementations of in-place sorting">edit</a>]</span> <span class="mw-headline" id="Unstable_implementations_of_in-place_sorting">Unstable implementations of in-place sorting</span></h2>
<p><i>Radix Sort</i> is adapted to fixed-length keys, which means that
much practical data would need to be adjusted. A crude implementation
would be "temp = index(key), index(key) = key, and then key = temp,
then repeat for number of keys". A bug in that implementation is that
it only works on data where no key is already in place. It is written
here only to illustrate that implementations benefit from using long
fields, sixteen bits (64k) being a good compromise between the size and
the number of programs that typically run at one time on a computer.
That method will also fail if it transposes values. <a href="http://en.wikipedia.org/wiki/Floating_point" title="Floating point">Floating point</a>
numbers would be sorted first by their mantissa, coalesced, and then
sorted by their exponent. Variable length keys are padded with terminal
zero digits to make all of the keys a fixed length, which requires
processing time proportional to the number of keys. using counting sort
/ stable / outplace sorting <span class="texhtml"><i>O</i>(<i>d</i>(<i>n</i> + <i>r</i>))</span></p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=2" title="Edit section: Least significant digit radix sorts">edit</a>]</span> <span class="mw-headline" id="Least_significant_digit_radix_sorts">Least significant digit radix sorts</span></h2>
<p>A <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a> (LSD) radix sort is a fast <a href="http://en.wikipedia.org/wiki/Stable_sort" title="Stable sort" class="mw-redirect">stable</a> <a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithm</a> which can be used to sort keys in <a href="http://en.wikipedia.org/wiki/Lexicographic_order" title="Lexicographic order" class="mw-redirect">lexicographic order</a>. Keys may be a <a href="http://en.wikipedia.org/wiki/String_%28computer_science%29" title="String (computer science)">string</a> of characters, or numerical digits in a given 'radix'. The processing of the keys begins at the <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a> (i.e., the rightmost digit), and proceeds to the <a href="http://en.wikipedia.org/wiki/Most_significant_digit" title="Most significant digit" class="mw-redirect">most significant digit</a> (i.e., the leftmost digit). The sequence in which digits are processed by a <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a> (LSD) radix sort is the opposite of the sequence in which digits are processed by a <a href="http://en.wikipedia.org/wiki/Most_significant_digit" title="Most significant digit" class="mw-redirect">most significant digit</a> (MSD) radix sort.</p>
<p>A <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a> (LSD) radix sort operates in <a href="http://en.wikipedia.org/wiki/Big_O_notation" title="Big O notation">O</a>(<i>nk</i>) time, where <i>n</i> is the number of keys, and <i>k</i>
is the average key length. This kind of performance for variable-length
keys can be had by grouping all of the keys that have the same length
together and separately performing an LSD radix sort on each group of
keys for each length, from shortest to longest, in order to avoid
processing the whole list of keys on every sorting pass.</p>
<p>A radix sorting algorithm was originally used to sort <a href="http://en.wikipedia.org/wiki/Punched_card" title="Punched card">punched cards</a> in several passes. A computer algorithm was invented for radix sort in 1954 at <a href="http://en.wikipedia.org/wiki/Massachusetts_Institute_of_Technology" title="Massachusetts Institute of Technology">MIT</a> by <a href="http://en.wikipedia.org/wiki/Harold_H._Seward" title="Harold H. Seward">Harold H. Seward</a>. In many large applications needing speed, the computer radix sort is an improvement on (slower) comparison sorts.</p>
<p>LSD radix sorts have resurfaced as an alternative to other high performance <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">comparison-based sorting algorithms</a> (like <a href="http://en.wikipedia.org/wiki/Heapsort" title="Heapsort">heapsort</a> and <a href="http://en.wikipedia.org/wiki/Mergesort" title="Mergesort" class="mw-redirect">mergesort</a>) that require Ω(<i>n</i> · log <i>n</i>) comparisons, where <i>n</i> is the number of items to be sorted. <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">Comparison sorts</a> can do no better than Ω(<i>n</i> · log <i>n</i>)
execution time but offer the flexibility of being able to sort with
respect to more complicated orderings than a lexicographic one;
however, this ability is of little importance in many practical
applications.</p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=3" title="Edit section: Definition">edit</a>]</span> <span class="mw-headline" id="Definition">Definition</span></h2>
<p>Each key is first figuratively dropped into one level of buckets
corresponding to the value of the rightmost digit. Each bucket
preserves the original order of the keys as the keys are dropped into.
There is a one-to-one correspondence between the number of buckets and
the number of values that can be represented by a digit. Then, the
process repeats with the next neighbouring digit until there are no
more digits to process. In other words:</p>
<ol>
<li>Take the least significant digit (or group of bits, both being examples of <a href="http://en.wikipedia.org/wiki/Radix" title="Radix">radices</a>) of each key.</li>
<li>Group the keys based on that digit, but otherwise keep the original order of keys. (This is what makes the LSD radix sort a <a href="http://en.wikipedia.org/wiki/Stable_sort" title="Stable sort" class="mw-redirect">stable sort</a>).</li>
<li>Repeat the grouping process with each more significant digit.</li>
</ol>
<p>The sort in step&nbsp;2 is usually done using <a href="http://en.wikipedia.org/wiki/Bucket_sort" title="Bucket sort">bucket sort</a> or <a href="http://en.wikipedia.org/wiki/Counting_sort" title="Counting sort">counting sort</a>, which are efficient in this case since there are usually only a small number of digits.</p>
<p><br></p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=4" title="Edit section: An example">edit</a>]</span> <span class="mw-headline" id="An_example">An example</span></h3>
<ol>
<li>Original, unsorted list:</li>
</ol>
<p>170, 45, 75, 90, 2, 24, 802, 66</p>
<ol>
<li>Sorting by least significant digit (1s place) gives:</li>
</ol>
<p>170, 90, 2, 802, 24, 45, 75, 66</p>
<p>Notice that we keep 2 before 802, because 2 occurred before 802 in
the original list, and similarly for pairs 170 &amp; 90 and 45 &amp; 75.</p>
<ol>
<li>Sorting by next digit (10s place) gives:</li>
</ol>
<p>2, 802, 24, 45, 66, 170, 75, 90</p>
<ol>
<li>Sorting by most significant digit (100s place) gives:</li>
</ol>
<p>2, 24, 45, 66, 75, 90, 170, 802 It is important to realize that each
of the above steps requires just a single pass over the data, since
each item can be placed in its correct bucket without having to be
compared with other items.</p>
<p>Some LSD radix sort implementations allocate space for buckets by
first counting the number of keys that belong in each bucket before
moving keys into those buckets. The number of times that each digit
occurs is stored in an <a href="http://en.wikipedia.org/wiki/Array_data_type" title="Array data type">array</a>. Consider the previous list of keys viewed in a different way:</p>
<dl>
<dd>170, 045, 075, 090, 002, 024, 802, 066</dd>
</dl>
<p>The first counting pass starts on the least significant digit of each key, producing an array of bucket sizes:</p>
<dl>
<dd>2 (bucket size for digits of 0: 17<u>0</u>, 09<u>0</u>)</dd>
<dd>2 (bucket size for digits of 2: 00<u>2</u>, 80<u>2</u>)</dd>
<dd>1 (bucket size for digits of 4: 02<u>4</u>)</dd>
<dd>2 (bucket size for digits of 5: 04<u>5</u>, 07<u>5</u>)</dd>
<dd>1 (bucket size for digits of 6: 06<u>6</u>)</dd>
</dl>
<p>A second counting pass on the next more significant digit of each key will produce an array of bucket sizes:</p>
<dl>
<dd>2 (bucket size for digits of 0: 0<u>0</u>2, 8<u>0</u>2)</dd>
<dd>1 (bucket size for digits of 2: 0<u>2</u>4)</dd>
<dd>1 (bucket size for digits of 4: 0<u>4</u>5)</dd>
<dd>1 (bucket size for digits of 6: 0<u>6</u>6)</dd>
<dd>2 (bucket size for digits of 7: 1<u>7</u>0, 0<u>7</u>5)</dd>
<dd>1 (bucket size for digits of 9: 0<u>9</u>0)</dd>
</dl>
<p>A third and final counting pass on the most significant digit of each key will produce an array of bucket sizes:</p>
<dl>
<dd>6 (bucket size for digits of 0: <u>0</u>02, <u>0</u>24, <u>0</u>45, <u>0</u>66, <u>0</u>75, <u>0</u>90)</dd>
<dd>1 (bucket size for digits of 1: <u>1</u>70)</dd>
<dd>1 (bucket size for digits of 8: <u>8</u>02)</dd>
</dl>
<p>At least one LSD radix sort implementation now counts the number of
times that each digit occurs in each column for all columns in a single
counting pass. (See the <a href="http://en.wikipedia.org/wiki/Radix_sort#External_links" title="Radix sort">external links</a> section.) Other LSD radix sort implementations allocate space for buckets dynamically as the space is needed.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=5" title="Edit section: Iterative version using queues">edit</a>]</span> <span class="mw-headline" id="Iterative_version_using_queues">Iterative version using queues</span></h3>
<p>A simple version of an LSD radix sort can be achieved using <a href="http://en.wikipedia.org/wiki/Queue_%28data_structure%29" title="Queue (data structure)">queues</a> as buckets. The following process is repeated for a number of times equal to the length of the longest key:</p>
<ol>
<li>The integers are enqueued into an array of ten separate queues
based on their digits from right to left. Computers often represent
integers internally as fixed-length binary digits. Here, we will do
something analogous with fixed-length decimal digits. So, using the
numbers from the previous example, the queues for the 1st pass would
be:
<dl>
<dd>0: 17<u>0</u>, 09<u>0</u></dd>
<dd>1: none</dd>
<dd>2: 00<u>2</u>, 80<u>2</u></dd>
<dd>3: none</dd>
<dd>4: 02<u>4</u></dd>
<dd>5: 04<u>5</u>, 07<u>5</u></dd>
<dd>6: 06<u>6</u></dd>
<dd>7 - 9: none</dd>
</dl>
</li>
<li>The queues are dequeued back into an array of integers, in
increasing order. Using the same numbers, the array will look like this
after the first pass:
<dl>
<dd>170, 090, 002, 802, 024, 045, 075, 066</dd>
</dl>
</li>
<li>For the second pass:
<dl>
<dd>Queues:
<dl>
<dd>0: 0<u>0</u>2, 8<u>0</u>2</dd>
<dd>1: none</dd>
<dd>2: 0<u>2</u>4</dd>
<dd>3: none</dd>
<dd>4: 0<u>4</u>5</dd>
<dd>5: none</dd>
<dd>6: 0<u>6</u>6</dd>
<dd>7: 1<u>7</u>0, 0<u>7</u>5</dd>
<dd>8: none</dd>
<dd>9: 0<u>9</u>0</dd>
</dl>
</dd>
<dd>Array:
<dl>
<dd>002, 802, 024, 045, 066, 170, 075, 090<br>
(note that at this point only 802 and 170 are out of order)</dd>
</dl>
</dd>
</dl>
</li>
<li>For the third pass:
<dl>
<dd>Queues:
<dl>
<dd>0: <u>0</u>02, <u>0</u>24, <u>0</u>45, <u>0</u>66, <u>0</u>75, <u>0</u>90</dd>
<dd>1: <u>1</u>70</dd>
<dd>2 - 7: none</dd>
<dd>8: <u>8</u>02</dd>
<dd>9: none</dd>
</dl>
</dd>
<dd>Array:
<dl>
<dd>002, 024, 045, 066, 075, 090, 170, 802 (sorted)</dd>
</dl>
</dd>
</dl>
</li>
</ol>
<p>While this may not be the most efficient radix sort algorithm, it is relatively simple, and still quite efficient.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=6" title="Edit section: Example in Python">edit</a>]</span> <span class="mw-headline" id="Example_in_Python">Example in Python</span></h3>
<p>This example written in the Python programming language will perform
the radix sort for any radix (base) of 2 or greater. Simplicity of
exposition is chosen over clever programming, and so the log function
is used instead of bit sifting techniques.</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;">
<div class="python source-python" style="font-family: monospace;">
<pre class="de1"><span class="co1">#python2.6 &lt;</span>
<span class="kw1">from</span> <span class="kw3">math</span> <span class="kw1">import</span> log
 
<span class="kw1">def</span> getDigit<span class="br0">(</span>n, b, k<span class="br0">)</span>:
    <span class="kw1">return</span> <span class="br0">(</span>n // b <span class="sy0">**</span> k<span class="br0">)</span> <span class="sy0">%</span> b  <span class="co1"># pulls the selected digit</span>
 
<span class="kw1">def</span> mkBlanks<span class="br0">(</span>k<span class="br0">)</span>:
    <span class="kw1">return</span> <span class="br0">[</span> <span class="br0">[</span><span class="br0">]</span> <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">(</span>k<span class="br0">)</span> <span class="br0">]</span>  <span class="co1"># create a list of empty lists to hold the split by digit</span>
 
<span class="kw1">def</span> split<span class="br0">(</span>l, b, k<span class="br0">)</span>:
    x = mkBlanks<span class="br0">(</span>b<span class="br0">)</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> l:
        x<span class="br0">[</span>getDigit<span class="br0">(</span>i, b, k<span class="br0">)</span><span class="br0">]</span>.<span class="me1">append</span><span class="br0">(</span>i<span class="br0">)</span>  <span class="co1"># append the number to the list selected by the digit</span>
    <span class="kw1">return</span> x
 
<span class="kw1">def</span> merge<span class="br0">(</span>x<span class="br0">)</span>: <span class="co1"># concatenate the lists back in order for the next step</span>
    l = <span class="br0">[</span><span class="br0">]</span>
    <span class="kw1">for</span> sublist <span class="kw1">in</span> x:
       <span class="kw1">for</span> item <span class="kw1">in</span> sublist:
           l.<span class="me1">append</span><span class="br0">(</span>item<span class="br0">)</span>
    <span class="kw1">return</span> l
 
 
<span class="kw1">def</span> maxAbs<span class="br0">(</span>l<span class="br0">)</span>
    <span class="kw1">return</span> <span class="kw2">max</span><span class="br0">(</span><span class="kw2">abs</span><span class="br0">(</span>x<span class="br0">)</span> <span class="kw1">for</span> x <span class="kw1">in</span> l<span class="br0">)</span>  <span class="co1"># largest abs value element of a list</span>
 
<span class="kw1">def</span> radixSort<span class="br0">(</span>l, b<span class="br0">)</span>:
    passes = <span class="kw2">int</span><span class="br0">(</span>log<span class="br0">(</span>maxAbs<span class="br0">(</span>l<span class="br0">)</span>, b<span class="br0">)</span> + <span class="nu0">1</span><span class="br0">)</span>  <span class="co1"># there are as many passes as the are digits in the longest number</span>
    t = <span class="kw2">list</span><span class="br0">(</span>l<span class="br0">)</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">(</span>passes<span class="br0">)</span>:
        t = merge<span class="br0">(</span>split<span class="br0">(</span>t, b, i<span class="br0">)</span><span class="br0">)</span>
    <span class="kw1">return</span> t
</pre></div>
</div>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=7" title="Edit section: Most significant digit radix sorts">edit</a>]</span> <span class="mw-headline" id="Most_significant_digit_radix_sorts">Most significant digit radix sorts</span></h2>
<p>A <a href="http://en.wikipedia.org/wiki/Most_significant_digit" title="Most significant digit" class="mw-redirect">most significant digit</a> (MSD) radix sort can be used to sort keys in <a href="http://en.wikipedia.org/wiki/Lexicographic_order" title="Lexicographic order" class="mw-redirect">lexicographic order</a>.
Unlike a least significant digit (LSD) radix sort, a most significant
digit radix sort does not necessarily preserve the original order of
duplicate keys. A MSD radix sort starts processing the keys from the <a href="http://en.wikipedia.org/wiki/Most_significant_digit" title="Most significant digit" class="mw-redirect">most significant digit</a>, leftmost digit, to the <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a>, rightmost digit. This sequence is opposite that of <a href="http://en.wikipedia.org/wiki/Least_significant_digit" title="Least significant digit" class="mw-redirect">least significant digit</a>
(LSD) radix sorts. An MSD radix sort stops rearranging the position of
a key when the processing reaches a unique prefix of the key. Some MSD
radix sorts use one level of buckets in which to group the keys. See
the <a href="http://en.wikipedia.org/wiki/Counting_sort" title="Counting sort">counting sort</a> and <a href="http://en.wikipedia.org/wiki/Pigeonhole_sort" title="Pigeonhole sort">pigeonhole sort</a> articles. Other MSD radix sorts use multiple levels of buckets, which form a <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a> or a path in a trie. A <a href="http://en.wikipedia.org/wiki/Bucket_sort#Postman.27s_sort" title="Bucket sort">postman's sort / postal sort</a> is a kind of MSD radix sort.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=8" title="Edit section: Recursion">edit</a>]</span> <span class="mw-headline" id="Recursion">Recursion</span></h3>
<p>A <a href="http://en.wikipedia.org/wiki/Recursion" title="Recursion">recursively</a> subdividing MSD radix sort algorithm works as follows:</p>
<ol>
<li>Take the most significant digit of each key.</li>
<li>Sort the list of elements based on that digit, grouping elements with the same digit into one <a href="http://en.wikipedia.org/wiki/Bucket_%28computing%29" title="Bucket (computing)">bucket</a>.</li>
<li>Recursively sort each bucket, starting with the next digit to the right.</li>
<li><a href="http://en.wikipedia.org/wiki/Concatenate" title="Concatenate" class="mw-redirect">Concatenate</a> the buckets together in order.</li>
</ol>
<p><b>Implementation</b></p>
<p>A two-pass method can be used to first find out how big each bucket
needs to be and then place each key (or pointer to the key) into the
appropriate bucket. A single-pass system can also be used, where each
bucket is dynamically allocated and resized as needed, but this runs
the risk of serious memory fragmentation, discontiguous allocations of
memory, which may degrade performance. This memory fragmentation could
be avoided if a fixed allocation of buckets is used for all possible
values of a digit, but, for an 8-bit digit, this would require 256 (2<sup>8</sup>)
buckets, even if not all of the buckets were used. So, this approach
might use up all available memory quickly and go into paging space,
where data is stored and accessed on a hard drive or some other
secondary memory device instead of main memory, which would radically
degrade performance. A fixed allocation approach would only make sense
if each digit was very small, such as a single bit.</p>
<p><b>Application to parallel computing</b></p>
<p>Note that this recursive sorting algorithm has particular application to <a href="http://en.wikipedia.org/wiki/Parallel_computing" title="Parallel computing">parallel computing</a>,
as each of the subdivisions can be sorted independently of the rest. In
this case, each recursion is passed to the next available processor. A
single processor would be used at the start (the most significant
digit). Then, by the second or third digit, all available processors
would likely be engaged. Ideally, as each subdivision is fully sorted,
fewer and fewer processors would be utilized. In the worst case, all of
the keys will be identical or nearly identical to each other, with the
result that there will be little to no advantage to using parallel
computing to sort the keys. Note that there are faster sorting
algorithms available, for example optimal complexity O(log(n)) are
those of the Three Hungarians and Richard Cole<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>2<span>]</span></a></sup><sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>3<span>]</span></a></sup> and <a href="http://en.wikipedia.org/wiki/Batcher" title="Batcher" class="mw-redirect">Batcher</a>'s bitonic mergesort has an algorithmic complexity of O(log<sup>2</sup>(n)), all of which have a lower algorithmic time complexity to radix sort on a CREW-<a href="http://en.wikipedia.org/wiki/Parallel_Random_Access_Machine" title="Parallel Random Access Machine">PRAM</a>.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=9" title="Edit section: A recursive forward radix sort example">edit</a>]</span> <span class="mw-headline" id="A_recursive_forward_radix_sort_example">A recursive forward radix sort example</span></h3>
<p>Sort the list:<br>
170, 045, 075, 090, 002, 024, 802, 066</p>
<ol>
<li>Sorting by most significant digit (100s place) gives:<br>
Zero hundreds bucket: <u>0</u>45, <u>0</u>75, <u>0</u>90, <u>0</u>02, <u>0</u>24, <u>0</u>66<br>
One hundreds bucket: <u>1</u>70<br>
Eight hundreds bucket: <u>8</u>02</li>
<li>Sorting by next digit (10s place) is only needed for those numbers
in the zero hundreds bucket (no other buckets contain more than one
item):<br>
Zero tens bucket: 0<u>0</u>2<br>
Twenties bucket: 0<u>2</u>4<br>
Forties bucket: 0<u>4</u>5<br>
Sixties bucket: 0<u>6</u>6<br>
Seventies bucket: 0<u>7</u>5<br>
Nineties bucket: 0<u>9</u>0</li>
<li>Sorting by least significant digit (1s place) is not needed, as
there is no tens bucket with more than one number. Therefore, the now
sorted zero hundreds bucket is concatenated, joined in sequence, with
the one hundreds bucket and eight hundreds bucket to give:<br>
002, 024, 045, 066, 075, 090, 170, 802</li>
</ol>
<p>This example used <a href="http://en.wikipedia.org/wiki/Base_%28mathematics%29" title="Base (mathematics)" class="mw-redirect">base</a> ten digits for the sake of readability, but of course binary digits or perhaps <a href="http://en.wikipedia.org/wiki/Byte" title="Byte">bytes</a> might make more sense for a binary computer to process.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=10" title="Edit section: Efficiency">edit</a>]</span> <span class="mw-headline" id="Efficiency">Efficiency</span></h3>
<p>Radix sort is <a href="http://en.wikipedia.org/wiki/Asymptotically_optimal" title="Asymptotically optimal" class="mw-redirect">asymptotically optimal</a>.
Assume that every sort must look at all keys in order to sort them.
Therefore, optimal in this context means that time needed to sort keys
(integers) grows in proportion to the number of keys. Further, assume
that storage needed to sort keys must grow at a minimum of a constant
times the number of keys to sort. Radix sort does both. It has a linear
growth function in relation to both storage required and amount of time
needed to sort keys. Detecting that data is already sorted requires
nothing but sixty-four bits of date information concerning last sort.
Linear growth cannot be beaten in sorting methods.<sup id="cite_ref-Baase_3-0" class="reference"><a href="#cite_note-Baase-3"><span>[</span>4<span>]</span></a></sup>
Radix sort achieves this linear growth function by assuming that the
keys to be sorted fall within a limited range. For example, a binary
string of length 32 can only store 2<sup>32</sup> distinct keys. As <i>n</i> gets larger, so too must <i>k</i> increase by the logarithm of <i>n</i>. Specifically, k must be at least as large as log <i>n</i>. Hence, radix sort does not really beat O(<i>n</i> log <i>n</i>) time, it only appears to do so because the range of keys is implicitly limited by the size of <i>k</i>.</p>
<h3><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=11" title="Edit section: Incremental trie-based radix sort">edit</a>]</span> <span class="mw-headline" id="Incremental_trie-based_radix_sort">Incremental trie-based radix sort</span></h3>
<p>Another way to proceed with an MSD radix sort is to use more memory to create a <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a> to represent the keys and then traverse the trie to visit each key in order. A <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a> of a trie starting from the <a href="http://en.wikipedia.org/wiki/Root_node" title="Root node" class="mw-redirect">root node</a> will visit each key in order. A depth-first traversal of a trie, or any other kind of <a href="http://en.wikipedia.org/wiki/Acyclic" title="Acyclic">acyclic</a> tree structure, is equivalent to traversing a maze via the <a href="http://en.wikipedia.org/wiki/Mazes#Wall_follower" title="Mazes" class="mw-redirect">right-hand rule</a>.</p>
<p>A trie essentially represents a <a href="http://en.wikipedia.org/wiki/Set_%28mathematics%29" title="Set (mathematics)">set</a>
of strings or numbers, and a radix sort which uses a trie structure is
not necessarily stable, which means that the original order of
duplicate keys is not necessarily preserved, because a set does not
contain duplicate elements. Additional information will have to be
associated with each key to indicate the population count or original
order of any duplicate keys in a trie-based radix sort if keeping track
of that information is important for a particular application. It may
even be desirable to discard any duplicate strings as the trie creation
proceeds if the goal is to find only unique strings in sorted order.
Some people sort a list of strings first and then make a separate pass
through the sorted list to discard duplicate strings, which can be
slower than using a trie to simultaneously sort and discard duplicate
strings in one pass.</p>
<p>One of the advantages of maintaining the trie structure is that the
trie makes it possible to determine quickly if a particular key is a
member of the set of keys in a time that is proportional to the length
of the key, <i>k</i>, in O(<i>k</i>) time, that is <u>independent</u>
of the total number of keys. Determining set membership in a plain
list, as opposed to determining set membership in a trie, requires <a href="http://en.wikipedia.org/wiki/Binary_search" title="Binary search" class="mw-redirect">binary search</a>, O(<i>k*log(n)</i>) time; <a href="http://en.wikipedia.org/wiki/Linear_search" title="Linear search">linear search</a>, O(<i>kn</i>) time; or some other method whose execution time is in some way <u>dependent</u> on the total number, <i>n</i>, of all of the keys in the worst case. It is sometimes possible to determine set membership in a plain list in O(<i>k</i>) time, in a time that is independent of the total number of keys, such as when the list is known to be in an <a href="http://en.wikipedia.org/wiki/Arithmetic_sequence" title="Arithmetic sequence" class="mw-redirect">arithmetic sequence</a> or some other computable sequence.</p>
<p>Maintaining the trie structure also makes it possible to insert new
keys into the set incrementally or delete keys from the set
incrementally while maintaining sorted order in O(<i>k</i>) time, in a
time that is independent of the total number of keys. In contrast,
other radix sorting algorithms must, in the worst case, re-sort the
entire list of keys each time that a new key is added or deleted from
an existing list, requiring O(<i>kn</i>) time.</p>
<h5><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=12" title="Edit section: Snow White analogy">edit</a>]</span> <span class="mw-headline" id="Snow_White_analogy">Snow White analogy</span></h5>
<div class="center">
<div class="floatnone"><a href="http://en.wikipedia.org/wiki/File:7dwarves.svg" class="image"><img alt="7dwarves.svg" src="Radix_sort_files/493px-7dwarves.png" width="493" height="182"></a></div>
</div>
<p>If the nodes were rooms connected by hallways, then here is how Snow
White might proceed to visit all of the dwarfs if the place were dark,
keeping her right hand on a wall at all times:</p>
<ol>
<li>She travels down hall B to find Bashful.</li>
<li>She continues moving forward with her right hand on the wall, which takes her around the room and back up hall B.</li>
<li>She moves down halls D, O, and C to find Doc.</li>
<li>Continuing to follow the wall with her right hand, she goes back up hall C, then down hall P, where she finds Dopey.</li>
<li>She continues back up halls P, O, D, and then goes down hall G to find Grumpy.</li>
<li>She goes back up hall G, with her right hand still on the wall, and goes down hall H to the room where Happy is.</li>
<li>She travels back up hall H and turns right down halls S and L, where she finds Sleepy.</li>
<li>She goes back up hall L, down hall N, where she finally finds Sneezy.</li>
<li>She travels back up halls N and S to her starting point and knows that she is done.</li>
</ol>
<p>These series of steps serve to illustrate the path taken in the trie by Snow White via a <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a>
to visit the dwarfs by the ascending order of their names, Bashful,
Doc, Dopey, Grumpy, Happy, Sleepy, and Sneezy. The algorithm for
performing some operation on the data associated with each node of a
tree first, such as printing the data, and then moving deeper into the
tree is called a <a href="http://en.wikipedia.org/wiki/Pre-order_traversal" title="Pre-order traversal" class="mw-redirect">pre-order traversal</a>, which is a kind of <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a>.
A pre-order traversal is used to process the contents of a trie in
ascending order. If Snow White wanted to visit the dwarfs by the
descending order of their names, then she could walk backwards while
following the wall with her right hand, or, alternatively, walk forward
while following the wall with her left hand. The algorithm for moving
deeper into a tree first until no further descent to unvisited nodes is
possible and then performing some operation on the data associated with
each node is called <a href="http://en.wikipedia.org/wiki/Post-order_traversal" title="Post-order traversal" class="mw-redirect">post-order traversal</a>, which is another kind of depth-first traversal. A <a href="http://en.wikipedia.org/wiki/Post-order_traversal" title="Post-order traversal" class="mw-redirect">post-order traversal</a> is used to process the contents of a trie in descending order.</p>
<p>The <a href="http://en.wikipedia.org/wiki/Root_node" title="Root node" class="mw-redirect">root node</a> of the <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a>
in the diagram essentially represents a null string, an empty string,
which can be useful for keeping track of the number of blank lines in a
list of words. The null string can be associated with a circularly <a href="http://en.wikipedia.org/wiki/Linked_list" title="Linked list">linked list</a>
with the null string initially as its only member, with the forward and
backward pointers both initially pointing to the null string. The
circularly linked list can then be expanded as each new key is inserted
into the <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a>. The circularly linked list is represented in the following diagram as thick, grey, horizontally linked lines:</p>
<div class="center">
<div class="floatnone"><a href="http://en.wikipedia.org/wiki/File:7dwarvesThreaded.svg" class="image"><img alt="7dwarvesThreaded.svg" src="Radix_sort_files/525px-7dwarvesThreaded.png" width="525" height="165"></a></div>
</div>
<p>If a new key, other than the null string, is inserted into a <a href="http://en.wikipedia.org/wiki/Leaf_node" title="Leaf node">leaf node</a> of the <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a>, then the computer can go to the last preceding node where there was a key or a bifurcation to perform a <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first search</a>
to find the lexicographic successor or predecessor of the inserted key
for the purpose of splicing the new key into the circularly <a href="http://en.wikipedia.org/wiki/Linked_list" title="Linked list">linked list</a>. The last preceding node where there was a key or a bifurcation, a fork in the path, is a <a href="http://en.wikipedia.org/wiki/Parent_node" title="Parent node" class="mw-redirect">parent node</a>
in the type of trie shown here, where only unique string prefixes are
represented as paths in the trie. If there is already a key associated
with the parent node that would have been visited during a movement <u>away</u>
from the root during a right-hand, forward-moving, depth-first
traversal, then that immediately ends the depth-first search, as that
key is the predecessor of the inserted key. For example, if Bashful is
inserted into the trie, then the predecessor is the null string in the
parent node, which is the <a href="http://en.wikipedia.org/wiki/Root_node" title="Root node" class="mw-redirect">root node</a>
in this case. In other words, if the key that is being inserted is on
the leftmost branch of the parent node, then any string contained in
the parent node is the lexicographic predecessor of the key that is
being inserted, else the lexicographic predecessor of the key that is
being inserted exists down the parent node's branch that is immediately
to the left of the branch where the new key is being inserted. For
example, if Grumpy were the last key inserted into the trie, then the
computer would have a choice of trying to find either the predecessor,
Dopey, or the successor, Happy, with a <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first search</a>
starting from the parent node of Grumpy. With no additional information
to indicate which path is longer, the computer might traverse the
longer path, D, O, P. If Dopey were the last key inserted into the
trie, then the depth-first search starting from the parent node of
Dopey would soon find the predecessor, "Doc", because that would be the
only choice.</p>
<p>If a new key is inserted into an <a href="http://en.wikipedia.org/wiki/Internal_node" title="Internal node" class="mw-redirect">internal node</a>, then a depth-first search can be started from the <a href="http://en.wikipedia.org/wiki/Internal_node" title="Internal node" class="mw-redirect">internal node</a>
to find the lexicographic successor. For example, if the literal string
"DO" were inserted in the node at the end of the path D, O, then a
depth-first search could be started from that internal node to find the
successor, "DOC", for the purpose of splicing the new string into the
circularly <a href="http://en.wikipedia.org/wiki/Linked_list" title="Linked list">linked list</a>.</p>
<p>Forming the circularly linked list requires more memory but allows
the keys to be visited more directly in either ascending or descending
order via a linear traversal of the <a href="http://en.wikipedia.org/wiki/Linked_list" title="Linked list">linked list</a> rather than a <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a> of the entire trie. This concept of a circularly linked trie structure is similar to the concept of a <a href="http://en.wikipedia.org/wiki/Threaded_binary_tree" title="Threaded binary tree">threaded binary tree</a>. This structure will be called a circularly threaded trie.</p>
<div class="center">
<div class="floatnone"><a href="http://en.wikipedia.org/wiki/File:Trie002.svg" class="image"><img alt="Trie002.svg" src="Radix_sort_files/333px-Trie002.png" width="333" height="141"></a></div>
</div>
<p>When a <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a> is used to sort numbers, the number representations must all be the same length unless you are willing to perform a <a href="http://en.wikipedia.org/wiki/Breadth-first_search" title="Breadth-first search">breadth-first traversal</a>. When the number representations will be visited via <a href="http://en.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a>, as in the above diagram, the number representations will always be on the <a href="http://en.wikipedia.org/wiki/Leaf_node" title="Leaf node">leaf nodes</a> of the <a href="http://en.wikipedia.org/wiki/Trie" title="Trie">trie</a>. Note how similar in concept this particular example of a trie is to the <a href="http://en.wikipedia.org/wiki/Radix_sort#A_recursive_forward_radix_sort_example" title="Radix sort">recursive forward radix sort example</a>
which involves the use of buckets instead of a trie. Performing a radix
sort with the buckets is like creating a trie and then discarding the
non-leaf nodes.</p>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=13" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/IBM_80_series_Card_Sorters" title="IBM 80 series Card Sorters">IBM 80 series Card Sorters</a></li>
</ul>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0">^</a></b> <a href="http://v3.espacenet.com/textdoc?DB=EPODOC&amp;IDX=US395781" class="external text" rel="nofollow">US&nbsp;patent&nbsp;395781</a> and <a href="http://v3.espacenet.com/textdoc?DB=EPODOC&amp;IDX=UK327" class="external text" rel="nofollow">UK&nbsp;patent&nbsp;327</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1">^</a></b> A. Gibbons and W. Rytter, "Efficient Parallel Algorithms." Cambridge University Press, 1988.</li>
<li id="cite_note-2"><b><a href="#cite_ref-2">^</a></b> H. Casanova et al, "Parallel Algorithms." Chapman &amp; Hall, 2008.</li>
<li id="cite_note-Baase-3"><b><a href="#cite_ref-Baase_3-0">^</a></b> <span class="citation book">Sara Baase (1988-07-01). <i>Computer Algorithms, Introduction to Design and Analysis, Second Edition</i>. Addison-Wesley. pp.&nbsp;85–89. <a href="http://en.wikipedia.org/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.wikipedia.org/wiki/Special:BookSources/0-201-06035-3" title="Special:BookSources/0-201-06035-3">0-201-06035-3</a>.  "It is startling that if the keys are distributed into buckets first according to their <i>least significant digits</i> (or bits, letters, or fields), then the buckets can be coalesced in order before distributing on the next digit."</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Algorithms%2C+Introduction+to+Design+and+Analysis%2C+Second+Edition&amp;rft.aulast=Sara+Baase&amp;rft.au=Sara+Baase&amp;rft.date=1988-07-01&amp;rft.pages=pp.%26nbsp%3B85%E2%80%9389&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-06035-3&amp;rfr_id=info:sid/en.wikipedia.org:Radix_sort"><span style="display: none;">&nbsp;</span></span></li>
</ol>
</div>
<h2><span class="editsection">[<a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline" id="External_links">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);">
<tbody><tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Radix_sort" title="Search Wikibooks"><img alt="Search Wikibooks" src="Radix_sort_files/40px-Wikibooks-logo-en-noslogan.png" width="40" height="40"></a></td>
<td class="mbox-text" style="">The <a href="http://en.wikipedia.org/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Algorithm_implementation" class="extiw" title="wikibooks:Algorithm implementation">Algorithm implementation</a></i> has a page on the topic of
<div style="margin-left: 10px;"><i><b><a href="http://en.wikibooks.org/wiki/Algorithm_implementation/Sorting/Radix_sort" class="extiw" title="wikibooks:Algorithm implementation/Sorting/Radix sort">Radix sort</a></b></i></div>
</td>
</tr>
</tbody></table>
<ul>
<li><a href="http://www.csse.monash.edu.au/%7Elloyd/tildeAlgDS/Sort/Radix/" class="external text" rel="nofollow">Demonstration and comparison</a> of Radix sort with <a href="http://en.wikipedia.org/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a>, <a href="http://en.wikipedia.org/wiki/Merge_sort" title="Merge sort">Merge sort</a> and <a href="http://en.wikipedia.org/wiki/Quicksort" title="Quicksort">Quicksort</a> implemented in <a href="http://en.wikipedia.org/wiki/JavaScript" title="JavaScript">JavaScript</a></li>
<li><a href="http://www.codercorner.com/RadixSortRevisited.htm" class="external text" rel="nofollow">Article</a> about Radix sorting <a href="http://en.wikipedia.org/wiki/IEEE_floating-point_standard" title="IEEE floating-point standard" class="mw-redirect">IEEE floating-point</a> numbers with implementation.
<dl>
<dd><a href="http://www.stereopsis.com/radix.html" class="external text" rel="nofollow">Faster Floating Point Sorting and Multiple Histogramming</a> with implementation in C++</dd>
</dl>
</li>
<li>Pointers to <a href="http://web-cat.cs.vt.edu/AlgovizWiki/RadixSort" class="external text" rel="nofollow">radix sort visualizations</a></li>
<li><a href="http://bitbucket.org/ais/usort/wiki/Home" class="external text" rel="nofollow">USort library</a> contains tuned implementations of radix sort for most numerical C types (C99)</li>
</ul>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i>The Art of Computer Programming</i>, Volume 3: <i>Sorting and Searching</i>, Third Edition. Addison-Wesley, 1997. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0201896850" class="internal mw-magiclink-isbn">ISBN 0-201-89685-0</a>. Section 5.2.5: Sorting by Distribution, pp.&nbsp;168–179.</li>
<li><a href="http://en.wikipedia.org/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="http://en.wikipedia.org/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="http://en.wikipedia.org/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="http://en.wikipedia.org/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="http://en.wikipedia.org/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0262032937" class="internal mw-magiclink-isbn">ISBN 0-262-03293-7</a>. Section 8.3: Radix sort, pp.&nbsp;170–173.</li>
<li><a href="http://web.archive.org/web/20010714213118/www.chinet.com/%7Eedlee/bradsort.c" class="external text" rel="nofollow">BRADSORT v1.50 source code</a></li>
<li><a href="http://goanna.cs.rmit.edu.au/%7Ejz/fulltext/acsc03sz.pdf" class="external text" rel="nofollow">Efficient Trie-Based Sorting of Large Sets of Strings</a>,
by Ranjan Sinha and Justin Zobel. This paper describes a method of
creating tries of buckets which figuratively burst into sub-tries when
the buckets hold more than a predetermined capacity of strings, hence
the name, "Burstsort".</li>
</ul>
<table class="navbox" style="" cellspacing="0">
<tbody><tr>
<td style="padding: 2px;">
<table id="collapsibleTable0" class="nowraplinks collapsible autocollapse" style="background: transparent none repeat scroll 0% 0%; width: 100%; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous; color: inherit;" cellspacing="0">
<tbody><tr>
<th style="" colspan="3" class="navbox-title"><span class="collapseButton">[<a href="javascript:collapseTable(0);" id="collapseButton0">hide</a>]</span>
<div style="float: left; width: 6em; text-align: left;">
<div class="noprint plainlinks navbar" style="border: medium none ; padding: 0pt; background: transparent none repeat scroll 0% 0%; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous; font-weight: normal; font-size: xx-small;"><a href="http://en.wikipedia.org/wiki/Template:Sorting" title="Template:Sorting"><span title="View this template" style="border: medium none ;">v</span></a>&nbsp;<span style="font-size: 80%;">•</span>&nbsp;<a href="http://en.wikipedia.org/wiki/Template_talk:Sorting" title="Template talk:Sorting"><span title="Discuss this template" style="border: medium none ;">d</span></a>&nbsp;<span style="font-size: 80%;">•</span>&nbsp;<a href="http://en.wikipedia.org/w/index.php?title=Template:Sorting&amp;action=edit" class="external text" rel="nofollow"><span title="Edit this template" style="border: medium none ;">e</span></a></div>
</div>
<span class="" style="font-size: 110%;"><a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithms</a></span></th>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Theory</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Computational_complexity_theory" title="Computational complexity theory">Computational complexity theory</a> | <a href="http://en.wikipedia.org/wiki/Big_O_notation" title="Big O notation">Big O notation</a> | <a href="http://en.wikipedia.org/wiki/Total_order" title="Total order">Total order</a> | <a href="http://en.wikipedia.org/wiki/List_%28computing%29" title="List (computing)">Lists</a> | <a href="http://en.wikipedia.org/wiki/Sorting_algorithm#Stability" title="Sorting algorithm">Stability</a> | <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">Comparison sort</a></div>
</td>
<td style="padding: 0px 0px 0px 2px; width: 0%;" rowspan="15"><a href="http://en.wikipedia.org/wiki/File:SimpleSortingNetwork.svg" class="image"><img alt="SimpleSortingNetwork.svg" src="Radix_sort_files/200px-SimpleSortingNetwork.png" width="200" height="97"></a></td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Exchange sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a> | <a href="http://en.wikipedia.org/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a> | <a href="http://en.wikipedia.org/wiki/Odd-even_sort" title="Odd-even sort">Odd-even sort</a> | <a href="http://en.wikipedia.org/wiki/Comb_sort" title="Comb sort">Comb sort</a> | <a href="http://en.wikipedia.org/wiki/Gnome_sort" title="Gnome sort">Gnome sort</a> | <a href="http://en.wikipedia.org/wiki/Quicksort" title="Quicksort">Quicksort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Selection sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Selection_sort" title="Selection sort">Selection sort</a> | <a href="http://en.wikipedia.org/wiki/Heapsort" title="Heapsort">Heapsort</a> | <a href="http://en.wikipedia.org/wiki/Smoothsort" title="Smoothsort">Smoothsort</a> | <a href="http://en.wikipedia.org/wiki/Cartesian_tree#Application_in_sorting" title="Cartesian tree">Cartesian tree sort</a> | <a href="http://en.wikipedia.org/wiki/Tournament_sort" title="Tournament sort">Tournament sort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Insertion sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a> | <a href="http://en.wikipedia.org/wiki/Shell_sort" title="Shell sort">Shell sort</a> | <a href="http://en.wikipedia.org/wiki/Tree_sort" title="Tree sort">Tree sort</a> | <a href="http://en.wikipedia.org/wiki/Library_sort" title="Library sort">Library sort</a> | <a href="http://en.wikipedia.org/wiki/Patience_sorting" title="Patience sorting">Patience sorting</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Merge sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Merge_sort" title="Merge sort">Merge sort</a> | <a href="http://en.wikipedia.org/wiki/Strand_sort" title="Strand sort">Strand sort</a> | <a href="http://en.wikipedia.org/wiki/Timsort" title="Timsort">Timsort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Non-comparison sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><strong class="selflink">Radix sort</strong> | <a href="http://en.wikipedia.org/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a> | <a href="http://en.wikipedia.org/wiki/Counting_sort" title="Counting sort">Counting sort</a> | <a href="http://en.wikipedia.org/wiki/Pigeonhole_sort" title="Pigeonhole sort">Pigeonhole sort</a> | <a href="http://en.wikipedia.org/wiki/Burstsort" title="Burstsort">Burstsort</a> | <a href="http://en.wikipedia.org/wiki/Bead_sort" title="Bead sort">Bead sort</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Others</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-odd">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Topological_sorting" title="Topological sorting">Topological sorting</a> | <a href="http://en.wikipedia.org/wiki/Sorting_network" title="Sorting network">Sorting network</a> | <a href="http://en.wikipedia.org/wiki/Bitonic_sorter" title="Bitonic sorter">Bitonic sorter</a> | <a href="http://en.wikipedia.org/wiki/Batcher_odd-even_mergesort" title="Batcher odd-even mergesort">Batcher odd-even mergesort</a> | <a href="http://en.wikipedia.org/wiki/Pancake_sorting" title="Pancake sorting">Pancake sorting</a></div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style="">Ineffective/humorous sorts</td>
<td style="padding: 0px; text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%;" class="navbox-list navbox-even">
<div style="padding: 0em 0.25em;"><a href="http://en.wikipedia.org/wiki/Bogosort" title="Bogosort">Bogosort</a> | <a href="http://en.wikipedia.org/wiki/Stooge_sort" title="Stooge sort">Stooge sort</a></div>
</td>
</tr>
</tbody></table>
</td>
</tr>
</tbody></table>


<!-- 
NewPP limit report
Preprocessor node count: 3101/1000000
Post-expand include size: 25246/2048000 bytes
Template argument size: 6877/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:25980-0!1!0!default!!en!2 and timestamp 20091219033432 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Radix_sort">http://en.wikipedia.org/wiki/Radix_sort</a>"</div>
			<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Special:Categories" title="Special:Categories">Categories</a>: <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:Sorting_algorithms" title="Category:Sorting algorithms">Sorting algorithms</a></span> | <span dir="ltr"><a href="http://en.wikipedia.org/wiki/Category:Stable_sorts" title="Category:Stable sorts">Stable sorts</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul xml:lang="en" lang="en">
	
				 <li id="ca-nstab-main" class="selected"><a href="http://en.wikipedia.org/wiki/Radix_sort" title="View the content page [alt-shift-c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="http://en.wikipedia.org/wiki/Talk:Radix_sort" title="Discussion about the content page [alt-shift-t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=edit" title="You can edit this page. 
Please use the preview button before saving. [alt-shift-e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;action=history" title="Past versions of this page [alt-shift-h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul xml:lang="en" lang="en">
				<li id="pt-optin-try"><a href="http://en.wikipedia.org/w/index.php?title=Special:UsabilityInitiativeOptIn&amp;from=Radix_sort" title="Try out new features" class="no-text-transform">Try Beta</a></li>
				<li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Radix_sort" title="You are encouraged to log in; however, it is not mandatory. [alt-shift-o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="http://en.wikipedia.org/wiki/Main_Page" title="Visit the main page"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class="generated-sidebar portlet" id="p-navigation">
		<h5 xml:lang="en" lang="en">Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage-description"><a href="http://en.wikipedia.org/wiki/Main_Page" title="Visit the main page [alt-shift-z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [alt-shift-x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5 xml:lang="en" lang="en"><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform">
				<input name="title" value="Special:Search" type="hidden">
				<input autocomplete="off" id="searchInput" title="Search Wikipedia" accesskey="f" name="search">
				<input name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if one exists" type="submit">&nbsp;
				<input name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" type="submit">
			</form>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-interaction">
		<h5 xml:lang="en" lang="en">Interaction</h5>
		<div class="pBody">
			<ul>
				<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [alt-shift-r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Support_Wikipedia/en" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5 xml:lang="en" lang="en">Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Radix_sort" title="List of all English Wikipedia pages containing links to this page [alt-shift-j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Radix_sort" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:Upload" title="Upload files [alt-shift-u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="List of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;printable=yes" rel="alternate" title="Printable version of this page [alt-shift-p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Radix_sort&amp;oldid=328722174" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Radix_sort&amp;id=328722174" title="Information on how to cite this page">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5 xml:lang="en" lang="en">Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Radix_sort">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Radixsort">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Ordenamiento_Radix">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D9%85%D8%B1%D8%AA%D8%A8%E2%80%8C%D8%B3%D8%A7%D8%B2%DB%8C_%D9%BE%D8%A7%DB%8C%D9%87%E2%80%8C%D8%A7%DB%8C">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Tri_par_base">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EA%B8%B0%EC%88%98_%EC%A0%95%EB%A0%AC">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Radix_sort">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%9E%D7%99%D7%95%D7%9F_%D7%91%D7%A1%D7%99%D7%A1">עברית</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Skaitmeninis_rikiavimo_algoritmas">Lietuvių</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Radix_sort">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E5%9F%BA%E6%95%B0%E3%82%BD%E3%83%BC%E3%83%88">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Sorteringsalgoritme#Radix-sortering">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Sortowanie_pozycyjne">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Radix_sort">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D0%B0%D0%B7%D1%80%D1%8F%D0%B4%D0%BD%D0%B0%D1%8F_%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0">Русский</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Kantalukulajittelu">Suomi</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Basama%C4%9Fa_g%C3%B6re_s%C4%B1ralama">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F_%D0%B7%D0%B0_%D1%80%D0%BE%D0%B7%D1%80%D1%8F%D0%B4%D0%B0%D0%BC%D0%B8">Українська</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_theo_c%C6%A1_s%E1%BB%91">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="Radix_sort_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31"></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="Radix_sort_files/wikimedia-button.png" alt="Wikimedia Foundation" width="88" height="31"></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 30 November 2009 at 03:08.</li>
					<li id="copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display: none;"></a>;
additional terms may apply.
See <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> for details.<br>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li><li><a class="internal" href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact us</a></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv172 in 0.068 secs. --></body></html>