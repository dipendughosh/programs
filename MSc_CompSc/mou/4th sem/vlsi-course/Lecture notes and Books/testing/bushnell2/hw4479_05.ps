%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: hw4479_05.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica Times-Roman Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -f hw4479_05.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.11.10:1536
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (hw4479_05.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10.95 24
/Fa 24 122 df<1838187CA218F8170118F0EF03E0A2EF07C0A2EF0F80171F1800173EA2
5FA25F16015F4C5AA24C5AA24C5A161F94C7FC163EA25EA25E15015E4B5AA24B5AA24B5A
151F93C8FC153EA25DA25D14015D4A5AA24A5AA24A5A141F92C9FC143EA25CA25C13015C
495AA2495AA2495A131F91CAFC133EA25BA25B12015B485AA2485AA2485A121F90CBFC12
3EA25AA25AA25A5A365B7FC32E>47 D<15FE913807FF8091381F07C091387C01F0ECF000
494813F8494813780107147C495A49C7FC167E133E137EA25BA2485AA2000315FEA25B00
0715FCA2491301120FA34848EB03F8A44848EB07F0A448C7EA0FE0A316C0007E141F12FE
1680153FA2481500A2157EA25DA25D4813015D6C495A127C4A5A4A5A6C49C7FC143E6C5B
380FC1F03803FFC0C648C8FC273F76BC2E>I<ED7F80913803FFE091380F80F891383C00
7C02F87FD901E07F494814804948130F49C7FC010E15C0131EEB1C18EB3C1CEB380C0178
141F17801370A2021C133F6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A4B5AED
1F8003FFC7FCECFFFC15F0A2EC00FC153E153F8182150F82A4151FA2121E127F153F485D
A3484AC7FC12F800E014FE5D14016C495A0070495A0078EB0FC00038495A6C017EC8FC38
0F01F83803FFE0C690C9FC2A3F78BC2E>51 D<1638167E16FE16FCA3150116F8A3150316
F0A2150716E0A2ED0FC0A3ED1F80A216005DA2157EA2157C15FC5D14015D14035D4A5AA2
4A5AA24AC7FC143EED038091387C0FC014F8ECF01F01011480EB03E014C0903807803F01
0F1400EB1F00133E495B49137E485A485A484813FE48B46C5A4813F04813FE267C00FF13
0800F090380FFFFC00601301C714E0913803F8005DA314075DA3140F5DA3141F5DA3020E
C7FC274F7DBC2E>I<49B77E18F018FC903B0003FE0003FEEF00FF4BEC7F80F03FC00207
151F19E05DA2020F16F0A25DA2141FF03FE05DA2023F16C0187F4B1580A2027FEDFF0060
4B495A4D5A02FF4A5A4D5A92C7EA3FC04CB4C7FC4990B512FC17E04ACAFCA21303A25CA2
1307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C497EB67EA33C3E7BBD3E>80
D<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F4914804848133F485A
A248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5AA21403EDF038
5AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E1261F01E313C0
3A0F8781E3803A03FF00FF00D800FC133E252977A72E>97 D<EB1FC0EA0FFF5CA2EA003F
A291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B147E3907F1FF809038F783E0
9038EF01F013FE390FF800F8A24913FC49137C485A157E5B15FE123FA290C7FCA2481301
15FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0141F15800078EB3F00127C14
7E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F4076BE2A>I<EC1FC0ECFFF090
3803F03C903807C01E90381F800E90383F000F017E133F4913FF485A485A000714FE5B00
0F14FC48481300A2485AA3127F90C8FCA35A5AA6481403007E1407150F151E003E143C15
786C14F0EC03E0390F800F803903E07E003801FFF838003FC0202977A72A>I<EC3F8090
3801FFE0903807E0F890381F803CEB3E0001FC131E485A485A12074848133E49133C121F
4848137C15F8EC03F0397F000FE0ECFF809038FFFC00B512C048C8FCA45AA61506150E15
1E007C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F29
76A72A>101 D<EC03F0EC0FFC91383E0E1C9138FC077E903901F003FE1303903807E001
D90FC013FCEB1F80A2EB3F004914F8137E01FE1303A2484814F0A2150712034914E0A215
0F12074914C0A2151FA216805B153F1203ED7F006D5BA200015B0000495A9038F80F7E90
387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403A25D001C1307007F5C48130F5D4A
5A4AC7FC48137E00F85B387C03F0381FFFC0D803FEC8FC273B7CA72A>103
D<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCEC03
F890387F0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA25B0003
140F16C05BA20007141F16805BA2000F143F16005B5D001F147EEDFE074913FCA2003F01
01130FEDF80E1300161E48ECF01CA2007E1538A200FE1570020013E048EC7FC00038EC1F
0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC38038F80EA07
07000E13C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F140012005B137E13FE5B
A212015BA212035B1438120713E0000F1378EBC070A214F0EB80E0A2EB81C01383148038
078700EA03FEEA00F8163E79BC1C>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA2
5CA2131FA25CA2133FA291C8FCED03E049EB0FF8ED3C3C017EEB707CEDE1FC9038FE01C1
EC03839038FC0703140E0001011C13F891383800E0494813001460000313E0EBF9C0EBF7
8001FEC8FC1207EBFFE0EBE7F8EBE0FE000F137F6E7EEBC01F81001F130F16701380A200
3F15F0021F13E001001380A248148116C0007EEB0F83168000FE14879138078F0048EB03
FE0038EB00F826407ABE2A>107 D<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480
A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25B
A2121FA25BA2123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2131E131CA2EA7C3813
78EA3C70EA1FE0EA0780144079BE17>I<D801F0D93F80137F3D07FC01FFE003FFC03D0F
3E07C1F80F83F03D0E1F0F00FC1E01F8001E011C90387C3800001C49D97E707F003C01F0
5C0038157F4A5C26783FC05C12704A91C7FC91C7127E00F003FE1301494A5CEA007EA203
01140301FE5F495CA203031407000160495C180F03075D0003051F13E0494A1480A2030F
EC3F810007F001C0495CA2031F91383E0380120F494AEC0700A2033F150E001FEF1E1C49
91C7EA0FF80007C7000EEC03E0432979A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07
C1F83A0E1F0F00FC001E011C137C001C49137E003C13F012385C38783FC012705C91C7FC
00F015FE495CEA007EA2150101FE5C5BA2150300015D5B15075E0003020F13704914C0A2
031F13F00007ED80E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007
C7EA01F02C2979A733>I<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F000F80
017E14C0491307484814E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7FCA215
1F4815C05AA2ED3F80A2ED7F00A248147E007C5C007E13015D4A5A003E495A6C495A4A5A
260F803EC7FC3807C0FC3801FFF038003F80242977A72E>I<903903E001F890390FF807
FE903A1E7C1E0F80903A1C3E3C07C0013C137801389038E003E0EB783F017001C013F0ED
80019038F07F0001E015F8147E1603000113FEA2C75AA20101140717F05CA20103140F17
E05CA20107EC1FC0A24A1480163F010F15005E167E5E131F4B5A6E485A4B5A90393FB80F
80DA9C1FC7FCEC0FFCEC03E049C9FCA2137EA213FEA25BA21201A25BA21203A2387FFFE0
B5FCA22D3A80A72E>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB
380F001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91C8FC12F05B
EA007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC232979A726
>114 D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C133E4913
7E15FEA2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F13F013
00140F14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F80127000
78EB1F006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307A25C
A2130FA25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25B
A21201A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438EB00
78147014F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C
26038F80137EEA0707000E7F001E15FE121CD83C0F5C12381501EA781F007001805BA2D8
F03F1303140000005D5B017E1307A201FE5C5B150F1201495CA2151F0003EDC1C0491481
A2153F1683EE0380A2ED7F07000102FF13005C01F8EBDF0F00009038079F0E90397C0F0F
1C90391FFC07F8903907F001F02A2979A731>I<017C167048B491387001FC3A038F8001
F8EA0707000E01C015FE001E1403001CEDF000EA3C0F0038177C1507D8781F4A133C0070
1380A2D8F03F130F020049133812005B017E011F14784C137013FE5B033F14F0000192C7
12E05BA2170100034A14C049137E17031880A2EF070015FE170E00010101141E01F86D13
1C0000D9039F5BD9FC076D5A903A3E0F07C1E0903A1FFC03FFC0902703F0007FC7FC3729
79A73C>119 D<137C48B4143826038F8013FCEA0707000E7F001E1401001C15F8EA3C0F
12381503D8781F14F000701380A2D8F03F1307020013E012005B017E130F16C013FE5B15
1F1201491480A2153F000315005BA25D157EA315FE5D00011301EBF8030000130790387C
1FF8EB3FF9EB07E1EB00035DA21407000E5CEA3F80007F495AA24A5AD8FF0090C7FC143E
007C137E00705B387801F0383803E0381E0FC06CB4C8FCEA03F8263B79A72C>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi8 8 8
/Fb 8 121 df<90383FFFFEA2010090C8FC5C5CA21301A25CA21303A25CA21307A25CA2
130FA25CA2131FA25CA2133FA291C7EA0180A24914031700017E5C160601FE140EA2495C
163C12015E49EB01F84B5A0003141FB7FC5E292D7DAC30>76 D<EB07E0EB1FF890387C1C
E0EBF80D3801F00F3803E007EA07C0120FD81F8013C0A2EA3F00140F481480127EA2141F
00FE14005AA2EC3F02EC3E06A25AEC7E0E007CEBFE0C14FC0101131C393E07BE18391F0E
1E38390FFC0FF03903F003C01F1F7D9D25>97 D<157C4AB4FC913807C380EC0F87150FEC
1F1FA391383E0E0092C7FCA3147E147CA414FC90383FFFF8A2D900F8C7FCA313015CA413
035CA413075CA5130F5CA4131F91C8FCA4133EA3EA383C12FC5BA25B12F0EAE1E0EA7FC0
001FC9FC213D7CAE22>102 D<EB01F8EB0FFF90383F078090387C03C0D801F813E03903
F001F0EA07E0D80FC013F8EB8000121F48C7FC14015A127EA2140300FE14F05AA2EC07E0
A2EC0FC0A2007CEB1F801500143E6C5B6C485A380F83E03803FF80D800FCC7FC1D1F7D9D
22>111 D<3807C01F390FF07FC0391CF8E0E0383879C138307B8738707F07EA607E13FC
00E0EB03804848C7FCA2128112015BA21203A25BA21207A25BA2120FA25BA2121FA290C8
FC120E1B1F7E9D20>114 D<EB07E0EB3FF8EB781EEBF0063801E0073803C00F141FA200
07131E140CEBE00013F8EBFF806C13E06C13F06C13F8EB3FFC13011300147C0078133C12
FCA2147C48137800E013F814F0386001E0387807C0381FFF00EA07F8181F7C9D21>I<D8
01E01370D807F813F8380E3C01D81C3E13FC1238003013000070147CEA607ED8E07C1338
12C013FC485A0000143012015B1570000314605B15E015C01207EBC00115801403EC0700
00031306EBE00E00015BEBF07838007FE0EB1F801E1F7E9D22>118
D<013F137C9038FFC1FF3A01C1E383803A0380F703C0390700F60F000E13FE4813FC1218
0038EC0700003049C7FCA2EA200100005BA313035CA301075B5D14C000385CD87C0F1306
00FC140E011F130C011B131C39F03BE038D8707113F0393FE0FFC0260F803FC7FC221F7E
9D28>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10.95 14
/Fc 14 117 df<133F14E0EB07F0EB03FC13016D7EA3147FA26E7EA36E7EA36E7EA36E7E
A36E7EA26E7EA36E7EA3157FA36F7E157F15FF4A7F5C913807CFE0EC0F8FEC1F0F91383E
07F0147C14FC49486C7EEB03F0EB07E049486C7EEB1F80EB3F00496D7E13FE4848147F48
5A485A4848EC3F80485A123F4848EC1FC048C8FC4816E048150F48ED07F0007015032C40
7BBE35>21 D<EB01C0496C14E00107EC03F0A3010F1407A24A14E0A2011F140FA24A14C0
A2013F141FA291C71380A249143FA2017E1500A201FE5CA249147EA2000115FE17074914
FCA215010003160F923803F80EA200070207131E030F131C6D131F033C1338486C137090
3AFF81E07C70903AC7FF803FE0903AC1FE000F80D81FC0C9FCA25BA2123FA290CAFCA25A
A2127EA212FEA25AA35A1270303C7EA737>I<011FB612C090B7FC5A5A481680260FC007
C8FC48C65A123E003C130E48131E5A5AA2C75AA3147CA2147814F8A4495AA31303A25CA2
1307A3495AA3131FA25C6DC9FC2A287DA628>28 D<121EEA7F80A2EAFFC0A4EA7F80A2EA
1E000A0A798919>58 D<17075F84171FA2173F177FA217FFA25E5EA24C6C7EA2EE0E3F16
1E161C1638A21670A216E0ED01C084ED0380171FED07005D150E5DA25D157815705D844A
5A170F4A5A4AC7FC92B6FC5CA2021CC7120F143C14384A81A24A140713015C495AA249C8
FC5B130E131E4982137C13FED807FFED1FFEB500F00107B512FCA219F83E417DC044>65
D<DC1FF81307923801FFFE030F9038FF800E923A7FF007E01E4A48C7EAF03EDA03FCEC78
7EDA0FF0EC3CFCDA3FC0141F4A48140F4AC8FC4948ED07F8EB07F849481503131F4A16F0
49481501495A13FF4890C913E05B1203485A19C0485AA2485A95C7FC123F5BA2127F5BA3
12FF5BA590CCFC183CA21838A21878187018F06C6C5E17014D5A003F5F6D15074DC7FC00
1F161E6C6C5D6D5D6C6C5D00034B5AD801FEEC07C06C6C4AC8FCD97FC0137E90391FF803
F80107B512E0010114809026001FF8C9FC40427BBF41>67 D<49B77E18F818FFD90001D9
00017F9438003FE04BEC0FF0727E727E14034B6E7EA30207825DA3020F4B5A5DA24E5A14
1F4B4A5A614E5A023F4B5A4B4A5A06FEC7FCEF03FC027FEC0FF04BEBFF8092B500FCC8FC
5F9139FF8001FE92C7EA7F80EF1FC084496F7E4A1407A28413035CA2170F13075C60171F
130F5CA3011F033F5B4AEE038018E0013F17071A004A021F5B496C160EB600E090380FF0
1E05075B716C5ACBEAFFE0F03F8041407DBD45>82 D<EC01F8EC0FFE91383F07879139FC
03DF80903801F801903903F000FFEB0FE04948EB7F005C133F49C7FC49147E5B000115FE
A248485CA215011207495CA21503120F495CA21507A25E5B0007140FA24B5A6D133F0003
147F000114FF6D485B0000EB03DF90387E0F3FEB1FFCD907F090C7FC90C7FC5DA2157EA2
15FEA25D001C1301007F5C4813035D4A5A4A5A48495A00F8017EC8FC387E01FC381FFFE0
000390C9FC293B7FA72B>103 D<01F8D907F0EB07F8D803FED93FFEEB1FFE28078F80F8
1FEB781F3E0F0F81C00F81E00F803E0E07C78007C3C007C0001CD9CF00EBC78002FEDAEF
007F003C4914FE0038495C49485C12780070495CA200F0494948130F011F600000495CA2
041F141F013F6091C75B193F043F92C7FC5B017E92C75A197E5E01FE9438FE01C049027E
14FCA204FE01011303000106F81380495CF20700030115F00003190E494A151E1A1C0303
5E0007943800F8F0494AEC7FE0D801C0D900E0EC1F804A297EA750>109
D<01F8EB0FF0D803FEEB3FFC3A078F80F03E3A0F0F83C01F3B0E07C7800F80001CEBCF00
02FE80003C5B00385B495A127800705BA200F049131F011F5D00005BA2163F013F92C7FC
91C7FC5E167E5B017E14FE5EA201FE0101EB03804914F8A203031307000103F013005B17
0E16E000035E49153C17385F0007913801F1E0496DB45AD801C0023FC7FC31297EA737>
I<EC07F8EC7FFE903901FC0F80903907E007E090390FC003F090393F8001F8EB7F0001FE
EB00FC485A484814FEA2485A120F5B001F15FF485AA2ED01FE127F5BA2150300FF15FC90
C7FCA2ED07F8A2ED0FF0A2007E15E0007FEC1FC0ED3F80A26CEC7F006C6C13FC4A5A6C6C
485A3907E00FC02601F03FC7FC3800FFFCEB1FE028297DA72C>I<D801F0EB3F80D807FC
EBFFE03A0F1F03C0F0000E90380F00F8391E0F9E03001C13BC003CEBF807003813F0A226
781FE013F000709038C001C092C7FC5C12F0133F000090C8FCA35B137EA313FE5BA31201
5BA312035BA312075BA3120F5BEA038025297EA729>114 D<EC1FC0ECFFF8903803E03C
903807800E90381E0007168049130F49131F153FA201F81400A2151C6D90C7FC7FEBFFE0
14FE90387FFFC06D7F6D13F86D7F13039038001FFE14031400157E000C143E123F487EA2
48C7123CA25D12FC00F05C0070495A0078495A6C495A260F803EC7FC3803FFF838007FC0
21297CA72B>I<147014FC1301A25CA21303A25CA21307A25CA2130FA25CA2007FB512F0
B6FC15E039001F8000133FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25BA2
1207EC01C013E01403000F1480A2EBC0071500140E141E5C000713385C3803E1E03801FF
80D8003EC7FC1C3A7EB821>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr10 10.95 71
/Fd 71 123 df<913801FFC0021F13FC9139FF007F80D903F8EB0FE0D90FF0EB07F8D91F
C0EB01FCD97F806DB4FC49C86C7E48486F7E00038348486F7E000F8349150F001F834915
07003F83A348486F7EAA6C6C4B5AA3001F5FA26C6C4B5AA200075F6D151F00035FA26C6C
4B5A00005FA2017F4BC7FC6D157EA26D6C5C010F5DA26D6C495A00E0EF0380010315E0D8
70019238C007006E130301001580A36C0160EC000E003C017049131E263FFFF0ECFFFEA3
6C5FA339407CBF42>10 D<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383F
F03FD907F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01
FE6D91C7FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35
>I<EC03FE91383FFF809138FE03E0903903F800F0D90FE013384948137C90393F8001FE
90387F00035B5BA2485A6F5AED007093C7FCAA16FEB7FCA33901FC000315011500B3AC48
6C497EB5D8F87F13FCA32E407EBF33>I<DA03FE49B4FC91273FFF801F13C0913BFE03E0
7F01F0903C03F000F1FC0078D90FE0D97FF0131C49484948133E4948484913FF49484849
5A5B491500A248485C03016E5A0300153896C7FCAA197FBBFCA3D801FCC738FE00018485
B3AC486C496CECFF80B5D8F87FD9FC3F13FEA347407EBF4C>14 D<121EEA7F8012FF13C0
A213E0A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B
1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B1201
5B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C12FCB2127C127EA6123E
123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB07801303EB
01C0EB00E014701430145A77C323>I<12C07E12707E7E121E7E6C7E7F12036C7E7F1200
7F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A6130314F0B214E01307A614
C0130FA31480A2131F1400A25B133EA25BA2137813F85B12015B485A12075B48C7FC121E
121C5A5A5A5A145A7BC323>I<1506150FB3A9007FB912E0BA12F0A26C18E0C8000FC9FC
B3A915063C3C7BB447>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013
C0A312011380120313005A120E5A1218123812300B1C798919>I<B512FEA617067F961E>
I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<ED0180ED03C01507A21680
150FA216005DA2151E153EA2153C157CA2157815F8A25D1401A25D1403A25D1407A25D14
0FA24AC7FCA2141E143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A25C130F
A291C8FC5BA2131E133EA25BA2137813F8A25B1201A25B1203A25B1207A25B120FA290C9
FC5AA2121E123EA2123C127CA2127812F8A25A1260225B7BC32D>I<EB01FE90380FFFC0
90383F03F090387C00F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A300
3F15F0A290C712034815F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0F
C0A26C6CEB1F80000315006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC
263F7DBC2D>I<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0
B612F8A31D3D78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F00
01FE001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120C
C813E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C
495A495A495A495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A48
15C0B7FCA3243D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD8
0F007F000E6D7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600
A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E
1680ED7FC0A216E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278ED
FF807E6C4913006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC
2D>I<150E151E153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214
E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5A
A25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D80780131F01F813
FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCACEB01FE90380FFF8090383E03E09038
7001F8496C7E49137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F
12FFA416E090C7121F12FC007015C012780038EC3F80123C6CEC7F00001F14FE6C6C485A
6C6C485A3903F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EC1FE0ECFFF8903803
F03E90380FC00F90391F000780133E017EEB1FC049133F4848137F12035B12074848EB3F
80ED1F00001F91C7FC5BA2123FA3485AA214FE903887FF8039FF8F07E090389C01F09038
B800FC01B0137E13F0497F16804914C0A2ED1FE0A34914F0A5127FA6123F6D14E0A2121F
ED3FC0A26C6C1480A20007EC7F006C6C137E6C6C5B6C6C485A90387E07F06DB45A010F13
80D903FCC7FC243F7CBC2D>I<1238123C123F90B612FCA316F85A16F016E00078C71201
0070EC03C0ED078016005D48141E151C153C5DC8127015F04A5A5D14034A5A92C7FC5C14
1EA25CA2147C147814F8A213015C1303A31307A3130F5CA2131FA6133FAA6D5A0107C8FC
26407BBD2D>I<EB03FC90381FFF8090387C07E09038F001F83901E0007C48487F48487F
48C7FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C131F6D140001FC133E6C6C
5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C06D7F013F13F801787F48
486C7E3903E01FFF48486C1380260F800313C048487E489038007FE0003E143F007E141F
007CEC0FF01507481403A31501A46C15E0007C1403A2007E15C06C14076CEC0F806DEB1F
006C6C133ED807F05B3901FC03F86CB512E0011F1380D903FCC7FC243F7CBC2D>I<EB03
FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C000F147E4848137F8100
3F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13
FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680
157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E000FE0001F495A260FC07F
C7FC3803FFFE6C13F838003FC0243F7CBC2D>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619>I<007FB912E0BA12F0
A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>61 D<EB1FF890B5FC3903E0
1FC0390F0007F0001EEB03F848EB01FC4814FE140000FE14FF7E7FA46CC7FC123EC7EA01
FEA2EC03FCEC07F815F0EC0FC0EC1F80EC3F00143E5C147814F85C13015CA2495AA25CAB
91C7FC90C8FCA8EB0780EB1FE0A2497EA46D5AA2EB078020407BBF2B>63
D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC6
7EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA24981913880
0001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2017882170F13
FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65 D<B712FCEEFF8017F000
01903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171F
A318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07
FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF
1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A17E094C7FC373E7DBD40
>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007E03E9139FF8000F8D903
FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A91C81201484815001203
4848167E5B000F173EA24848161EA2123F5B180E127FA349160012FFAC127F7F180EA212
3FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117706C6C16F06EEC01E06D
6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600FF8013F891393FF007F0
020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEEFF8017E000019039C000
1FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184717EA21980187F19C0A3
F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC0
4DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>I<B912E0A300019038C0
00016C6C48EB001FEF0FF01703A217011700A31870A418381638A41800A21678A216F815
01150791B5FCA3EC8007150115001678A21638A2180EA3181C93C7FCA4183C1838A21878
A318F8EF01F0A21707170F173F48486CEB03FFB912E0A3373E7DBD3E>I<B91280A30001
9038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF00E0A21638A31800A316
78A216F81501150791B5FCA3EC8007150115001678A21638A693C8FCAF3801FFE0B612F0
A3333E7DBD3B>I<B6D8C01FB512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691B7
FCA30280C7120FB3A92601FFE0EC3FFCB6D8C01FB512F8A33D3E7DBD44>72
D<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>I<011FB512FCA3D9
000713006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380D87F005B007C130700385C00
3C495A6C495A6C495A2603E07EC7FC3800FFF8EB3FC026407CBD2F>I<B612F8A3000101
E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A160748486C133FB8FC
A3313E7DBD39>76 D<B500C093B512C0A300016D4BEBE000D8007F1880D977F0ED03BFA3
D973F8ED073FA3D971FC150EA2D970FE151CA3027F1538A36E6C1470A36E6C14E0A26E6C
EB01C0A36E6CEB0380A36E6CEB0700A26E6C130EA36E6C5BA3037F5BA26F6C5AA36F6C5A
A392380FE1C0A3923807F380A26FB4C7FCA36F5AA213F8486C6D5AD807FFEFFFE0B500F8
0178017FEBFFC0A34A3E7CBD53>I<B56C91B512F88080D8007F030713006EEC01FC6E6E
5A1870EB77FCEB73FEA2EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7F
A26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2
EE07FCEE03FEA2EE01FF7013F0A2177F173FA2171F170FA2170701F81503487ED807FF15
01B500F81400A218703D3E7DBD44>I<ED7FE0913807FFFE91391FC03F8091397E0007E0
4948EB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E0001834915
0300038348486F7EA248486F7EA2001F188049167F003F18C0A3007F18E049163FA300FF
18F0AC007F18E06D167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A00035F6D
150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8D900
7FEB0FE091391FC03F80912607FFFEC8FC9138007FE03C427BBF47>I<B712F8EEFF8017
E000019039C0003FF86C6C48EB07FCEE01FE707EEF7F80EF3FC018E0A2EF1FF0A218F8A8
18F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE3FF091B612C04CC7FC0280C9FCB3A7
3801FFE0B612C0A3353E7DBD3E>I<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0
EE07FCEE01FE707E84717EA2717EA284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0
EEFF8091B500FCC8FC16F091388001FCED003FEE1FC0707E707E83160383160183A383A4
84A4F0C004190EA28218E0057F131E2601FFE0161CB600C0EB3FF094381FF83805071370
CA3801FFE09438003F803F407DBD43>82 D<D907FC131890391FFF8038017FEBE0783901
FC03F83A03F0007CF8D807C0133F4848130F001F140748C7FC003E1403007E1401A2007C
140012FC1678A46C1538A27EA26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C
14FC6C14FF6C15C0013F14E0010714F0EB007F020713F89138007FFC150FED07FE150315
01ED00FFA200E0157FA3163FA27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F0
6DEB07E0D8F9FCEB0FC03AF07F803F8090391FFFFE00D8E00713F839C0007FC028427BBF
33>I<003FB91280A3903AF0007FE001018090393FC0003F48C7ED1FC0007E1707127C00
781703A300701701A548EF00E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<
B600C090B512F8A3000101E0C70007130026007F80EC01FC715A1870B3B3A4013F16F06E
5DA21701011F5E80010F15036E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C
485A91390FF00FE00203B51280020049C8FCED1FF03D407DBD44>I<B500FE017FB5D880
07B5FCA3000301C0010101E0C713F86C90C849EC3FE07148EC0F807E7215006E143F017F
190E84A26D6C60A24D7E6D6C60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E
0281140101036104077F17006D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F8016
0EA24CEB1FE003C0161E023F171C047814F0DBE070010F133C021F173804F014F84C1307
DA0FF05EA2DBF1C0EB03FCDA07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B
157F020094C8FCA24B81037C153EA20378151E0338151C58407EBD5D>87
D<B66C0103B51280A3000101F0C8EBF8006C6C48ED3FC0725A013F041EC7FC6D7E606D6C
15386D6C1578606D6C5D6E14016D5E6D6D1303606E6C49C8FC6E6C5B170E6E6C131E171C
6E6C5B6E6C137817706E6C13F06F5B6E13016EEB83C05FED7FC7DB3FE7C9FC16EFED1FFE
5E150F6F5AB3A4ED1FFC020FB512FCA3413E7FBD44>89 D<EB0FF8EBFFFE3903F01F8039
078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5
FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3
007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001
F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E090
39FDE001F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8
AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F0
9039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8
017C131E4848131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA2
90C9FC5AAB6C7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E
6C6C137890383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA315071503
1501B114FF010713E190381F80F990387E003D49131FD803F81307485A49130348481301
121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C
6C497ED8007C017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01
FE90380FFFC090383F03F09038FC01F848486C7E4848137E48487F000F158049131F001F
15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501
000F15C06C6C13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090
C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F81
1401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>
I<167C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000
FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E0
3903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C
15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E00
7E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C029
3D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803
F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA3
2E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA312071203
1201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00781400
AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F01387C
03F0381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA3120712031201B292B5
1280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13
FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282
486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1487EB5
12F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F091
3B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F
91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C
>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E001F82603F9C07F
0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<
14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E000
0F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15
F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380F
FFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003
F03A07FFC001FC6C496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE
0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780F
C0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF131C0107EBC03C90
381F80F090397F00387C01FC131CD803F8130E4848EB0FFC150748481303121F485A1501
485AA448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C133DD8007E1379
90383F81F190380FFFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7DA730>I<3901F8
07E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300
A35BB3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E03807C03F381F000F00
3E1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE
6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E
15F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>
I<131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0
A912009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<D801
FC14FE00FF147FA3000714030003140100011400B3A51501A31503120015076DEB06FF01
7E010E13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I<B539E0
0FFFE0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2
ECC007011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2EC
FEF001005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A329
0FFE003FE00013C06C486D48EB3F806C4817006D010F141E00016F131C15076D163C0000
4A6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90F
E0017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315CE9138FB800F02
FF14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813003D287EA642>
I<B539F01FFFE0A30003D9C00F1300C690388007F8D97F0013E002805BD93FC05B011F49
C7FC90380FE00EECF01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E8114
7BECF1FC903801E1FEECC0FF01037F49486C7ED90F007F011E6D7E013E130F496D7E01FC
80486C80000F4A7EB539803FFFF8A32D277FA630>I<B539E00FFFE0A32707FE00031300
6C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A01
0F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8
FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD87E07C9FC
EA780EEA3C3CEA1FF8EA07E02B3A7EA630>I<001FB61280A2EBE0000180140049485A00
1E495A121C4A5A003C495A141F00385C4A5A147F5D4AC7FCC6485AA2495A495A130F5C49
5A90393FC00380A2EB7F80EBFF005A5B484813071207491400485A48485BA248485B4848
137F00FF495A90B6FCA221277EA628>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx10 10.95 33
/Fe 33 122 df<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E
0E798D1D>46 D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC0C7
FCACEA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E2879A71D>
58 D<16FCA24B7EA24B7EA34B7FA24B7FA34B7FA24B7FA34B7F157C03FC7FEDF87FA202
0180EDF03F0203804B7E02078115C082020F814B7E021F811500824A81023E7F027E8102
7C7FA202FC814A147F49B77EA34982A2D907E0C7001F7F4A80010F835C83011F8391C87E
4983133E83017E83017C81B500FC91B612FCA5463F7CBE4F>65 D<B812F8EFFF8018F018
FC8426003FFCC7EA3FFF050F13807113C07113E08319F0A27113F8A719F05FA24D13E019
C04D13804D1300EF3FFE933801FFF891B712E0188018F818FE02FCC7380FFF80050313C0
7113E07113F019F8F07FFCA2F03FFEA219FFA38460A419FE187FA2F0FFFC4D13F85F4D13
F0053F13E0BA12C0190018FC18F095C7FC403E7DBD4A>I<922607FFC0130E92B500FC13
1E020702FF133E023FEDC07E91B7EAE1FE01039138803FFB499039F80003FF4901C01300
013F90C8127F4948151FD9FFF8150F48491507485B4A1503481701485B18004890CAFC19
7E5A5B193E127FA349170012FFAC127F7F193EA2123FA27F6C187E197C6C7F19FC6C6D16
F86C6D150119F06C6D15036C6DED07E0D97FFEED0FC06D6CED3F80010F01C0ECFF006D01
F8EB03FE6D9039FF801FFC010091B55A023F15E002071580020002FCC7FC030713C03F40
7ABE4C>I<B812F8EFFF8018F018FC18FF26003FFCC76C13C005077F05017F716C7E727E
727E727E721380A27213C0A27213E0A21AF084A21AF8A41AFCA5197FA319FFA51AF8A41A
F0A2601AE0A24E13C0A24E13804E1300604E5A4E5A4D485A050713E0057F5BBA5A4EC7FC
18F818C005F8C8FC463E7DBD50>I<BAFCA4198026003FFEC7123F1707170183183FA218
1FF00FC0A31807EE07C0A3F003E0A3160F95C7FC161F163F16FF91B6FCA54AC6FC163F16
1F040F147CA2160719F8A593C71201A219F01803A21807A2180FF01FE0183F18FF170317
3FBAFCA219C0A33E3D7DBC45>I<B712E0A526003FFEC9FCB3AD183EA4187E187CA418FC
A21701A2EF03F8A21707170F171F177FEE01FF160FB9FC18F0A4373E7DBD3F>76
D<B6051FB512C06F5EA26F5EA2D8003F97C7FC6F16F7A26E6CED01E7A26E6CED03C7A36E
6CED0787A26E6CED0F07A26E6C151EA36E6D143CA26E6D1478A26E6D14F0A26F6CEB01E0
A36F6CEB03C0A26F6CEB0780A26F6CEB0F00A36F6C131EA26F6D5AA26F6D5AA26F6D5AA3
93387FF1E0A293383FFBC0A270B45AA37090C7FCA2705AA2705AB600C0031FB612C0A270
5AA2705A5A3E7CBD63>I<ED3FFF0203B512F0021F14FE027F6E7E902701FFF80713E001
07D9C00013F84990C7EA3FFCD93FFCEC0FFF49486E7F49486E7F48496E7F4A8048844849
6F7EA24890C96C7E4884A249161F003F84A34848701380A400FF19C0AD007F19806D5EA3
003F1900A26D5E6C60A26C6D4B5AA26C6D4B5A6C6D4A5BA26C6D4A5B6C6D4A5B6D6C4A5B
6DB4023F90C7FC6D01C0EBFFFE0107D9F80713F8010190B612E06D5E021F4AC8FC020314
F0DA003F90C9FC42407ABE4F>79 D<B812F017FF18C018F018FC26003FFCC77FEF1FFF71
13807113C07113E0A27113F0A319F8A819F0A34D13E019C05F4D1380053F1300EFFFFE91
B712F860188005FCC7FC4ACAFCB3A4B77EA53D3E7DBD47>I<B87E17FCEFFF8018F08428
003FFC000113FE9338003FFF050F7F717F717FA2858385A761A25F61614D5B4D90C8FCEF
3FFE4CB45A91B712F018C04DC9FC717E9126FC000F7F040113F0707F717EA2717EA2717E
A685A6F207C019C0A271140F07E01380B76DEBF01F719038FC3F007190B5FC716C5B061F
13F8CB000113E04A3F7DBD4E>82 D<903A03FFC001C0011FEBF803017FEBFE0748B6128F
4815DF48010013FFD80FF8130F48481303497F4848EB007F127F49143F161F12FF160FA2
7F1607A27F7F01FC91C7FCEBFF806C13F8ECFFC06C14FCEDFF806C15E016F86C816C816C
816C16806C6C15C07F010715E0EB007F020714F0EC003F1503030013F8167F163F127800
F8151FA2160FA27EA217F07E161F6C16E06D143F01E015C001F8EC7F8001FEEB01FF9026
FFE00713004890B55A486C14F8D8F81F5CD8F00314C027E0003FFEC7FC2D407ABE3A>I<
903807FFC0013F13F848B6FC48812607FE037F260FF8007F6DEB3FF0486C806F7EA36F7E
A26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F4813E0000F1380381FFE0048
5A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01FB13FE391FFF07F36CEBFFE1
00031480C6EC003FD91FF890C7FC2F2B7DA933>97 D<EC7FF00107B5FC011F14C0017F14
E09039FFF01FF0489038800FF848EB001F4848EB3FFC120F485AA2485AA2007FEC1FF849
EB0FF0ED03C000FF91C7FCAB127F7FA3003F153E7F001F157E6C6C147C6C6C14FC913880
01F86C9038C003F0C69038F81FE06DB512C0011F14800107EBFE009038007FF0272B7DA9
2E>99 D<EE07F8ED07FFA5ED003F161FAFEC7FF0903807FFFE011FEBFF9F017F14DF9039
FFF01FFF48EBC00348EB00014848EB007F485A001F153F5B123FA2127F5BA212FFAA127F
A37F123FA26C6C147F120F6D14FF6C6C01037F6C6D48EBFFE06CEBF03F6C6CB512BF6D14
3F010713FC010001E0EBE00033407DBE3A>I<ECFFF0010713FE011F6D7E017F809039FF
E07FE0489038801FF048496C7E48486D7E48486D7E121F491301003F81A2485A6F1380A2
12FFA290B7FCA401F0C9FCA5127FA27F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E
6C9038E001FC6C9038F80FF8013FB55A6D14C0010391C7FC9038007FF8292B7DA930>I<
EC07FE91387FFF8049B512C0010714E090390FFE3FF0EB1FF090393FE07FF8EB7FC013FF
1480A2489038003FF0ED1FE0ED0FC092C7FCAAB612E0A500010180C7FCB3AC007FEBFF80
A525407DBF20>I<903A03FF8007F0013F9038F83FF8499038FCFFFC48B712FE48018313
F93A07FC007FC34848EB3FE1001FEDF1FC4990381FF0F81700003F81A7001F5DA26D133F
000F5D6C6C495A3A03FF83FF8091B5C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F
13F06CB6FC16F016FC6C15FF17806C16C06C16E01207001F16F0393FE000034848EB003F
49EC1FF800FF150F90C81207A56C6CEC0FF06D141F003F16E001F0147FD81FFC903801FF
C02707FF800F13006C90B55AC615F8013F14E0010101FCC7FC2F3D7DA834>I<EA01F848
7E487E487E481380A66C13006C5A6C5A6C5AC8FCA913FFB5FCA512077EB3ABB512F8A515
407CBF1D>105 D<13FFB5FCA512077EB3B3AFB512FCA5163F7CBE1D>108
D<01FFD91FF8ECFFC0B590B5010713F80203DAC01F13FE4A6E487FDA0FE09026F07F077F
91261F003FEBF8010007013EDAF9F0806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA3
4A5CB3A4B5D8FE07B5D8F03FEBFF80A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E
4A80DA0FE07F91381F007F0007013C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5
33297CA83A>I<EC7FF0903803FFFE011FEBFFC0017F14F09039FFE03FF8489038800FFC
3A03FE0003FE48486D7E000F168048486D13C0A2003F16E049147F007F16F0A400FF16F8
AA007F16F0A46C6CECFFE0A2001F16C06C6C491380A26C6C4913003A03FF800FFE6C9038
E03FFC6C6CB512F0011F14C0010791C7FC9038007FF02D2B7DA934>I<01FFEBFFE0B500
0713FC021FEBFF80027F80DAFF8113F09139FC007FF8000701F06D7E6C496D7E4A130F4A
6D7E1880A27013C0A38218E0AA4C13C0A318805E18005E6E5C6E495A6E495A02FCEBFFF0
DAFF035B92B55A029F91C7FC028713FC028113C00280C9FCACB512FEA5333B7DA83A>I<
DA7FE01378902607FFFC13F8011FEBFF01017F14819039FFF81FC3489038E007E7489038
8003F74890380001FF48487F001F157F5B003F153F5B127F161FA2485AAA127F7FA36C6C
143F167F121F6C6C14FF6D5B6C6D5A6CEBC00F6CEBF03F6C6CB512BF6DEBFE3F010713F8
010013C091C7FCAC030FB512E0A5333B7DA837>I<3901FE01FE00FF903807FF804A13E0
4A13F0EC3F1F91387C3FF8000713F8000313F0EBFFE0A29138C01FF0ED0FE091388007C0
92C7FCA391C8FCB3A2B6FCA525297DA82B>I<90383FFC1E48B512BE000714FE5A381FF0
0F383F800148C7FC007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15C06C14
F06C806C806C806C80C61580131F1300020713C014000078147F00F8143F151F7EA27E16
806C143F6D140001E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7FC222B7DA9
29>I<EB07C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA40001EBC000
B3151FA96CEBE03EA2017F137EECF8FC90383FFFF86D13F0010713E001001380203B7EB9
29>I<D9FF80EB0FF8B5EB0FFFA50007EC007F6C153FB3A5167FA316FF6C5C4B7F6C903A
C007DFFFE09138F01F9F6DB5121F6D13FE010F13F8010101E0EBE000332A7CA83A>I<B5
00FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F013F92C7
FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5B
A36E90C8FCA26E5AA26E5AA26E5AA26E5AA232287EA737>I<B5D8FC03B51280A5C69026
E0007FC7FC6E13FE6D6C5B6D6C485A6D6C485A010F13076D6C485AED9FC06DEBFF806D91
C8FC6D5B6E5AA2143F6E7E140F814A7F4A7F4A7F02FE7F903801FC7F49486C7E02F07F49
486C7E49486C7E011F7F49486C7FD97F008001FE6D7FB5D8C007EBFFC0A532287EA737>
120 D<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F
013F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C
15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA35D14075D000E130FD83F805B387F
C01FD8FFE090C9FC5C143E147E5CEBC1F8387FC3F0387E0FE06CB45A6C5B6C48CAFCEA03
F8323B7EA737>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr17 17.28 43
/Ff 43 119 df<120FEA3FC0EA7FE012FF13F0A313F8A2127F123FEA0F381200A71378A2
1370A313F013E0A2120113C012031380120713005A121EA25A5A127012300D28748B24>
44 D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0FE049486D
7E49486D7E49C76C7E017E140049157E0001167F49810003178049151F000717C049150F
000F17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F17FCA56D
1507A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D153F0001
17006D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F806DB448
B4C7FC9039007FFFFC021F13F0020190C8FC37607BDD42>48 D<EC01C014031407140F14
3F147FEB03FF130F90B5FCB6FCEBFC7F13F01300C7FCB3B3B3B3A24A7EA2010713FCB812
E0A42B5E74DD42>I<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF8090263E
000113E001FC6D6C7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E81001E6F
13C0121C003CEE7FE012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C5A0006C9
13F0CA123FA318E0177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A4C5A5F4C
C7FC4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E
4A15385C495A495A49481570495A49C9FC131E5B4916F05B484816E04848150148481503
48B8FCA25A5A5AB912C0A4355E7ADD42>I<913803FF80023F13F849B512FE01076E7E90
261FFC0013E0D93FC0EB3FF8017EC7EA0FFC01F86E7E48486E7E48486E13804848804916
C048C9EA7FE013E013F8486CED3FF07FA66C5A6C5AEA01E0CAEA7FE0A318C017FF18805E
18005E5F4C5A4C5A4C5A4C5AEE7F804CC7FCED03FC913801FFF091B512C05E16F8913800
01FE9238003F80EE1FE0EE07F8707E707E83701380EF7FC018E0173F18F018F8171FA218
FCA2170F18FEA21207EA1FC0EA7FF0A2487EA5EF1FFC5B5B6C4816F80078C9123F18F07E
EF7FE07E001FEEFFC06C6C4A13806C7E6C6C4A1300D801F84A5AD800FEEC1FF8D93FC049
5A903A1FFC01FFE00107B6128001014AC7FCD9003F13F00203138037607BDD42>I<1778
A217F81601A216031607A2160F161FA2163FA2167F16FF16EF1501ED03CF168F1507160F
150E151E151C153C1578157015F015E0EC01C0140315801407EC0F00140E141E141C5C14
78147014F0495A5C13035C49C7FC5B130E131E5B133813785B5B12015B1203485A90C8FC
5A121E121C123C12385A12F0BA12E0A4C9D80FF8C7FCB34C7EEE7FFF4AB712C0A43B5F7D
DE42>I<486C150301E0150F01FC153FD9FF80EB03FE02F8EB3FFC91B65A5F5F178094C7
FC16FC01DF14F001C314809026C03FF8C8FC91CAFCB3A34AB47E021F13F0027F13FC9039
C1FE00FFD9C3E0EB3F80D9CF80EB1FE001DFC76C7E01FC6E7E496E7E49140183496E7E5B
CAEA7F8018C0A2173F18E0A218F0A2171FA318F8A6EA1F80EA7FC07F12FF7FA218F05B17
3F5B4916E00070C9FCA20078EE7FC0A26CEEFF80A26C4B1300A26C4B5A6C6C4A5A6D5D6C
6C4A5AD801F8EC3FE06C6C4A5A017F49485A90273FF00FFEC7FC010FB512F8010314E001
001480DA0FF8C8FC35607ADD42>I<ED03FF033F13E092B512F8020314FE91390FFE00FF
DA1FE0EB1F80DA7FC0EB07C04AC712034948EC01E0494814034948EC1FF04948143F4948
147F5C495A137F49C8FCA24848ED3FE0EF1FC0484892C7FCA2485AA2120F5BA2121FA25B
123FA3127F913801FFF0020713FCD9C01F13FF91393E003FC00278EB0FE000FF01E0EB07
F8D9C1C06D7ED9C3806D7E01C7C8FC177F01CE168001CCED3FC013DC01D8ED1FE001F816
F049150F18F8A34916FC1707A318FE5BA3127FA67F123FA4001F17FCA27F000F160F18F8
A212076DED1FF012036D16E00001EE3FC07F0000EE7F806DEDFF006D6C5C013F4A5AD91F
E0495A6D6CEB0FF06D6C495A6DB4EBFFC0010090B5C7FC023F5B020F13F0020113803760
7BDD42>I<120E121E121F7F13F890B912C0A4481880A2190060A2003ECA123C003C1738
0038177800785F60007016014D5A6017074DC7FC48161E171C173C5FCA127017F04C5A5F
16034C5A94C8FC5E161E161C163C5EA25EA24B5A15035E15075E150FA24BC9FCA25D153E
157EA315FE5D1401A314035DA21407A3140FA4141F5DA4143FA7147FAC6E5A6E5A6E5A3A
637AE042>I<4AB47E021F13F0027F13FC49B6FC902607FE007FD90FF0EB3FC04948EB0F
E049486D7E49486D7E49C76C7E484881484814004848157F18804848153F001F17C0A248
48151F18E0A2007F17F049150FA300FF17F8A418FC1707A618FEA2170F127FA46C7E171F
A2121F6D153F000F163717776C6C15676C6C15E70001ED01C77F6C6CEC03876D6CEB0707
6D6C130ED90FE0133CD907F801F813FC0101B512F06D14C0021F130091C8120FA218F8A4
18F0171FA218E0A2173F18C0A2EF7F80EA07F0486CEDFF00487E4C5A5F16035F4C5A4914
0F6C484A5A01804A5A90C8485A6C6C4AC7FC01E0495A6C6CEB07F86CB4EB3FF06C6CB512
C0011F91C8FC010713FC010013E037607BDD42>57 D<120FEA3FC0EA7FE0EAFFF0A6EA7F
E0EA3FC0EA0F00C7FCB3B3A2120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C3E74
BD24>I<170FA34D7EA24D7EA34D7EA34D7EA34C7F17DFA29338039FFC178FA29338070F
FE1707040F7FEE0E03A2041E80EE1C01A2043C80EE3800A24C80187FA24C80183FA24B48
80181F0303814C130FA203078193C71207A24B81030E80A24B8284A24B8284A24B82197F
03F0824B153FA20201834B151FA202038392B8FCA24A83A292C91207020E8385A24A8485
023C84023882A20278840270177FA202F0844A173FA24948841A1FA24948841A0FA249CB
7F1A074985865B496C85497E48486C4D7F000F01F8051F13F0B60407B612F0A45C657DE4
63>65 D<DD7FF81560040FB56C14E0047F14E00303B600FC1301030F9038E003FEDB3FFE
C7383F8003DBFFF0EC07C04A01C0913803F007020790C9EAF80FDA0FFC167C4A48EE1E1F
DA7FE0160F4A48EE07BF4949EE03FF4990CAFC4948834948834A187F495A013F193F4948
181F5C01FF190F485BA24890CC1207A248481903A2485A1B01121FA25B123F1B005BA212
7F1C00A4485AB06C7EA5123F1CE07FA2121F7FA2000F1A011CC06C7EA26C7E1B036C6D19
801B076C7F017F1A006E606D6C181E131F6D6C606E18386D6C18786D6C606D6D4C5A6D6D
4C5A6E6C1607DA1FF84C5A6E6C4CC7FC6EB4167C020101C04A5A6E01F0EC07F0DB3FFEEC
1FC092280FFFE001FFC8FC030390B512FCDB007F14F0040F14809326007FF8C9FC53667A
E360>67 D<B912F018FF19E019F8C601FCC8EA7FFED93FF892380FFF80011F04017F9538
007FF0F11FF8737EF103FE737E737F747E747E747E1A0F87747E1A0387747EA2741380A2
F37FC0A21CE01B3FA21CF0A21B1F1CF8A31CFCA21B0FA41CFEAF1CFCA51B1F1CF8A4F33F
F0A21CE0A21B7F1CC01BFF1C80A2501300A2505A505AA2505A505A505A505A1AFF4F5B4F
90C7FCF107FCF11FF8F17FF0953801FFC0013F04075BD9FFFCDB7FFEC8FCBA12F819E096
C9FC18F0576279E165>I<BC1280A4C601FCC81201D93FF8DB001F13C0011F170319001A
7F1A3F1A1F1A0F1A07A21A03A21BE01A01A41A00A61B701870A41B00A418F0A417011703
1707170F177F91B7FCA402F8C7127F170F1707170317011700A41870A31B0EA41B1C95C8
FCA51B3C1B38A31B78A41BF0A31A01A21A031A07A2F20FE01A1F1A7F1AFF1903013F171F
D9FFFC0303B5FCBC12C0A44F6279E15A>I<DDFFF015C0040F01FF1401047F14E00303B6
00F81303030F9038E003FEDB3FFCC7007F1307DBFFE0EC0FC002030180913803E00F4A48
C83801F01F4A48ED0078DA3FF0EE3C3F4A48161E4A48EE0F7F4949EE07FF4990CA7E495A
4948834948835C013F197F4948183F495A1B1F485B1B0F4890CCFCA248481907A2485A1B
03121F5BA2123F1B015BA2127F98C8FCA35B12FFB06C7EA24EB712E0A3123F95C7000FEB
F0006D06015B64001F857FA2120F7F1207A26C7EA26C7FA26C7FA26D7E6D7E131F806D7E
6D6C5F6D7E6D6D5E6D7F6E6CEE07BFDA3FF8EE0F3FDA0FFCEE1F1F6EB4163E6E01C0EDFC
0F020001F0913801F807DB3FFEEC0FE092260FFFF09038FF8003030390B538FE0001DB00
7F02F81300040F02C091C7FC040001F8CAFC5B667AE368>71 D<B712C0A4C66CEB8000D9
1FFEC7FC6D5AB3B3B3B3AE497E90387FFF80B712C0A422627AE12F>73
D<B712E0A4C60280CAFCD93FFCCBFC131F5CB3B3B21A1CA61A3C1A38A61A78A41AF8A21A
F01901A219031907A2190F191F193F197FF001FF1807013F043F13E0D9FFFC0203B5FCBB
FCA4466279E153>76 D<B500FC041FB512F0A280A226003FFF0400EBFE006D6DEE3FF8F2
0FE0011D7F745A011C7F6E6C705AA26E7E81141F6E7EA26E7E82806E7FA26E7F6F7EA26F
7E82151F6F7EA26F7E83816F7FA26F7F707EA2707E83161F707EA2707E8482707FA2707F
84177F717E84171F717EA2717E1980837113C0A27113E019F0187FF03FF819FC181FF00F
FEA2F007FF1A83847213C3A27213E31AF3197FF13FFB1AFF8585A285A28585A285133E1A
7F017F183FA22601FFC0171F000701F0170FB67E1A07A21A03546279E163>78
D<B812FCEFFFE018FCF0FF80C601FCC7000F13E0D93FF89138007FF8011FEE1FFCF007FF
06017F727FF13FE0737E86737E737EA2868587A28587A96361A298C8FC6162624F5A191F
4F5A4F5AF1FF804E90C9FCF007FEF01FF8F0FFE0050F138091B700FCCAFC18E08402F8C7
EA1FFE943801FF80716C7EF03FF0727EF007FC727E85727F8486737EA3737EAA86AA1DE0
86191FA3070F14017414C007071403496C8390B570EC0780B76F9038800F00736D5A9738
3FF03E97380FFFFCCD000313F09738003FC05B6479E162>82 D<DA07FF1403023F01F05B
49B512FC010702FF5B90260FFC0013C0D93FE090380FF01FD97F80EB03F801FEC86C5A48
48157E4848ED1F7F48486F5A4848815B001F824981003F8290CAFC4883A2007E83A212FE
84A384A27EA36D82A26C7EA26D93C7FC6C7E7F7F6C7E6D7E6C13E06C13FCECFFC06C14F8
6CECFF806C15F86DECFF80011F15E06D15F8010315FE01006F7E021F81020181DA003F80
030380DB003F7F04037FEE007FEF1FFF71138017037113C083A2F07FE0183FA2181F00E0
18F0180FA41807A27EA47E19E0180F7E19C07E6C171F19806D163F6D17006D5E6D16FE48
6C5E6D4B5AD8FC7F1503D91F80EC0FF026F80FE04A5AD907FCEC7F8029F001FFE003FFC7
FC6D6CB512FC48011F14F0020314C0489026001FFEC8FC3C667AE349>I<003FBC12F8A4
9126C000039038C0000301FCC76C49EB007F01F0190F01C019074848F103FC90C8170100
7E1A00007C1B7CA300781B3CA400701B1CA600F01B1E481B0EA7C91800B3B3B3A54C7FA2
041F13F84AB87EA457627CE160>I<B7031FB512F0A4C691CAEBFE00D93FFCEF3FF86D48
EF0FE0A2745AA2745AB3B3B3A71A07010F96C7FC80A30107601A0E6E171E13031A1C6D6C
173C1A386D6D1678626E7E023F4C5A6F4B5A6E6C15076E6C4B5A6E6C4BC8FC6E6C153E6E
6C15FC9126007FC0495ADB3FF0EB0FF0DB0FFEEB7FC00303B6C9FC030014FC043F13F004
031380546479E163>I<B600FC057FB5FCA4C60280050F13F0D93FFECB000313804A9538
01FE00011F62755A130F6E61010762806D4F5AA2816D4F5AA26F17076D97C7FC81027F18
0EA26F171E023F181C811B3C021F183881020F60A26F17F0020760811A016E60826E4D5A
A27015076E95C8FC82037F160EA282033F5E821A3C031F163882030F5EA27015F003075E
8219016F5E836F4B5AA27113076F93C9FC83047F140EA283043F5CA271133C041F143883
040F5CA27113F004075C831801705C188170EB8380A218C77091CAFC18E7EF7FEEA218FE
715AA3715AA2715AA3715AA3715AA260647FE163>I<B600FE051FB512C0A4C602C00507
EBF800013F49050113C06D90CC90C7FC6D626D6D606D626F606D4F5A6D7F6F4D5A027F61
6F1707023F4EC8FC6E6C170E6F171E020F181C6F5F6E6D16786E18707016F06E4D5A6E6D
5E701503037F5F704BC9FC033F5E6F6C150E70151E030F161C705D6F6D14786F16707114
F06F4B5A6F6D5C711303047F5D7149CAFC043F5C706C130E71131E040F5C71133870EB80
78701470F0C0F070EBC1E070EBE1C018F3057F5B06FFCBFC83715AA2715AB3B04D7E9438
7FFF80047FB67EA4626280E163>89 D<EC3FF0903803FFFE010F6D7E90393FC03FE09039
7E0007F801F86D7ED801E06D7E48486D7E48486E7E48C86C7E7F01F06E7E487E6D6E7EA3
707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF807903801FF80903807FC00EB
1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2484817E0A312FF5BA2160FA3161F
6D141B007F153B16736D913971FC01C06C6C14E1001FEC01C1D80FFC903A0780FE03806C
6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D5A011F01E0EB1FF8010190C7EA07
E03B417ABF42>97 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FC0923807FFFC
031F13FF92397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC87E02DE157F02FC
6F7E4A824A6F7E180F4A82727E5C727EA2851801A285A3841A80AD1A0060A461180361A2
1807616E5E180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A90263E0780495A6E6C
EB0FF090263C01F0495ADA007EEBFF806FB448C8FC0138010F13F890C8138041657DE349
>I<4AB47E020F13F8023F13FE9139FF007F80D903FCEB07E0D907F0EB01F0D91FE0EB00
7849488049488049C87E48485D4915FF00034B138048485CA2485AA2485AA2003F6F1300
49EC007C94C7FC127FA35B12FFAD127F7FA4123F7FA2001FEE01C07F000F16036D168012
076C6C15076D160000015E6C6C151E6D6C5C6D6C5C6D6C5CD90FF8495AD903FCEB07C090
3A00FF803F8091263FFFFEC7FC020F13F80201138032417CBF3A>I<181EEF3FFEEE07FF
A4EE000F1703A21701B3AAEDFF80020F13F8023F13FE9139FF803F81903A03FC0007C149
48EB01E1D91FE0EB00F94948147D4948143D49C8121F4848150F49150712034848150349
1501120F121F5BA2123F5B127FA45B12FFAD127F7FA3123FA27F121FA26C6C1503A26C6C
150712036D150F6C6C151F0000163D137F6D6CECF9FF6D6CEB01F1D90FF0D903C113C06D
6CD90F81EBFF80D901FFEB7F019039007FFFFC021F13E00201010091C7FC41657CE349>
I<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049486D7ED93FC06D7E49
C76C7E496E7E49140348488148481401000782491400000F8283485A1880123F49153FA2
007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C
6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D9
03FC495A902700FF803FC7FC91383FFFFC020F13F00201138032417CBF3A>I<ED0FF0ED
7FFC4AB5FC913907F81F8091390FE00FC091381FC03F91393F807FE0EC7F005C495A5C01
03EC3FC0A24948EB0F0093C7FCA2495AB3A5B712F0A426000FF0C8FCB3B3B0497EEB3FFE
003FB6FCA42B657EE428>I<F03F80DA03FC903801FFE091273FFFC00713F091B539F01F
C1F8903B03FC03FC3E03903A07F000FE784948EB7FE04948EB3FC04948011FEB01F049C7
6C6CC7FC01FE6E7EA248486E7EA2000382A2491401000782AA00035E6D1403A200015EA2
6C6C4A5AA2017F4A5A6D6C495A6D6C495A496C49C8FCD937F013FE903973FC03FC0160B5
12F0D9E03F13C0DA03FCC9FC4848CBFCA57FA27FA27F6C7E13FF91B512FE6DECFFF06D15
FE6D6F7E6D16E084013F16FC01FEC700017FD803F8EC001FD807E0ED03FF484803001380
4848167F003FEF3FC090CA121F127EF00FE012FE481707A66C170F007E18C0A2007F171F
6C6CEE3F806C6CEE7F00000F177ED807F04B5A6C6C4B5A6C6C4B5AD8007FED1FC0D93FE0
ECFF80D90FFED90FFEC7FC0101B612F0D9003F1480020101F0C8FC3D5E7DBF42>I<133C
13FF487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA41201EA007FA213
3FB3B3AC497E497EB612E0A41B5F7DDE23>105 D<EB03C0EA07FFB5FCA41201EA007FA2
133FB3B3B3B3AD497E497EB612F0A41C647DE323>108 D<D903C0D9FFC0EC07FED807FF
010301F891381FFFC0B5010F01FE027F13F0923D3F00FF8001F807FC0378903B3FC003C0
01FEDAC1E090261FE00FC77E0001D9C3C090260FF01E6E7ED8007F49902607F81C6E7E02
C7C75CD93FCE6E6C486E7E02CC166002DC16E002D85E02F8DA01FF6F7E4A5EA24A93C8FC
A44A5DB3B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>I<
D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1
C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3B349
6C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>I<EDFF80020F13F8023F13FE9139FF
007F80D903FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F80EB00FE49C8127F017E81496F
7E48486F7E00038349150700078348486F7EA2001F83491501A2003F83A348486F7EA400
FF1880AC007F1800A26D5DA2003F5FA36C6C4B5AA36C6C4B5A00075FA26C6C4B5A6C6C4B
5AA26C6C4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB07F8D903FCEB1FE0D900FFEB7F
806EB5C8FC020F13F8020113C039417CBF42>I<D903C0EB7FC0D807FF903807FFFCB501
1F13FFDB7F0013C003F8EB1FF0DAC3E0EB07F80001D9C7806D7E26007FCFC76C7E02DE6E
7ED93FFC6F7E4A6F7E4A82181F4A82727E5C727EA2727EA3727EA41A8084AC4E1300A54E
5AA2611807A24E5A6E5E181F6E4B5A6E5E187F6E4B5A02DE4A90C7FC02CF4A5ADAC78049
5ADAC3C0EB0FF0DAC1F0EB3FE0913AC07E01FF806FB448C8FC030F13F80300138093CAFC
B3A3497E497EB612F0A4415B7DBE49>I<9039078003F8D807FFEB0FFFB5013F13C09238
7C0FE0913881F01F9238E03FF00001EB838039007F8700148FEB3F8E029CEB1FE0EE0FC0
0298EB030002B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>
114 D<9139FFE00180010FEBFC03017FEBFF073A01FF001FCFD803F8EB03EFD807E0EB01
FF48487F4848147F48C8123F003E151F007E150F127CA200FC1507A316037EA27E7F6C7E
6D91C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14F0011F80010714
FED9007F7F02031480DA003F13C01503030013E0167F00E0ED1FF0160F17F86C15071603
A36C1501A37EA26C16F016037E17E06D14076DEC0FC06D1580D8FDF0141FD8F8F8EC7F00
013E14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D417DBF34>I<1438
A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F90B6FCB8FCA32600
07F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C148016076D6C14006E6C5A91383FC01E91
381FF07C6EB45A020313E09138007F802B597FD733>I<D903C0150FD807FFED1FFFB502
03B5FCA40001ED0007D8007F1501A2013F81B3B25FA35FA35F011F15066E140E5F130F6E
4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00FFC01F8091393FFFFE00020F13F8
020001C0EC800042407DBE49>I<B66C49B512E0A4000101F8C8387FFE0026007FE0ED1F
F819E0013F705A61131F6E93C7FC130F180E6E151E0107161C8001035EA26E1578010116
70806D5EA26F1301027F5DA26E6C495AA26F1307021F92C8FCA26E6C130EA26F131E0207
141CA26F133C020314388102015CA26F13F06E5C168092387F81C0A216C3033F5B16E3DB
1FE7C9FCA216FF6F5AA26F5AA36F5AA26F5AA36F5A433F7FBD46>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 1177 763 a Ff(R)l(UTGERS)43 b(UNIVERSITY)438
946 y(Departmen)l(t)h(of)f(Electrical)j(and)e(Computer)f(Engineering)
803 1128 y(14:332:479)e(In)l(tro)t(duction)k(to)d(VLSI)i(Design)1522
1311 y(Assignmen)l(t)g(IV)1133 1494 y(Assigned:)60 b(No)l(v)l(em)l(b)t
(er)44 b(9,)e(2005)1264 1676 y(Due)i(No)l(v)l(em)l(b)t(er)g(16,)f(2005)
0 2259 y Fe(Reading)35 b(Assignmen)m(t:)91 b Fd(Chapters)30
b(4,)h(5,)g(and)f(Section)g(6.2)h(of)g(W)-8 b(este)32
b(and)e(Harris.)141 2372 y(No)h(collab)s(oration)e(is)h(p)s(ermitted)f
(on)h(this)f(assignmen)m(t.)41 b(Y)-8 b(our)30 b(w)m(ork)h(m)m(ust)f(b)
s(e)g(y)m(our)g(o)m(wn.)111 2566 y(1.)46 b(\()p Fe(Circuit)52
b(Extraction)f(of)h(Equiv)-6 b(alen)m(t)51 b(Resistances)i(and)e
(Capacitances.)p Fd(\))84 b(Consider)43 b(the)227 2678
y(follo)m(wing)23 b(la)m(y)m(out)i(for)f(a)h(bus)e(driv)m(er,)h(the)h
(long)f(in)m(terconnect,)i(and)d(the)i(t)m(w)m(o)h(p-c)m(hannel)d
(transistors)g(that)227 2791 y(represen)m(t)28 b(the)h(load)f(on)g(the)
g(bus)f(in)g(Figure)g(1.)41 b(Use)28 b(T)-8 b(able)28
b(4.7)h(in)e(the)h(text)h(to)g(calculate)g(these)f(v)-5
b(alues.)227 2904 y(Y)d(ou)37 b(need)f Fc(t)671 2918
y Fb(ox)783 2904 y Fd(=)f(40)p Fc(Ang)s(str)s(oms)h Fd(for)f(the)i
(TSMC)e(0)p Fc(:)p Fd(18)h Fc(\026m)g Fd(pro)s(cess)f(in)g(order)h(to)h
(use)e(these)i(tables.)227 3017 y(Assume)32 b(that)h(eac)m(h)h(con)m
(tact)h(resistance)d(is)f(20)p Fc(:)p Fd(0\012)j(for)e(metal1-p)s(oly)
-8 b(,)33 b(20)p Fc(:)p Fd(0\012)h(for)e(metal1-)i(p-di\013usion,)227
3130 y(and)41 b(20)p Fc(:)p Fd(0\012)i(for)f(metal1-)h(n-di\013usion)c
(and)i(use)g(T)-8 b(able)42 b(1)g(and)f(T)-8 b(able)41
b(4.9)i(in)e(W)-8 b(este)43 b(and)f(Harris)e(to)227 3243
y(calculate)30 b(y)m(our)g(wire)e(resistances)i(and)f(drain)e
(capacitances.)42 b(Appro)m(ximate)30 b(fringing)d(capacitance)k(b)m(y)
227 3356 y(simply)22 b(doubling)f(the)k(wiring)c(capacitance)26
b(\(ho)m(w)m(ev)m(er,)h(note)e(that)g(this)e(appro)m(ximation)g(is)g
(increasingly)227 3469 y(incorrect)46 b(as)f(w)m(e)h(scale)g(do)m
(wn\).)86 b(Based)46 b(on)f(the)h(form)m(ulae)f(giv)m(en)h(in)e
(lecture)h(and)g(in)f(W)-8 b(este)48 b(and)547 3731 y(T)-8
b(able)30 b(1:)42 b(T)m(ypical)29 b(Sheet)h(Resistances)h(for)f
(Conductors)g(in)f(0.18)j Fc(\026m)e Fd(Pro)s(cess)p
1267 3760 1366 4 v 1265 3873 4 113 v 1317 3839 a(Material)p
1943 3873 V 341 w Fc(R)2063 3853 y Fb(s)2130 3839 y Fd(\(\012/Square\))
p 2631 3873 V 1267 3877 1366 4 v 1267 3893 V 1265 4006
4 113 v 1317 3972 a(Metal1)p 1943 4006 V 617 w(0.08)p
2631 4006 V 1267 4009 1366 4 v 1265 4122 4 113 v 1317
4088 a(P)m(olysilicon)p 1943 4122 V 463 w(10.0)p 2631
4122 V 1267 4126 1366 4 v 1265 4239 4 113 v 1317 4205
a(Di\013usion)f(\(n+\))p 1943 4239 V 313 w(10.0)p 2631
4239 V 1267 4242 1366 4 v 1265 4355 4 113 v 1317 4321
a(Di\013usion)g(\(p+\))p 1943 4355 V 313 w(10.0)p 2631
4355 V 1267 4358 1366 4 v 227 4542 a(Eshraghian,)g(calculate)i(the)g
(follo)m(wing)d(v)-5 b(alues)30 b(for)g(this)g(circuit)f(net)h
(\(assuming)g Fc(\025)25 b Fd(=)g(0)p Fc(:)p Fd(09)p
Fc(\026m)p Fd(\):)266 4723 y(\(a\))46 b Fc(C)492 4737
y Fb(L)544 4723 y Fd(,)26 b(the)f(load)e(capacitance)j(\(view)e(the)g
(gates)i(of)f(the)f(driv)m(en)f(in)m(v)m(erters)h(as)h(capacitors\).)39
b(Calculate)427 4836 y(exact)23 b(geometric)f(areas)g(for)f(all)f
(wiring)f(comp)s(onen)m(ts)i(of)g Fc(C)2453 4850 y Fb(L)2526
4836 y Fd(and)g(use)g(the)g(appropriate)f(co)s(e\016cien)m(ts)427
4949 y(b)s(elo)m(w)j(to)i(\014nd)d(all)g(comp)s(onen)m(t)j
(capacitances.)39 b(Y)-8 b(ou)25 b(need)e(not)h(apply)e(all)h(of)h(the)
g(rules)e(in)h(the)h(b)s(o)s(ok)427 5062 y(for)k(un)m(usual)d(shap)s
(es.)39 b(Just)27 b(break)g(the)h(la)m(y)m(out)h(in)m(to)e(rectangles)h
(and)f(calculate)h(load)f(capacitance)427 5175 y(based)j(on)h
(rectangles.)261 5315 y(\(b\))45 b(The)30 b(output)g(rise)g(time)g
Fc(t)1320 5329 y Fb(r)1388 5315 y Fd(for)g(the)g(bus)g(driv)m(er.)271
5454 y(\(c\))46 b(The)30 b(output)g(fall)f(time)h Fc(t)1306
5469 y Fb(f)1382 5454 y Fd(for)g(the)g(bus)g(driv)m(er.)261
5594 y(\(d\))45 b(The)26 b(maxim)m(um)f(propagation)h(dela)m(y)h
(through)e(the)i(in)m(terconnect)g(wiring)c(from)j(the)h(driv)m(er)e
(to)i(the)427 5707 y(load)j(furthest)g(a)m(w)m(a)m(y)-8
b(.)1927 5956 y(1)p eop
%%Page: 2 2
2 1 bop 271 399 a Fd(\(e\))46 b(Adjust)30 b(this)f(propagation)h(dela)m
(y)h(to)g(accoun)m(t)h(for)e(capacitiv)m(e)h(fringing)d(\014eld)h
(e\013ects.)276 545 y(\(f)7 b(\))46 b(The)30 b Fc(\034)654
559 y Fb(av)763 545 y Fd(a)m(v)m(erage)j(gate)f(dela)m(y)e(for)g(the)h
(bus)e(driv)m(er.)266 691 y(\(g\))46 b(The)30 b(total)h(propagation)g
(dela)m(y)f(\(gate)i(dela)m(y)f(+)f(propagation)g(dela)m(y)g(through)g
(the)h(wire\).)227 878 y(Sho)m(w)j(all)f(calculations)h(in)f(detail)g
(in)g(order)h(to)h(receiv)m(e)g(the)g(maxim)m(um)e(partial)g(credit.)52
b(Also,)35 b(please)227 991 y(note)f(that)f(y)m(ou)g(m)m(ust)f(allo)m
(w)g(for)h(the)g(di\013eren)m(t)f(p)s(ossibilities)c(of)33
b(transistors)f(b)s(eing)f(on)h(in)g(the)g(driving)227
1104 y(logic)i(gate.)52 b(In)33 b(order)g(to)i(receiv)m(e)f(maxim)m(um)
f(credit)g(for)g(this)g(problem,)g(y)m(ou)h(m)m(ust)g(sho)m(w)g(all)e
(of)i(y)m(our)227 1217 y(w)m(ork.)50 b(Use)34 b(a)g(ruler)e(to)i
(measure)f(the)h(la)m(y)m(out)g(or)g(edit)f(the)g(la)m(y)m(out)i(for)e
(cell)f Fa(homework4assignment04)227 1330 y Fd(in)43
b(Cadence)h(library)d Fa(/c)-5 b(aip/u3/bushnel)5 b(l/tryme)48
b Fd(using)43 b Fa(layoutPlus)i Fd(and)e(use)g(electronic)h(rulers)e
(to)227 1443 y(measure)36 b(this)e(la)m(y)m(out.)56 b(The)35
b(p)s(eople)g(who)g(get)h(high)e(grades)i(on)f(this)f(assignmen)m(t)i
(are)f(the)h(ones)f(who)227 1556 y(are)c(fairly)e(careful)g(ab)s(out)h
(mo)s(deling)f(parasitics)g(in)g(the)i(la)m(y)m(out.)111
1743 y(2.)46 b(\()p Fe(Reduction)41 b(of)f(CMOS)f(Propagation)i(Dela)m
(y)e(in)h(Long)g(Buses.)p Fd(\))55 b(Consider)32 b(again)j(the)g(prior)
227 1856 y(problem.)k(Answ)m(er)30 b(the)h(follo)m(wing)e(questions)g
(ab)s(out)h(the)h(circuit:)266 2044 y(\(a\))46 b(Will)22
b(it)h(sp)s(eed)f(up)g(the)i(circuit)e(to)i(break)f(the)h(wire)e(in)m
(to)i(t)m(w)m(o)g(lengths)f(and)g(use)g(a)g(bu\013er)g(\(consisting)427
2157 y(of)i(t)m(w)m(o)g(cascaded)h(in)m(v)m(erters\))e(in)f(b)s(et)m(w)
m(een)i(the)f(t)m(w)m(o)i(lengths?)38 b(In)23 b(order)h(to)h(determine)
e(the)i(answ)m(er,)427 2270 y(y)m(ou)36 b(m)m(ust)e(assume)h(minimal)d
(wiring)h(distance)h(b)s(et)m(w)m(een)i(the)f(t)m(w)m(o)h(static)g(in)m
(v)m(erters)f(making)f(up)427 2383 y(the)i(bu\013er.)55
b(Also,)36 b(y)m(ou)g(m)m(ust)g(recalculate)f(all)g(wiring)e(dela)m(ys)
i(for)g(the)h(\014rst)f(wire)f(segmen)m(t)j(and)427 2496
y(the)26 b(second)g(wire)e(segmen)m(t.)41 b(If)25 b(it)g(pa)m(ys)h(to)g
(break)g(the)g(wire)e(in)m(to)i(t)m(w)m(o)h(lengths,)f(ho)m(w)g(m)m(uc)
m(h)f(shorter)427 2609 y(will)g(the)i(new)f(propagation)h(dela)m(y)g(b)
s(e?)39 b(Do)28 b(not)f(forget)h(to)f(include)e(the)i(e\013ect)i(of)e
(the)g(new)g(bu\013er.)261 2755 y(\(b\))45 b(W)-8 b(ould)30
b(it)g(b)s(e)g(ev)m(en)h(b)s(etter)f(to)h(break)g(the)f(wire)f(in)m(to)
i(three)f(lengths?)111 2942 y(3.)46 b(\()p Fe(Static)26
b(CMOS)g(Deco)s(der)h(Design.)p Fd(\))39 b(Design)22
b(a)h(logic)g(sc)m(hematic,)i(a)e(transistor)f(sc)m(hematic,)k(a)d
(stic)m(ks)227 3055 y(diagram,)36 b(and)f(a)h(circuit)e(la)m(y)m(out)i
(\(using)e(the)i(TSMC)e(0.18)p Fc(\026m)i Fd(rules\))e(for)h(a)h(t)m(w)
m(o-input,)h(four-output)227 3168 y(deco)s(der.)j(Use)27
b(only)e(CMOS)h(transmission)f(gates,)k(pass)d(transistors,)h(and)f(in)
m(v)m(erters.)39 b(Imp)s(ortan)m(t)27 b(hin)m(t:)227
3281 y(Use)35 b(a)h(regular)d(gate)k(matrix)d(la)m(y)m(out)i(st)m(yle)f
(for)f(this)g(design.)52 b(Use)36 b(p-c)m(hannel)e(MOSFET's)g(to)h
(realize)227 3394 y(the)41 b(conditions)e(for)h(deco)s(ding)f(eac)m(h)j
(output)e(\(pulling)d(it)j(to)h(logic)g(1\))g(when)e(it)h(is)f
(selected.)72 b(Use)41 b(a)227 3507 y(w)m(eak)31 b(n-c)m(hannel)f
(MOSFET)g(transistor)f(on)h(eac)m(h)i(output)e(to)h(pull)d(it)i(do)m
(wn)f(to)i(logic)f(0)h(when)e(it)h(is)g(not)227 3620
y(b)s(eing)25 b(deco)s(ded.)39 b(T)-8 b(urn)25 b(in)g(the)i(follo)m
(wing)e(items:)38 b(a)27 b(logic)f(sc)m(hematic)h(\(generated)g(b)m(y)g
Fe(Cadence)p Fd(\),)g(logic)227 3733 y(sim)m(ulation)k(results)h(for)h
(all)f(p)s(ossible)f(input)g(com)m(binations)h(\(generated)i(b)m(y)f
Fe(Cadence)p Fd(\),)h(a)g(transistor)227 3846 y(sc)m(hematic)27
b(\(generated)f(b)m(y)g Fe(Cadence)p Fd(\),)h(switc)m(h)e(lev)m(el)g
(sim)m(ulation)e(results)i(for)g(all)f(p)s(ossible)g(input)f(com-)227
3958 y(binations)k(\(generated)k(b)m(y)e Fe(Sp)s(ectre)p
Fd(\),)h(a)f(la)m(y)m(out)i(\(generated)f(b)m(y)f Fe(Cadence)p
Fd(\),)h(and)e(analog)i(sim)m(ulation)227 4071 y(results)i(for)h(the)g
(la)m(y)m(out)g(\(generated)i(b)m(y)d Fe(Sp)s(ectre)p
Fd(\).)49 b(Submission)29 b(of)k(the)h(stic)m(ks)f(diagram)f(is)g
(optional)227 4184 y(but)e(the)h(stic)m(ks)f(are)h(v)m(ery)g(helpful)c
(for)j(this)f(problem.)1927 5956 y(2)p eop
%%Page: 3 3
3 2 bop 0 5206 a @beginspecial 72 @llx 72 @lly 540 @urx
720 @ury 3960 @rwi @setspecial
%%BeginDocument: homework4assignment04.ps
%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.  
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def 
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage 
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to 
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs. 
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath 
    x1 y1 moveto
    x2 y1 lineto 
    x2 y2 lineto 
    x1 y2 lineto 
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse 
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont 
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%    
%
/rfe
{
/width exch def
5 1 roll
moveto
    
xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/ta 10 array def
	/cta ta def
	/tc 0 def
	/sa 10 array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc 10 lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc 9 gt tc 10 mod 0 eq and
	{
		cta /cta 10 array dup def put
	} if

	tc 10 mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup 9 gt 1 index 10 mod 0 eq and
			{
				/cta cta 10 get def
			}
			if

			10 mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup 9 gt 1 index 10 mod 0 eq and
			{
				/cta cta 10 get def
			}
			if

			cta exch 10 mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto 
} bind def
%******************************************************************************
%
/dslt  { 
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto 
} bind def
%******************************************************************************
%
/dlv  { 
  rlineto 
} bind def
%******************************************************************************
%
/dle  { 
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto 
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  { 
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  { 
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave 
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath 
    x1 y1 moveto
    x2 y1 lineto 
    x2 y2 lineto 
    x1 y2 lineto 
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  { 
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  { 
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  { 
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  { 
    closepath
    gsave 
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore    
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  { 
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  { 
    /radius exch def
    /y exch def
    /x exch def

    newpath 
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  { 
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath 
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  { 
    /radius exch def
    /y exch def
    /x exch def

          newpath 
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  { 
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    
    newpath
    x y xradius yradius 0 360 ellipse 
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  { 
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def
    
    newpath
    x y xradius yradius 0 360 ellipse 
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  { 
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse 
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse 
        gsave
        0 color ne { setLineColor } if
        stroke 
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    { 
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  { 
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  { 
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  { 
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash 
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {    
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  { 
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue 
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 200 4800 6300 600 pap
%%Page: 0
gis
0 1330 4799 4969 clwin
0 1330 4799 4969 clwin
0 1330 4799 4970 clwin
1 fds
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 fde
1 sfp
0 800 400 slc
0 800 400 sfc
ssls
3744 4118 4799 4969 dbf
851 1055 3744 4118 dbu
273 4118 2638 4969 dbf
851 2365 273 4118 dbu
3744 4458 4084 4798 dbf
340 340 3744 4458 dbu
3919 4628 dpb
3914 4633 dpv
3909 4628 dpv
3914 4623 dpv
dpf
3919 4628 dpb
3914 4633 dpv
3909 4628 dpv
3914 4623 dpv
dpu
2094 4458 2434 4798 dbf
340 340 2094 4458 dbu
2269 4628 dpb
2264 4633 dpv
2259 4628 dpv
2264 4623 dpv
dpf
2269 4628 dpb
2264 4633 dpv
2259 4628 dpv
2264 4623 dpv
dpu
0 800 400 slc
0 800 400 sfc
187 0 2638 2978 dls
2 fds
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 fde
2 sfp
2638 2961 dpb
2825 2961 dpv
2825 2995 dpv
2638 2995 dpv
dpf
2638 2961 dpb
2825 2961 dpv
2825 2995 dpv
2638 2995 dpv
dpu
-51 51 2689 2927 dls
2701 2939 dpb
2650 2990 dpv
2626 2966 dpv
2677 2915 dpv
dpf
2701 2939 dpb
2650 2990 dpv
2626 2966 dpv
2677 2915 dpv
dpu
-51 -51 2689 3029 dls
2677 3041 dpb
2626 2990 dpv
2650 2966 dpv
2701 3017 dpv
dpf
2677 3041 dpb
2626 2990 dpv
2650 2966 dpv
2701 3017 dpv
dpu
51 51 2774 2927 dls
2786 2915 dpb
2837 2966 dpv
2813 2990 dpv
2762 2939 dpv
dpf
2786 2915 dpb
2837 2966 dpv
2813 2990 dpv
2762 2939 dpv
dpu
-51 51 2825 2978 dls
2837 2990 dpb
2786 3041 dpv
2762 3017 dpv
2813 2966 dpv
dpf
2837 2990 dpb
2786 3041 dpv
2762 3017 dpv
2813 2966 dpv
dpu
954 2077 988 2111 dbf
34 34 954 2077 dbu
340 0 2825 2978 dls
2825 2927 dpb
3165 2927 dpv
3165 3029 dpv
2825 3029 dpv
dpf
2825 2927 dpb
3165 2927 dpv
3165 3029 dpv
2825 3029 dpv
dpu
648 2791 dlt
0 187 dlv
1990 0 dlv
dle
699 2791 dpb
699 2927 dpv
2638 2927 dpv
2638 3029 dpv
597 3029 dpv
597 2791 dpv
dpf
699 2791 dpb
699 2927 dpv
2638 2927 dpv
2638 3029 dpv
597 3029 dpv
597 2791 dpv
dpu
3131 2927 3267 3063 dbf
136 136 3131 2927 dbu
3204 2995 dpb
3199 3000 dpv
3194 2995 dpv
3199 2990 dpv
dpf
3204 2995 dpb
3199 3000 dpv
3194 2995 dpv
3199 2990 dpv
dpu
1651 2927 1788 3063 dbf
136 137 1651 2927 dbu
1724 2995 dpb
1719 3000 dpv
1714 2995 dpv
1719 2990 dpv
dpf
1724 2995 dpb
1719 3000 dpv
1714 2995 dpv
1719 2990 dpv
dpu
563 2655 699 2791 dbf
136 136 563 2655 dbu
636 2723 dpb
631 2728 dpv
626 2723 dpv
631 2718 dpv
dpf
636 2723 dpb
631 2728 dpv
626 2723 dpv
631 2718 dpv
dpu
3846 4560 3982 4696 dbf
136 136 3846 4560 dbu
2196 4560 2332 4696 dbf
136 136 2196 4560 dbu
1000 502 0 slc
1000 502 0 sfc
0 306 4509 4254 dls
4560 4254 dpb
4560 4560 dpv
4458 4560 dpv
4458 4254 dpv
dpf
4560 4254 dpb
4560 4560 dpv
4458 4560 dpv
4458 4254 dpv
dpu
0 306 4237 4254 dls
4288 4254 dpb
4288 4560 dpv
4186 4560 dpv
4186 4254 dpv
dpf
4288 4254 dpb
4288 4560 dpv
4186 4560 dpv
4186 4254 dpv
dpu
272 0 1379 4407 dls
1379 4356 dpb
1651 4356 dpv
1651 4458 dpv
1379 4458 dpv
dpf
1379 4356 dpb
1651 4356 dpv
1651 4458 dpv
1379 4458 dpv
dpu
629 0 614 4407 dls
614 4356 dpb
1243 4356 dpv
1243 4458 dpv
614 4458 dpv
dpf
614 4356 dpb
1243 4356 dpv
1243 4458 dpv
614 4458 dpv
dpu
2213 2655 2349 2791 dbf
136 136 2213 2655 dbu
1651 4356 1788 4492 dbf
136 137 1651 4356 dbu
1243 4356 1379 4492 dbf
136 136 1243 4356 dbu
4152 4560 4288 4696 dbf
136 136 4152 4560 dbu
4225 4628 dpb
4220 4633 dpv
4215 4628 dpv
4220 4623 dpv
dpf
4225 4628 dpb
4220 4633 dpv
4215 4628 dpv
4220 4623 dpv
dpu
4424 4560 4560 4696 dbf
136 136 4424 4560 dbu
4497 4628 dpb
4492 4633 dpv
4487 4628 dpv
4492 4623 dpv
dpf
4497 4628 dpb
4492 4633 dpv
4487 4628 dpv
4492 4623 dpv
dpu
478 4356 614 4492 dbf
136 136 478 4356 dbu
551 4424 dpb
546 4429 dpv
541 4424 dpv
546 4419 dpv
dpf
551 4424 dpb
546 4429 dpv
541 4424 dpv
546 4419 dpv
dpu
903 4356 1039 4492 dbf
136 136 903 4356 dbu
976 4424 dpb
971 4429 dpv
966 4424 dpv
971 4419 dpv
dpf
976 4424 dpb
971 4429 dpv
966 4424 dpv
971 4419 dpv
dpu
0 800 400 slc
0 800 400 sfc
238 238 529 2859 dbu
238 816 767 2859 dbu
238 782 1856 2859 dbu
238 238 2825 2859 dbu
272 273 3063 2859 dbu
272 273 1583 2859 dbu
272 272 495 2587 dbu
272 272 3778 4492 dbu
272 272 2128 4492 dbu
1000 502 0 slc
1000 502 0 sfc
238 153 682 4288 dbu
238 68 1107 4288 dbu
238 136 1447 4288 dbu
306 238 4118 4186 dbu
306 272 4356 4186 dbu
272 272 2145 2587 dbu
272 273 1583 4288 dbu
272 272 1175 4288 dbu
272 272 4084 4492 dbu
272 272 4356 4492 dbu
272 272 410 4288 dbu
272 272 835 4288 dbu
1000 0 0 slc
1000 0 0 sfc
-51 -51 3710 3063 dls
3 fds
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 fde
3 sfp
3698 3075 dpb
3647 3024 dpv
3671 3000 dpv
3722 3051 dpv
dpf
3698 3075 dpb
3647 3024 dpv
3671 3000 dpv
3722 3051 dpv
dpu
187 0 3659 3012 dls
3659 2995 dpb
3846 2995 dpv
3846 3029 dpv
3659 3029 dpv
dpf
3659 2995 dpb
3846 2995 dpv
3846 3029 dpv
3659 3029 dpv
dpu
-51 51 3710 2961 dls
3722 2973 dpb
3671 3024 dpv
3647 3000 dpv
3698 2949 dpv
dpf
3722 2973 dpb
3671 3024 dpv
3647 3000 dpv
3698 2949 dpv
dpu
-51 51 3846 3012 dls
3858 3024 dpb
3807 3075 dpv
3783 3051 dpv
3834 3000 dpv
dpf
3858 3024 dpb
3807 3075 dpv
3783 3051 dpv
3834 3000 dpv
dpu
51 51 3795 2961 dls
3807 2949 dpb
3858 3000 dpv
3834 3024 dpv
3783 2973 dpv
dpf
3807 2949 dpb
3858 3000 dpv
3834 3024 dpv
3783 2973 dpv
dpu
4118 3148 dlt
0 1242 dlv
510 0 dlv
dle
4152 3148 dpb
4152 4356 dpv
4628 4356 dpv
4628 4424 dpv
4084 4424 dpv
4084 3148 dpv
dpf
4152 3148 dpb
4152 4356 dpv
4628 4356 dpv
4628 4424 dpv
4084 4424 dpv
4084 3148 dpv
dpu
306 0 3846 3012 dls
3846 2876 dpb
4152 2876 dpv
4152 3148 dpv
3846 3148 dpv
dpf
3846 2876 dpb
4152 2876 dpv
4152 3148 dpv
3846 3148 dpv
dpu
289 0 3370 3012 dls
3370 2876 dpb
3659 2876 dpv
3659 3148 dpv
3370 3148 dpv
dpf
3370 2876 dpb
3659 2876 dpv
3659 3148 dpv
3370 3148 dpv
dpu
0 1871 1515 2655 dls
1549 2655 dpb
1549 4526 dpv
1481 4526 dpv
1481 2655 dpv
dpf
1549 2655 dpb
1549 4526 dpv
1481 4526 dpv
1481 2655 dpv
dpu
0 1871 1141 2655 dls
1175 2655 dpb
1175 4526 dpv
1107 4526 dpv
1107 2655 dpv
dpf
1175 2655 dpb
1175 4526 dpv
1107 4526 dpv
1107 2655 dpv
dpu
0 1871 767 2655 dls
801 2655 dpb
801 4526 dpv
733 4526 dpv
733 2655 dpv
dpf
801 2655 dpb
801 4526 dpv
733 4526 dpv
733 2655 dpv
dpu
3370 2927 3506 3063 dbf
136 136 3370 2927 dbu
3443 2995 dpb
3438 3000 dpv
3433 2995 dpv
3438 2990 dpv
dpf
3443 2995 dpb
3438 3000 dpv
3433 2995 dpv
3438 2990 dpv
dpu
0 0 1000 slc
0 0 1000 sfc
103 0 3267 2978 dls
4 fds
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 fde
4 sfp
3267 2927 dpb
3370 2927 dpv
3370 3029 dpv
3267 3029 dpv
dpf
3267 2927 dpb
3370 2927 dpv
3370 3029 dpv
3267 3029 dpv
dpu
0 170 1702 4424 dls
1753 4424 dpb
1753 4594 dpv
1651 4594 dpv
1651 4424 dpv
dpf
1753 4424 dpb
1753 4594 dpv
1651 4594 dpv
1651 4424 dpv
dpu
0 -1293 1328 4356 dls
1277 4356 dpb
1277 3063 dpv
1379 3063 dpv
1379 4356 dpv
dpf
1277 4356 dpb
1277 3063 dpv
1379 3063 dpv
1379 4356 dpv
dpu
1651 3012 dlt
-1088 0 dlv
0 1344 dlv
dle
1651 3063 dpb
614 3063 dpv
614 4356 dpv
512 4356 dpv
512 2961 dpv
1651 2961 dpv
dpf
1651 3063 dpb
614 3063 dpv
614 4356 dpv
512 4356 dpv
512 2961 dpv
1651 2961 dpv
dpu
0 170 971 4424 dls
1022 4424 dpb
1022 4594 dpv
920 4594 dpv
920 4424 dpv
dpf
1022 4424 dpb
1022 4594 dpv
920 4594 dpv
920 4424 dpv
dpu
4167 0 444 4645 dls
444 4594 dpb
4611 4594 dpv
4611 4696 dpv
444 4696 dpv
dpf
444 4594 dpb
4611 4594 dpv
4611 4696 dpv
444 4696 dpv
dpu
4150 0 444 2706 dls
444 2655 dpb
4594 2655 dpv
4594 2757 dpv
444 2757 dpv
dpf
444 2655 dpb
4594 2655 dpv
4594 2757 dpv
444 2757 dpv
dpu
3131 2927 3267 3063 dbf
136 136 3131 2927 dbu
3204 2995 dpb
3199 3000 dpv
3194 2995 dpv
3199 2990 dpv
dpf
3204 2995 dpb
3199 3000 dpv
3194 2995 dpv
3199 2990 dpv
dpu
1651 2927 1788 3063 dbf
136 137 1651 2927 dbu
1724 2995 dpb
1719 3000 dpv
1714 2995 dpv
1719 2990 dpv
dpf
1724 2995 dpb
1719 3000 dpv
1714 2995 dpv
1719 2990 dpv
dpu
563 2655 699 2791 dbf
136 136 563 2655 dbu
636 2723 dpb
631 2728 dpv
626 2723 dpv
631 2718 dpv
dpf
636 2723 dpb
631 2728 dpv
626 2723 dpv
631 2718 dpv
dpu
3846 4560 3982 4696 dbf
136 136 3846 4560 dbu
3919 4628 dpb
3914 4633 dpv
3909 4628 dpv
3914 4623 dpv
dpf
3919 4628 dpb
3914 4633 dpv
3909 4628 dpv
3914 4623 dpv
dpu
2196 4560 2332 4696 dbf
136 136 2196 4560 dbu
2269 4628 dpb
2264 4633 dpv
2259 4628 dpv
2264 4623 dpv
dpf
2269 4628 dpb
2264 4633 dpv
2259 4628 dpv
2264 4623 dpv
dpu
2213 2655 2349 2791 dbf
136 136 2213 2655 dbu
1651 4356 1788 4492 dbf
136 137 1651 4356 dbu
1243 4356 1379 4492 dbf
136 136 1243 4356 dbu
4152 4560 4288 4696 dbf
136 136 4152 4560 dbu
4225 4628 dpb
4220 4633 dpv
4215 4628 dpv
4220 4623 dpv
dpf
4225 4628 dpb
4220 4633 dpv
4215 4628 dpv
4220 4623 dpv
dpu
4424 4560 4560 4696 dbf
136 136 4424 4560 dbu
4497 4628 dpb
4492 4633 dpv
4487 4628 dpv
4492 4623 dpv
dpf
4497 4628 dpb
4492 4633 dpv
4487 4628 dpv
4492 4623 dpv
dpu
478 4356 614 4492 dbf
136 136 478 4356 dbu
551 4424 dpb
546 4429 dpv
541 4424 dpv
546 4419 dpv
dpf
551 4424 dpb
546 4429 dpv
541 4424 dpv
546 4419 dpv
dpu
903 4356 1039 4492 dbf
136 136 903 4356 dbu
976 4424 dpb
971 4429 dpv
966 4424 dpv
971 4419 dpv
dpf
976 4424 dpb
971 4429 dpv
966 4424 dpv
971 4419 dpv
dpu
3370 2927 3506 3063 dbf
136 136 3370 2927 dbu
3443 2995 dpb
3438 3000 dpv
3433 2995 dpv
3438 2990 dpv
dpf
3443 2995 dpb
3438 3000 dpv
3433 2995 dpv
3438 2990 dpv
dpu
502 149 149 slc
0 0 0 sfc
3165 2961 3233 3029 dbs
1685 2961 1753 3029 dbs
597 2689 665 2757 dbs
3880 4594 3948 4662 dbs
2230 4594 2298 4662 dbs
2247 2689 2315 2757 dbs
1685 4390 1753 4458 dbs
1277 4390 1345 4458 dbs
4186 4594 4254 4662 dbs
4458 4594 4526 4662 dbs
512 4390 580 4458 dbs
937 4390 1005 4458 dbs
3404 2961 3472 3029 dbs
1000 1000 1000 slc
1000 1000 1000 sfc
0 -226 3724 1633 dls
3724 1601 dlt
22 22 dlv
22 10 dlv
32 0 dlv
22 -10 dlv
21 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-21 -22 dlv
-22 -11 dlv
-32 0 dlv
-22 11 dlv
-22 22 dlv
dle
3973 1633 dlt
-22 -10 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
21 22 dlv
11 32 dlv
0 22 dlv
-11 32 dlv
-21 22 dlv
-22 10 dlv
-32 0 dlv
dle
0 -227 4135 1709 dls
64 -151 4200 1633 dls
4329 1633 dlt
-65 -151 dlv
-21 -43 dlv
-22 -22 dlv
-21 -10 dlv
-11 0 dlv
dle
8 0 4012 1617 dls
0 8 4016 1613 dls
3886 1964 dlt
10 -11 dlv
11 11 dlv
-11 11 dlv
-10 -11 dlv
dle
0 -152 3896 1889 dls
0 -152 3983 1889 dls
3983 1845 dlt
32 33 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
11 -33 dlv
0 -108 dlv
dle
8 0 3995 1873 dls
0 9 3999 1868 dls
0 -227 3444 2236 dls
0 -152 3649 2161 dls
3649 2128 dlt
-22 22 dlv
-21 11 dlv
-33 0 dlv
-21 -11 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
22 22 dlv
dle
0 -152 3735 2161 dls
3735 2118 dlt
33 32 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
11 -32 dlv
0 -109 dlv
dle
3854 2118 dlt
32 32 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
11 -32 dlv
0 -109 dlv
dle
0 -227 4059 2236 dls
4059 2128 dlt
22 22 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
22 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-22 -22 dlv
-21 -11 dlv
-33 0 dlv
-21 11 dlv
-22 22 dlv
dle
0 -227 4383 2236 dls
4383 2128 dlt
-21 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-22 -22 dlv
-10 -32 dlv
0 -22 dlv
10 -32 dlv
22 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
21 22 dlv
dle
0 -152 4588 2161 dls
4588 2128 dlt
-21 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
21 22 dlv
dle
8 0 4012 2145 dls
0 8 4016 2141 dls
3582 2508 dlt
151 0 dlv
-108 -226 dlv
dle
3928 2508 dlt
-108 0 dlv
-11 -97 dlv
11 11 dlv
32 11 dlv
33 0 dlv
32 -11 dlv
22 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-22 -22 dlv
-32 -10 dlv
-33 0 dlv
-32 10 dlv
-11 11 dlv
-11 22 dlv
dle
4079 2508 dlt
-32 -10 dlv
-22 -33 dlv
-11 -54 dlv
0 -32 dlv
11 -54 dlv
22 -33 dlv
32 -10 dlv
22 0 dlv
32 10 dlv
22 33 dlv
11 54 dlv
0 32 dlv
-11 54 dlv
-22 33 dlv
-32 10 dlv
-22 0 dlv
dle
-152 -226 4166 2508 dls
4295 2508 dlt
-32 -10 dlv
-22 -33 dlv
-11 -54 dlv
0 -32 dlv
11 -54 dlv
22 -33 dlv
32 -10 dlv
22 0 dlv
32 10 dlv
22 33 dlv
11 54 dlv
0 32 dlv
-11 54 dlv
-22 33 dlv
-32 10 dlv
-22 0 dlv
dle
-152 -226 4382 2508 dls
8 0 3978 2417 dls
0 8 3982 2413 dls
0 -227 2099 1709 dls
2099 1601 dlt
-22 22 dlv
-21 10 dlv
-33 0 dlv
-21 -10 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
22 22 dlv
dle
2174 1709 dlt
11 -11 dlv
11 11 dlv
-11 11 dlv
-11 -11 dlv
dle
0 -151 2185 1633 dls
2336 1709 dlt
-21 0 dlv
-22 -11 dlv
-11 -32 dlv
0 -184 dlv
dle
76 0 2250 1633 dls
2466 1709 dlt
-22 0 dlv
-21 -11 dlv
-11 -32 dlv
0 -184 dlv
dle
75 0 2380 1633 dls
2531 1633 dlt
0 -108 dlv
11 -32 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
33 32 dlv
dle
0 -151 2650 1633 dls
2844 1601 dlt
-11 22 dlv
-32 10 dlv
-33 0 dlv
-32 -10 dlv
-11 -22 dlv
11 -22 dlv
22 -10 dlv
54 -11 dlv
21 -11 dlv
11 -22 dlv
0 -10 dlv
-11 -22 dlv
-32 -11 dlv
-33 0 dlv
-32 11 dlv
-11 22 dlv
dle
2909 1709 dlt
11 -11 dlv
10 11 dlv
-10 11 dlv
-11 -11 dlv
dle
0 -151 2920 1633 dls
3049 1633 dlt
-21 -10 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
22 22 dlv
11 32 dlv
0 22 dlv
-11 32 dlv
-22 22 dlv
-21 10 dlv
-33 0 dlv
dle
0 -151 3211 1633 dls
3211 1590 dlt
33 33 dlv
21 10 dlv
33 0 dlv
21 -10 dlv
11 -33 dlv
0 -108 dlv
dle
8 0 2651 1617 dls
0 8 2655 1613 dls
2559 1964 dlt
10 -11 dlv
11 11 dlv
-11 11 dlv
-10 -11 dlv
dle
0 -152 2569 1889 dls
0 -152 2656 1889 dls
2656 1845 dlt
32 33 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
11 -33 dlv
0 -108 dlv
dle
8 0 2668 1873 dls
0 9 2672 1868 dls
0 -227 2083 2236 dls
0 -152 2288 2161 dls
2288 2128 dlt
-22 22 dlv
-21 11 dlv
-33 0 dlv
-21 -11 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
22 22 dlv
dle
0 -152 2374 2161 dls
2374 2118 dlt
33 32 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
11 -32 dlv
0 -109 dlv
dle
2493 2118 dlt
33 32 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
11 -32 dlv
0 -109 dlv
dle
0 -227 2698 2236 dls
2698 2128 dlt
22 22 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
21 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-21 -22 dlv
-22 -11 dlv
-32 0 dlv
-22 11 dlv
-22 22 dlv
dle
0 -227 3022 2236 dls
3022 2128 dlt
-21 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
21 22 dlv
dle
0 -152 3228 2161 dls
3228 2128 dlt
-22 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
22 22 dlv
dle
8 0 2651 2145 dls
0 8 2655 2141 dls
2368 2508 dlt
-108 0 dlv
-11 -97 dlv
11 11 dlv
32 11 dlv
33 0 dlv
32 -11 dlv
22 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-22 -22 dlv
-32 -10 dlv
-33 0 dlv
-32 10 dlv
-11 11 dlv
-11 22 dlv
dle
2454 2508 dlt
152 0 dlv
-108 -226 dlv
dle
2735 2508 dlt
-32 -10 dlv
-22 -33 dlv
-11 -54 dlv
0 -32 dlv
11 -54 dlv
22 -33 dlv
32 -10 dlv
22 0 dlv
32 10 dlv
22 33 dlv
11 54 dlv
0 32 dlv
-11 54 dlv
-22 33 dlv
-32 10 dlv
-22 0 dlv
dle
-152 -226 2822 2508 dls
2951 2508 dlt
-32 -10 dlv
-22 -33 dlv
-11 -54 dlv
0 -32 dlv
11 -54 dlv
22 -33 dlv
32 -10 dlv
22 0 dlv
32 10 dlv
22 33 dlv
11 54 dlv
0 32 dlv
-11 54 dlv
-22 33 dlv
-32 10 dlv
-22 0 dlv
dle
-152 -226 3038 2508 dls
8 0 2634 2417 dls
0 8 2638 2413 dls
0 -227 637 2032 dls
0 -152 842 1957 dls
842 1924 dlt
-22 22 dlv
-21 11 dlv
-33 0 dlv
-21 -11 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
22 22 dlv
dle
0 -152 928 1957 dls
928 1913 dlt
33 33 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
11 -33 dlv
0 -108 dlv
dle
1047 1913 dlt
33 33 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
11 -33 dlv
0 -108 dlv
dle
0 -227 1252 2032 dls
1252 1924 dlt
22 22 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
21 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-21 -22 dlv
-22 -11 dlv
-32 0 dlv
-22 11 dlv
-22 22 dlv
dle
0 -227 1576 2032 dls
1576 1924 dlt
-21 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
21 22 dlv
dle
0 -152 1782 1957 dls
1782 1924 dlt
-22 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -11 dlv
32 0 dlv
22 11 dlv
22 22 dlv
dle
8 0 1205 1941 dls
0 9 1209 1936 dls
297 2363 dlt
22 11 dlv
32 32 dlv
0 -226 dlv
dle
9 0 320 2315 dls
0 8 325 2311 dls
0 -226 484 2406 dls
0 -151 689 2331 dls
689 2298 dlt
-22 22 dlv
-21 11 dlv
-33 0 dlv
-21 -11 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -10 dlv
33 0 dlv
21 10 dlv
22 22 dlv
dle
0 -151 775 2331 dls
775 2288 dlt
33 32 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
11 -32 dlv
0 -108 dlv
dle
894 2288 dlt
32 32 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
11 -32 dlv
0 -108 dlv
dle
0 -226 1099 2406 dls
1099 2298 dlt
22 22 dlv
21 11 dlv
33 0 dlv
21 -11 dlv
22 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-22 -22 dlv
-21 -10 dlv
-33 0 dlv
-21 10 dlv
-22 22 dlv
dle
0 -226 1423 2406 dls
1423 2298 dlt
-21 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-22 -22 dlv
-10 -32 dlv
0 -22 dlv
10 -32 dlv
22 -22 dlv
22 -10 dlv
32 0 dlv
22 10 dlv
21 22 dlv
dle
0 -151 1629 2331 dls
1629 2298 dlt
-22 22 dlv
-22 11 dlv
-32 0 dlv
-22 -11 dlv
-21 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
21 -22 dlv
22 -10 dlv
32 0 dlv
22 10 dlv
22 22 dlv
dle
8 0 1052 2315 dls
0 8 1056 2311 dls
0 -227 43 2032 dls
43 1924 dlt
21 22 dlv
22 11 dlv
32 0 dlv
22 -11 dlv
22 -22 dlv
10 -32 dlv
0 -22 dlv
-10 -32 dlv
-22 -22 dlv
-22 -11 dlv
-32 0 dlv
-22 11 dlv
-21 22 dlv
dle
65 -152 226 1957 dls
356 1957 dlt
-65 -152 dlv
-21 -43 dlv
-22 -21 dlv
-22 -11 dlv
-10 0 dlv
dle
9 0 184 1941 dls
0 9 188 1936 dls
417 1989 dlt
21 11 dlv
33 32 dlv
0 -227 dlv
dle
8 0 440 1941 dls
0 9 444 1936 dls
0 -227 615 1675 dls
615 1567 dlt
22 22 dlv
21 10 dlv
33 0 dlv
21 -10 dlv
22 -22 dlv
11 -32 dlv
0 -22 dlv
-11 -32 dlv
-22 -22 dlv
-21 -11 dlv
-33 0 dlv
-21 11 dlv
-22 22 dlv
dle
863 1599 dlt
-21 -10 dlv
-22 -22 dlv
-11 -32 dlv
0 -22 dlv
11 -32 dlv
22 -22 dlv
21 -11 dlv
33 0 dlv
21 11 dlv
22 22 dlv
11 32 dlv
0 22 dlv
-11 32 dlv
-22 22 dlv
-21 10 dlv
-33 0 dlv
dle
118 -151 1015 1599 dls
-118 -151 1133 1599 dls
8 0 865 1583 dls
0 8 869 1579 dls
gfs
%%Trailer
%%EOF

%%EndDocument
 @endspecial 1162 5360 a Fd(Figure)30 b(1:)41 b(La)m(y)m(out)32
b(for)e(Circuit)f(Extraction)1927 5956 y(3)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
