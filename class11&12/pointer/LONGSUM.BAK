#include<iostream.h>
#include<string.h>
#include<conio.h>
#include<stdio.h>

struct number
{	int digit;
	number *next;
};

class longnum
{       char numarr[80];
	public:
	number *top,*newnode,*tempnode;
	int count;
	longnum()
	{	top=NULL;
	}
	number *creanode(int n)
	{	tempnode=new number;
		tempnode->digit=n;
		tempnode->next=NULL;
		return tempnode;
	}
	void push(number*);
	void show(number*);
	void getnum()
	{	cout<<"\nEnter number:";
		gets(numarr);
	}
	void makestak()
	{	int dig,i=0;
		while(numarr[i]!='\0')
		{	dig=(int)numarr[i]-48;
			newnode=creanode(dig);
			push(newnode);
			i++;
		}
		count=i;
	}
};

void longnum::push(number *nn)
{	if(top==NULL)
		top=nn;
	else
	{	tempnum=top;
		top=nn;
		nn->next=tempnum;
	}
}

void longnum::show(number *np)
{	while(np!=NULL)
	{	cout<<np->digit;
		np=np->next;
	}
}

void main()
{	clrscr();
	longnum obj1,obj2,obj3,a,b;
	obj1.getnum();
	obj1.makestak();
	cout<<"\n";
	obj2.getnum();
	obj2.makestak();
	cout<<"\n";
	if(obj1.count>=obj2.count)
	{	a=obj1;
		b=obj2;
	}
	else
	{	a=obj2;
		b=obj1;
	}
	int newdig=0,carry=0,flag=1;
	while(a.top!=NULL)
	{	if(flag==1)
			newdig=a.top->digit+b.top->digit+carry;
		else
			newdig=a.top->digit+carry;
		if(newdig>9)
		{	newdig=newdig-10;
			carry=1;
		}
		else
			carry=0;
		obj3.newnode=obj3.creanode(newdig);
		obj3.push(obj3.newnode);
		a.top=a.top->next;
		if(flag==1)
		{	if(b.top->next==NULL)
				flag=0;
			else
				b.top=b.top->next;
		}
	}
	if(carry>0)
	{	obj3.newnode=obj3.creanode(carry);
		obj3.push(obj3.newnode);
	}
	cout<<"\nThe sum is= ";
	obj3.show(obj3.top);
	getche();
}
